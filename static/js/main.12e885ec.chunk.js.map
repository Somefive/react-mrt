{"version":3,"sources":["components/mrt-viewer/data-view.js","components/mrt-viewer/node.js","components/logo.svg","components/mrt-viewer/renderer.js","components/mrt-viewer/data-layout.js","components/mrt-viewer/index.js","components/toolbox/tool.js","components/toolbox/index.js","components/index.js","App.js","serviceWorker.js","index.js"],"names":["adapter","paper","userEdits","id","year","venue","trim","title","citations","references","score","prefix","venue_year","exec","length","text","replace","abstract","edits","DataView","data","config","HideSubBranch","EraMinRatio","LastEraRatio","this","root","papers","branches","_","flatten","map","years","forEach","cluster","clusterID","branch","idx","raw","isSub","branchID","push","eras","__calculateEras","grid","__calculateGrid","gridT","col","i","row","ncols","nrows","clusterWords","clusterNames","name","split","capitalize","words","join","eraMinRatio","lastEraRatio","sort","reverse","_to","_cnt","eraMinSize","lastEraMinSize","from","to","cnt","era","eraID","cell","Math","floor","pins","filter","a","b","pin","ThumbUpColor","chroma","luminance","desaturate","ThumbDownColor","ExchangeColor","AbstractColor","NodeText","props","state","expand","hover","setState","iconSize","EditIconSize","texts","_idx","isFocus","collapseHandler","textPieces","fullTextPieces","abstractHeight","abstractPieces","secondaryLineHeight","iconY","lineHeight","editButtonMarginTop","textWidth","fullTextWidth","generateEditIcon","T","dx","fill","action","transform","className","style","transformOrigin","onClick","onEdit","width","height","isUp","rate","isDown","transformOriginX","scaleOrigin","key","onMouseOver","onHover","onMouseLeave","x","textLeadingMargin","radius","y","fontSize","textColor","_text","secondaryFontSize","editable","IconExchange","IconThumbsUpSolid","IconThumbsUp","IconThumbsDownSolid","IconThumbsDown","React","Component","_extends","Object","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref3","_ref4","_ref5","_ref","svgRef","viewBox","ref","ForwardRef","forwardRef","Renderer","toExchange","focusCell","focusPaper","onEditChange","_width","horizon","headerBackgroundColor","defs","def","x1","y1","x2","y2","gradientUnits","offset","stopColor","randomstring","generate","CellOrbmentRadius","CellTextLineHeight","CellTextSecondaryLineHeight","span","CellWidth","CellTextWidth","fullSpan","color","CellTextFontSize","CellTextSecondaryFontSize","strokeWidth","CellStrokeWidth","CellTextLeadMargin","onExpand","j","renderText","cx","cy","r","stroke","renderOrbment","edges","edge","opacity","BottomLabelTextFontSize","CellPaddingLeft","BottomLabelTextLineHeight","label","TopLabelTextFontSize","clusterBottomLabels","clusterTopLabels","gradientY","bottomY","layout","selecting","hidden","segments","visibility","backgroundSelectionColors","backgroundGradientSelectionColors","backgroundTextSelectionColors","segment","sid","word","backgroundSolidColors","backgroundGradientSolidColors","backgroundTextSolidColors","renderTopLabel","authors","textAnchor","links","path","CellLinkStroke","strokeDasharray","CellLinkStrokeArray","performance","mark","param","renderedColorDefs","renderColorDefs","measure","renderedTexts","renderTexts","renderedHeader","renderHeader","renderedOrbments","renderOrbments","renderedEdges","renderEdges","renderedLinks","renderLinks","renderedClusterLabels","renderClusterLabels","renderedClusterSelectionLabels","renderedEras","renderEras","renderAuthors","authorColor","getEntriesByType","console","log","duration","clearMeasures","clearMarks","stdDeviation","in","DataLayout","dataView","__initConfig","__initAuxFunc","__initDataView","__initColors","__placeRoot","HorizonMarginTop","__placeGrid","reduce","prev","max","__placeEdges","clusterLabelsHeight","__placeClusterBottomLabels","__placeClusterTopLabels","__initBackgroundColors","__placeLinks","CellOrbmentOffsetX","CellOrbmentOffsetY","CellPaddingTop","CellTextOffsetX","CellTextOffsetY","CellPaddingRight","CellTextExpandWidth","cellTextWidth","nodeTextFold","textLength","match","RegExp","line","nodeTextSecondaryFold","nodeTextCustomizeFold","rootColor","scale","rootTextColor","darken","hex","clusterColors","cubehelix","start","rotations","gamma","lightness","correctLightness","colors","branchColors","range","branchTextColors","clusterTopLabelColors","gradientColor","expandable","_y","CellTextMargin","CellPaddingBottom","HorizonMarginBottom","disableTextBranchSpan","DisableTextClusterSpan","overlayed","top","bottom","right","addEdge","addVerticalEdge","addHorizontalEdge","cellLeft","cellRight","_branch","startEra","endEra","_nextBranch","yStart","sib","yEnd","pieces","_sibBranch","TopLabelTextLineHeight","p1","p2","mx","src","tgt","pid","rid","__placeLink","MRTViewer","DefaultConfig","dataLayout","Tool","primary","icon","theme","type","twoToneColor","tooltipText","children","Toolbox","onLike","onHideSubBranch","onDisableTextClusterSpan","e","onLoadJson","larger","scaleFont","zoom","full","capture","setTimeout","QRCode","toCanvas","document","getElementById","window","location","href","error","lang","translation","TooltipTextTranslation","t","toLowerCase","like","hideSubBranch","disableTextClusterSpan","click","onChange","MRT","viewerScale","fontExtraSize","svgLib","saveSvgAsPng","srcWidth","baseVal","outputWidth","body","clientWidth","min","files","reader","FileReader","onload","JSON","parse","result","readAsText","undefined","App","sample_data","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.12e885ec.chunk.js","sourcesContent":["import _ from 'lodash'\n\nfunction adapter(paper, userEdits) {\n    const id = paper[\"paper_id\"]\n    const year = paper[\"paper_year\"]\n    const venue = paper[\"paper_venue\"].trim()\n    const title = paper[\"paper_title\"].trim()\n    const citations = paper[\"citations\"] || []\n    const references = paper[\"references\"] || []\n    const score = paper[\"paper_citations\"]\n    let prefix = `${year}`\n    const venue_year = /^(19|20)\\d{2}\\b/.exec(venue)\n    if (venue_year == null && venue.length > 0) {\n        prefix = `${year} ${venue}`\n    } else if (venue_year != null) {\n        prefix = `${venue}`\n    }\n    const text = `[${prefix}] ${title}`.replace('\\t', ' ').replace('\\n', ' ')\n    const abstract = paper[\"paper_abstract\"] ? paper[\"paper_abstract\"].trim().replace('\\t', ' ') : \"\"\n    const edits = userEdits[id]\n    return {id, year, venue, title, citations, references, score, text, abstract, edits}\n}\n\nexport default class DataView {\n \n    constructor(data, userEdits, config) {\n        const { HideSubBranch, EraMinRatio, LastEraRatio } = config\n        this.root = adapter(data.root, userEdits)\n        this.papers = {}\n        const branches = _.flatten(data.branches).map(() => [])\n        const years = []\n        data.branches.forEach((cluster, clusterID) => \n            cluster.forEach((branch, idx) => {\n                if (HideSubBranch && idx > 0) return\n                branch.forEach(raw => {\n                    const paper = adapter(raw, userEdits)\n                    paper.isSub = idx > 0\n                    paper.clusterID = paper.edits ? paper.edits.clusterID : clusterID\n                    paper.branchID = paper.clusterID * 2 + paper.isSub\n                    branches[paper.branchID].push(paper)\n                    years.push(paper.year)\n                    this.papers[paper.id] = paper\n                })\n            }\n        ))\n        this.eras = this.__calculateEras(years, EraMinRatio, LastEraRatio)\n        this.grid = this.__calculateGrid(this.eras, branches)\n        this.gridT = this.grid[0].map((col, i) => this.grid.map(row => row[i]))\n        this.ncols = this.gridT.length\n        this.nrows = this.grid.length\n        this.clusterWords = data.clusterNames.map(name => name.split(' ').map(_.capitalize))\n        this.clusterNames = this.clusterWords.map(words => words.join(' '))\n    }\n\n    __calculateEras(years, eraMinRatio, lastEraRatio) {\n        years.sort().reverse()\n        let eras = []\n        let _to = years[0]\n        let _cnt = 1\n        let eraMinSize = eraMinRatio * years.length\n        let lastEraMinSize = lastEraRatio * years.length\n        for (let i = 1; i < years.length; i++) {\n            if (years[i] === years[i-1] || _cnt < eraMinSize || i > years.length - lastEraMinSize) _cnt += 1\n            else {\n                eras.push({from: years[i-1], to: _to, cnt: _cnt})\n                _to = years[i]\n                _cnt = 1\n            }\n        }\n        eras.push({from: years[years.length-1], to: _to, cnt: _cnt})\n        return eras\n    }\n\n    __calculateGrid(eras, branches) {\n        return eras.map((era, eraID) => branches.map((branch, branchID) => {\n            const cell = {\n                eraID, branchID,\n                clusterID: Math.floor(branchID / 2),\n                pins: branch.filter(paper => paper.year >= era.from && paper.year <= era.to)\n                    .sort((a, b) => (a.year === b.year) ? (b.citations - a.citations) : (b.year - a.year))\n            }\n            cell.pins.forEach(pin => pin.cell = cell)\n            return cell\n        }))\n    }\n}","import React from 'react'\nimport { ReactComponent as IconThumbsUp } from '@ant-design/icons-svg/inline-svg/outline/like.svg'\nimport { ReactComponent as IconThumbsDown } from '@ant-design/icons-svg/inline-svg/outline/dislike.svg'\nimport { ReactComponent as IconThumbsUpSolid } from '@ant-design/icons-svg/inline-svg/fill/like.svg'\nimport { ReactComponent as IconThumbsDownSolid } from '@ant-design/icons-svg/inline-svg/fill/dislike.svg'\nimport { ReactComponent as IconExchange } from '@ant-design/icons-svg/inline-svg/outline/pull-request.svg'\nimport chroma from 'chroma-js'\nimport './node.css'\n\nconst ThumbUpColor = chroma(\"green\").luminance(0.3).desaturate(1)\nconst ThumbDownColor = chroma(\"red\").luminance(0.3).desaturate(2)\nconst ExchangeColor = chroma(\"blue\").luminance(0.3).desaturate(1)\nconst AbstractColor = chroma(\"grey\").luminance(0.1)\n\nexport class NodeText extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { expand: null }\n    }\n\n    onHover(hover) {\n        if (!hover && this.state.expand !== null) this.setState({expand: null})\n    }\n\n    render() {\n        this.config = this.props.config\n        const iconSize = this.config.EditIconSize\n        const texts = this.props.pins.map((pin, _idx) => {\n            const isFocus = this.state.expand === pin\n            const collapseHandler = () => this.setState({expand: (isFocus ? null : pin)})\n            const textPieces = isFocus ? pin.fullTextPieces : pin.textPieces\n            const abstractHeight = pin.abstractPieces.length * this.props.secondaryLineHeight\n            const iconY = (textPieces.length - 1) * this.props.lineHeight + this.props.editButtonMarginTop + isFocus * abstractHeight\n            const textWidth = isFocus ? pin.cell.fullTextWidth : pin.cell.textWidth\n            const generateEditIcon = (T, dx, fill, action) => <g transform={`translate(${textWidth-iconSize*dx}, ${iconY})`}>\n                <g className=\"paper-edit-icon\" style={{transformOrigin: `${iconSize/2}px ${iconSize/2}px`}}\n                    onClick={action === \"collapse\" ? collapseHandler : (() => this.props.onEdit(action, pin))}>\n                    <T className=\"paper-edit-icon\" fill={fill} width={iconSize} height={iconSize}/>\n                    <rect className=\"paper-edit-icon\" width={iconSize} height={iconSize} fill=\"transparent\"/>\n                </g>\n            </g>\n            const isUp = pin.edits && pin.edits.rate > 0\n            const isDown = pin.edits && pin.edits.rate < 0\n            const transformOriginX = (this.props.scaleOrigin === \"left\") ? 0 : (this.props.scaleOrigin === \"middle\" ? (textWidth / 2) : textWidth)\n            return (\n                <g className=\"paper-view-group-outer\"\n                    key={_idx}\n                    onMouseOver={() => this.onHover(true)}\n                    onMouseLeave={() => this.onHover(false)}\n                    transform={`translate(${pin.x+this.props.textLeadingMargin + this.props.radius}, ${pin.y})`}>\n                    <g className=\"paper-view-group-inner\" style={{transformOrigin: `${transformOriginX}px ${-this.props.lineHeight}px`}}>\n                        <rect className=\"paper-text-background\" x={-this.props.lineHeight} y={-this.props.lineHeight * 2.5}\n                            width={textWidth+2*this.props.lineHeight} height={this.props.lineHeight * 4 + iconY + iconSize}\n                            fill=\"white\" filter=\"url(#blur-filter)\"/>\n                        <text className=\"paper-text\" fontSize={this.props.fontSize} fill={pin.cell.textColor} onClick={collapseHandler}>\n                            {textPieces.map((_text, idx) => <tspan key={idx} x=\"0\" y={idx * this.props.lineHeight}>{_text}</tspan>)}\n                        </text>\n                        {isFocus && \n                            <text className=\"paper-abstract-inner\" fontSize={this.props.secondaryFontSize} fill={AbstractColor}>\n                                {pin.abstractPieces.map((_text, idx) => <tspan key={idx} x=\"0\" y={textPieces.length * this.props.lineHeight + idx * this.props.secondaryLineHeight}>{_text}</tspan>)}\n                            </text>}\n                        <g className=\"paper-edit-icon-group\">\n                            {this.props.editable && generateEditIcon(IconExchange, 4.5, ExchangeColor, \"to-exchange\")}\n                            {generateEditIcon(isUp ? IconThumbsUpSolid : IconThumbsUp, 3, ThumbUpColor, isUp ? \"thumb-delete\" : \"thumb-up\")}\n                            {generateEditIcon(isDown ? IconThumbsDownSolid : IconThumbsDown, 1.5, ThumbDownColor, isDown ? \"thumb-delete\" : \"thumb-down\")}\n                        </g>\n                    </g>\n                </g>\n            )\n        })\n        return (\n            <g className=\"era-node-text-group\">\n                {texts.reverse()}\n            </g>\n        )\n    }\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M520.650142 80.061167L369.746208 410.281909l269.859169-71.853003 1.641632-0.631397-120.596867-257.736342z\",\n  fill: \"#E9624C\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M256.852386 657.03194l385.909977 121.859662 100.392157-222.756937-76.272784-163.279319-333.251449 96.098656-76.777901 168.077938z\",\n  fill: \"#2A698D\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M92.689111 1015.791836h865.266741L773.966704 622.052534l-102.286349 232.227895-442.735726-136.381798L92.689111 1015.791836z\",\n  fill: \"#233D7E\"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M484.281662 0H0v1015.791836h6.187693L483.650265 1.641633l0.631397-1.641633zM555.376989 0l0.505117 1.136515 483.271427 1014.655321h4.293501V0H555.376989z\",\n  fill: \"#3C3837\"\n});\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 1024 1024\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.7ecb0366.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport _ from 'lodash'\nimport randomstring from 'randomstring'\nimport { NodeText, CellText } from './node'\nimport { ReactComponent as Logo } from '../logo.svg'\n\nconst EDITBUTTONMARGINTOP = 10\n\nexport class Renderer extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {toExchange: null, focusCell: null, focusPaper: null}\n    }\n\n    onEditChange(edits) {\n        if (this.props.onEditChange) this.props.onEditChange(edits)\n    }\n\n    renderHeader(_width, horizon, headerBackgroundColor) {\n        return (\n            <g className=\"mrt-background\">\n                <rect x=\"0\" y=\"0\" width={_width} height={horizon} fill={headerBackgroundColor}/>\n            </g>\n        )\n    }\n\n    renderColorDefs(defs) {\n        return defs.map(def => \n            <defs key={def.id}>\n                <linearGradient id={def.id} x1={def.x1} y1={def.y1} x2={def.x2} y2={def.y2} gradientUnits=\"userSpaceOnUse\">\n                    <stop offset=\"20%\" stopColor={def.from} />\n                    <stop offset=\"80%\" stopColor={def.to} />\n                </linearGradient>\n            </defs>\n        )\n    }\n\n    renderText(cell, ncols, onEdit) {\n        // return cell.pins.map((pin, idx) => <CellText key={idx} pin={pin} config={this.config}/>)\n        return <NodeText key={randomstring.generate(4)}\n            config={this.config}\n            pins={cell.pins} \n            x={cell.x} y={cell.y}\n            radius={this.config.CellOrbmentRadius}\n            lineHeight={cell.lineHeight || this.config.CellTextLineHeight}\n            secondaryLineHeight={cell.secondaryLineHeight || this.config.CellTextSecondaryLineHeight}\n            textWidth={(cell.span - 1) * this.config.CellWidth + this.config.CellTextWidth}\n            fullTextWidth={(cell.fullSpan - 1) * this.config.CellWidth + this.config.CellTextWidth}\n            color={cell.color}\n            textColor={cell.textColor}\n            fontSize={cell.fontSize || this.config.CellTextFontSize}\n            secondaryFontSize={cell.secondaryFontSize || this.config.CellTextSecondaryFontSize}\n            strokeWidth={this.config.CellStrokeWidth}\n            onEdit={onEdit}\n            textLeadingMargin={this.config.CellTextLeadMargin}\n            editable={typeof(cell.clusterID) !== \"undefined\"}\n            editButtonMarginTop={EDITBUTTONMARGINTOP}\n            scaleOrigin={(cell.branchID >= ncols - 2) ? \"right\" : ((cell.branchID === ncols - 3) ? \"middle\" : \"left\")}\n            onExpand={(focusPaper) => this.setState({ focusPaper })}/>\n    }\n\n    renderTexts(grid, onEdit) {\n        const ncols = grid[0].length\n        return grid.map((row, i) => row.map((cell, j) => cell.pins.length > 0 && this.renderText(cell, ncols, onEdit) ))\n    }\n\n    renderOrbment(cell) {\n        return <circle key={`${cell.x}-${cell.y}`} className=\"era-node-circle\" cx={cell.x} cy={cell.y} r={this.config.CellOrbmentRadius}\n        onMouseOver={() => this.setState({focusCell: cell}) }\n        onMouseLeave={() => this.setState({focusCell: null})}\n        stroke={cell.color} strokeWidth={this.config.CellStrokeWidth}\n        fill={this.state.focusCell === cell ? cell.color : \"white\"}/>\n    }\n\n    renderOrbments(grid) {\n        return grid.map((row, i) => row.map((cell, j) => cell.pins.length > 0 && \n            this.renderOrbment(cell)))\n    }\n\n    renderEdges(edges) {\n        return edges.map((edge, idx) => \n            <line key={idx} x1={edge.x1} y1={edge.y1} x2={edge.x2} y2={edge.y2}\n                strokeWidth={this.config.CellStrokeWidth - 1} stroke={edge.color}/>)\n    }\n\n    renderEras(eras, _width, config) {\n        return eras.map((era, idx) => \n            <g key={idx} className=\"mrt-era-background\">\n                <rect className=\"mrt-era-background\" x=\"0\" y={era.y} \n                    width={_width} height={era.height} opacity={(this.state.focusCell && idx === this.state.focusCell.eraID) ? 0.1 : 0}/>\n                <text className=\"mrt-era-background\" fontSize={config.BottomLabelTextFontSize}\n                    x={this.config.CellPaddingLeft} y={era.y + era.height - config.BottomLabelTextLineHeight / 2}\n                    opacity={(this.state.focusCell && idx === this.state.focusCell.eraID) ? 0.2 : 0}>\n                    {era.from === era.to ? era.from : `${era.from} - ${era.to}`}\n                </text>\n            </g>)\n    }\n\n    renderTopLabel(label) {\n        return <text key={`${label.x}-${label.y}`} x={label.x} y={label.y} fill={label.color} fontSize={this.config.TopLabelTextFontSize}>\n            {label.text}\n        </text>\n    }\n\n    renderClusterLabels(clusterBottomLabels, clusterTopLabels, horizon, gradientY, bottomY, layout, selecting, onEdit) {\n        const hidden = this.state.toExchange === null\n        if (selecting) \n            return clusterBottomLabels.map((segments, idx) => {\n                return <g className=\"mrt-background\" key={idx} opacity={hidden ? 0 : 1}\n                    visibility={hidden ? \"hidden\" : \"none\"} onClick={() => onEdit(\"exchange\", this.state.toExchange, idx)}>\n                    <rect className=\"mrt-background-card\" x={this.config.CellWidth*idx*2} y={horizon}\n                        width={this.config.CellWidth*2} height={gradientY-horizon}\n                        fill={layout.backgroundSelectionColors[idx]}/>\n                    <rect className=\"mrt-background-card\" x={this.config.CellWidth*idx*2} y={gradientY} \n                        width={this.config.CellWidth*2} height={bottomY-gradientY}\n                        fill={layout.backgroundGradientSelectionColors[idx]}/>\n                    <text className=\"mrt-background-text\" fontSize={this.config.BottomLabelTextFontSize}\n                        fill={layout.backgroundTextSelectionColors[idx]}>\n                        {segments.map((segment, sid) => \n                            <tspan key={sid} x={segment.x} y={segment.y}>{segment.word}</tspan>\n                        )}\n                    </text>\n                </g>\n            })\n        else\n            return clusterBottomLabels.map((segments, idx) => {\n                return [(<g className=\"mrt-background\" key={idx} opacity={hidden ? 1 : 0}>\n                    <rect x={this.config.CellWidth*idx*2} y={horizon}\n                        width={this.config.CellWidth*2} height={gradientY-horizon}\n                        fill={layout.backgroundSolidColors[idx]}/>\n                    <rect x={this.config.CellWidth*idx*2} y={gradientY} \n                        width={this.config.CellWidth*2} height={bottomY-gradientY}\n                        fill={layout.backgroundGradientSolidColors[idx]}/>\n                    <text fontSize={this.config.BottomLabelTextFontSize}\n                        fill={layout.backgroundTextSolidColors[idx]}>\n                        {segments.map((segment, sid) => \n                            <tspan key={sid} x={segment.x} y={segment.y}>{segment.word}</tspan>\n                        )}\n                    </text>\n                </g>), this.renderTopLabel(clusterTopLabels[idx])]\n            })\n    }\n\n    renderAuthors(authors, _width, bottomY, color) {\n        return (\n            <g opacity=\"0.5\" transform={`translate(${_width}, ${bottomY-this.config.BottomLabelTextLineHeight * 0.5})`}>                    \n                <Logo x={-this.config.BottomLabelTextFontSize * 3.35}\n                    y={-this.config.BottomLabelTextFontSize * 1.78}\n                    height={this.config.BottomLabelTextFontSize * 0.8}\n                    width={this.config.BottomLabelTextFontSize * 0.8}/>\n                <text x={-this.config.BottomLabelTextFontSize * 0.1}\n                    y={-this.config.BottomLabelTextFontSize * 0.05} textAnchor=\"end\"\n                    fontSize={this.config.BottomLabelTextFontSize * 0.75}\n                    fill={color}>{(authors || []).join(', ')}\n                </text>\n                <text x={-this.config.BottomLabelTextFontSize * 0.1} \n                    y={-this.config.BottomLabelTextFontSize * 1} textAnchor=\"end\"\n                    fontSize={this.config.BottomLabelTextFontSize * 0.7}\n                    fill={color}>AMiner\n                </text>\n            </g>\n        )\n    }\n\n    renderLinks(links) {\n        if (!this.state.focusPaper) return\n        const paths = [...(links.references[this.state.focusPaper.id] || []), ...(links.citations[this.state.focusPaper.id] || [])]\n        return paths.map((path, idx) => {\n            return <path key={idx} d={path.d}\n                strokeWidth={this.config.CellLinkStroke} stroke={this.state.focusPaper.cell.color} fill=\"transparent\"\n                strokeDasharray={this.config.CellLinkStrokeArray}/>\n        })\n    }\n\n    render() {\n        performance.mark(\"renderer start\")\n        this.config = this.props.config\n        const layout = this.props.layout\n        const _width = this.props._width\n        const bottomY = this.props.bottomY\n        const root = this.props.root\n        const ncols = this.props.ncols\n        const onEdit = (action, source, param) => {\n            let userEdits = {...this.props.userEdits}\n            if (!userEdits[source.id] && (action === \"thumb-up\" || action === \"thumb-down\" || action === \"exchange\")) {\n                userEdits[source.id] = {rate: 0, clusterID: source.clusterID}\n            }\n            if (action === \"thumb-up\" && userEdits[source.id].rate <= 0) {\n                userEdits[source.id].rate = 1\n                this.onEditChange(userEdits)\n            } else if (action === \"thumb-down\" && userEdits[source.id].rate >= 0) {\n                userEdits[source.id].rate = -1\n                this.onEditChange(userEdits)\n            } else if (action === \"thumb-delete\" && userEdits[source.id] && userEdits[source.id].rate !== 0) {\n                userEdits[source.id].rate = 0\n                this.onEditChange(userEdits)\n            } else if (action === \"to-exchange\" && this.state.toExchange === null) {\n                this.setState({toExchange: source})\n            } else if (action === \"exchange\") {\n                userEdits[source.id].clusterID = param\n                this.onEditChange(userEdits)\n                this.setState({toExchange: null})\n            }\n        }\n        performance.mark(\"colordefs\")\n        const renderedColorDefs = this.renderColorDefs(this.props.defs)\n        performance.measure(\"colordefs\", \"colordefs\")\n        performance.mark(\"texts\")\n        const renderedTexts = this.renderTexts(this.props.grid, onEdit)\n        performance.measure(\"texts\", \"texts\")\n        performance.mark(\"header\")\n        const renderedHeader = this.renderHeader(this.props._width, this.props.horizon, layout.headerBackgroundColor)\n        performance.measure(\"header\", \"header\")\n        performance.mark(\"orb\")\n        const renderedOrbments = this.renderOrbments(this.props.grid)\n        performance.measure(\"orb\", \"orb\")\n        performance.mark(\"edge\")\n        const renderedEdges = this.renderEdges(this.props.edges)\n        performance.measure(\"edge\", \"edge\")\n        performance.mark(\"link\")\n        const renderedLinks = this.renderLinks(this.props.links)\n        performance.measure(\"link\", \"link\")\n        performance.mark(\"cluster label\")\n        const renderedClusterLabels = this.renderClusterLabels(this.props.clusterBottomLabels, this.props.clusterTopLabels, this.props.horizon, this.props.gradientY, bottomY, layout, false, onEdit)\n        const renderedClusterSelectionLabels = this.renderClusterLabels(this.props.clusterBottomLabels, null, this.props.horizon, this.props.gradientY, bottomY, layout, true, onEdit)\n        performance.measure(\"cluster label\", \"cluster label\")\n        performance.mark(\"era\")\n        const renderedEras = this.renderEras(this.props.eras, this.props._width, this.config)\n        performance.measure(\"era\", \"era\")\n        performance.mark(\"author\")\n        const renderAuthors = this.renderAuthors(this.props.authors, this.props._width, bottomY, layout.authorColor)\n        performance.measure(\"author\", \"author\")\n\n        performance.measure(\"renderer total\", \"renderer start\")\n        performance.getEntriesByType(\"measure\").forEach(measure => {\n            console.log(measure.name, measure.duration)\n        })\n        performance.clearMeasures()\n        performance.clearMarks()\n\n        return (\n            <svg width=\"100%\" viewBox={`0 0 ${_width} ${bottomY}`}>\n                {renderedColorDefs}\n                <filter id=\"blur-filter\">\n                    <feGaussianBlur stdDeviation={this.config.CellTextLineHeight} in=\"SourceGraphic\"/>\n                </filter>\n                {renderedHeader}\n                {renderedClusterLabels}\n                {renderedEras}\n                {renderedEdges} \n                {renderedOrbments}\n                <g className=\"mrt-node-text-container\">\n                    {renderedTexts}\n                </g>\n                {this.renderOrbment(root)}\n                {this.renderText(root, ncols, onEdit)}\n                {renderedLinks}\n                {renderedClusterSelectionLabels}\n                {renderAuthors}\n            </svg>\n        )\n    }\n\n}\n","import _ from 'lodash'\nimport chroma from 'chroma-js'\nimport randomstring from 'randomstring'\n\nexport default class DataLayout {\n\n    constructor(config, dataView) {\n        this.__initConfig(config)\n        this.__initAuxFunc()\n        this.__initDataView(dataView)\n        this.__initColors(this.ncols)\n\n        this.__placeRoot(this.root, this.ncols)\n        this.horizon = this.root.height + this.config.HorizonMarginTop\n        this.__placeGrid(this.grid, this.eras, this.horizon)\n        this.gradientY = this.grid[this.nrows-1].reduce((prev, cell) => Math.max(cell.y+cell.height, prev), 0)\n\n        this.edges = this.__placeEdges(this.root, this.gridT, this.ncols, this.horizon)\n\n        console.log(this.config, this.root, this.grid, this.eras)\n\n        this.clusterLabelsHeight = _.max(this.clusterWords.map(words => words.length)) * this.config.BottomLabelTextLineHeight\n        this.bottomY = this.grid[this.nrows-1].reduce((prev, cell) => \n            Math.max(prev, cell.pins.length > 0\n                ? _.max(cell.pins.map(pin => \n                    pin.y + (pin.fullTextPieces.length - 1) * this.config.CellTextLineHeight * 2 + pin.abstractPieces.length * this.config.CellTextSecondaryLineHeight + this.config.CellTextLineHeight * 2\n                ))\n                : 0\n        ), this.gradientY + this.clusterLabelsHeight)\n        this.clusterBottomLabels = this.__placeClusterBottomLabels(this.gradientY + this.clusterLabelsHeight, this.clusterWords)\n        this.clusterTopLabels = this.__placeClusterTopLabels(this.gridT, this.clusterNames)\n        this._width = this.config.CellWidth * this.ncols\n        this.__initBackgroundColors(this.grid, this.gradientY, this.bottomY)\n        this.__placeLinks(this.papers)\n    }\n\n    __initConfig(config) {\n        config.CellOrbmentOffsetX = config.CellPaddingLeft + config.CellOrbmentRadius\n        config.CellOrbmentOffsetY = config.CellPaddingTop + config.CellOrbmentRadius\n        config.CellTextOffsetX = config.CellOrbmentOffsetX + config.CellOrbmentRadius + config.CellTextLeadMargin\n        config.CellTextOffsetY = config.CellOrbmentOffsetY\n        config.CellWidth = config.CellTextOffsetX + config.CellTextWidth + config.CellPaddingRight\n        config.CellTextExpandWidth = config.CellTextWidth + config.CellWidth\n        this.config = config\n    }\n\n    __initDataView(dataView) {\n        this.grid = dataView.grid\n        this.gridT = dataView.gridT\n        this.eras = dataView.eras\n        this.root = dataView.root\n        this.ncols = dataView.ncols\n        this.nrows = dataView.nrows\n        this.clusterWords = dataView.clusterWords\n        this.clusterNames = dataView.clusterNames\n        this.papers = dataView.papers\n    }\n\n    __initAuxFunc() {\n        this.cellTextWidth = (span) => ((span - 1) * this.config.CellWidth + this.config.CellTextWidth)\n        this.nodeTextFold = (text, span) => {\n            const textLength = Math.floor(((span - 1) * this.config.CellWidth + this.config.CellTextWidth) / (this.config.CellTextFontSize * 0.6))\n            return (text.match(new RegExp(`([^\\\\n]{1,${textLength}})(\\\\s|$)`, 'g')) || []).filter(line => line.length > 0)\n        }\n        this.nodeTextSecondaryFold = (text, span) => {\n            const textLength = Math.floor(((span - 1) * this.config.CellWidth + this.config.CellTextWidth) / (this.config.CellTextSecondaryFontSize * 0.6))\n            return (text.match(new RegExp(`([^\\\\n]{1,${textLength}})(\\\\s|$)`, 'g')) || []).filter(line => line.length > 0)\n        }\n        this.nodeTextCustomizeFold = (text, span, fontSize) => {\n            const textLength = Math.floor(((span - 1) * this.config.CellWidth + this.config.CellTextWidth) / (fontSize * 0.6))\n            return (text.match(new RegExp(`([^\\\\n]{1,${textLength}})(\\\\s|$)`, 'g')) || []).filter(line => line.length > 0)\n        }\n    }\n\n    __initColors(ncols) {\n        // This is slow\n        this.rootColor = chroma.scale()(0.5)\n        this.rootTextColor = chroma(this.rootColor).darken().hex()\n        this.headerBackgroundColor = chroma(this.rootColor).luminance(0.9)\n        this.clusterColors = chroma.cubehelix().start(200).rotations(3).gamma(0.7).lightness([0.2, 0.6]).scale().correctLightness().colors(Math.floor(ncols / 2))\n        this.branchColors = _.range(0, ncols).map(j => chroma(this.clusterColors[Math.floor(j / 2)]).luminance(j % 2 === 0 ? 0.25 : 0.5))\n        this.branchTextColors = this.branchColors.map(color => chroma(color).darken().hex())\n        this.clusterTopLabelColors = this.clusterColors.map(color => chroma(color).luminance(0.5).darken(2))\n        this.authorColor = chroma(\"grey\").luminance(0.3).hex()\n        this.defs = []\n    }\n\n    __initBackgroundColors(grid, gradientY, bottomY) {\n        // This is particularly slow\n        const nrows = grid.length\n        this.backgroundSolidColors = this.clusterColors.map(color => chroma(color).luminance(0.9))\n        this.backgroundTextSolidColors = this.clusterColors.map(color => chroma(color).luminance(0.7))\n        this.backgroundGradientSolidColors = this.clusterColors.map((color, idx) => {\n            const x = grid[nrows-1][idx*2].x\n            return this.gradientColor(chroma(color).luminance(0.9), \"white\", x, gradientY, x, bottomY)\n        })\n        this.backgroundSelectionColors = this.clusterColors.map(color => chroma(color).luminance(0.5))\n        this.backgroundTextSelectionColors = this.clusterColors.map(color => chroma(color).luminance(0.2))\n        this.backgroundGradientSelectionColors = this.clusterColors.map((color, idx) => {\n            const x = grid[nrows-1][idx*2].x\n            return this.gradientColor(chroma(color).luminance(0.5), \"white\", x, gradientY, x, bottomY)\n        })\n    }\n\n    gradientColor(from, to, x1, y1, x2, y2) {\n        const id = randomstring.generate(8)\n        this.defs.push({id, from, to, x1, y1, x2, y2})\n        return `url('#${id}')`\n    }\n\n    __placeRoot(root, ncols) {\n        root.x = this.config.CellWidth * (ncols - 1) / 2 + this.config.CellOrbmentOffsetX\n        root.y = this.config.CellOrbmentOffsetY\n        root.expandable = true\n        root.span = ncols / 4\n        root.fullSpan = ncols / 4\n        root.color = this.rootColor\n        root.textColor = this.rootTextColor\n        root.fontSize = this.config.CellTextFontSize * 1.5\n        root.secondaryFontSize = this.config.CellTextSecondaryFontSize * 1.5\n        root.lineHeight = this.config.CellTextLineHeight * 1.5\n        root.secondaryLineHeight = this.config.CellTextSecondaryLineHeight * 1.5\n        root.pins = [{...root, \n            x: root.x,\n            y: root.y,\n            cell: root,\n            textPieces: this.nodeTextCustomizeFold(root.text, root.span, root.fontSize), \n            fullTextPieces: this.nodeTextCustomizeFold(root.text, root.fullSpan, root.fontSize),\n            abstractPieces: this.nodeTextCustomizeFold(root.abstract, root.fullSpan, root.secondaryFontSize),\n        }]\n        root.textWidth = this.cellTextWidth(root.span)\n        root.fullTextWidth = this.cellTextWidth(root.fullSpan)\n        root.pins[0].height = root.pins[0].textPieces.length * this.config.CellTextLineHeight\n        const _y = root.y + root.pins[0].height + this.config.CellTextMargin\n        root.height = Math.max(\n            _y - this.config.CellTextOffsetY - root.y + this.config.CellPaddingBottom,\n            this.config.CellPaddingTop + 2 * this.config.CellOrbmentRadius + this.config.CellPaddingBottom\n        )\n    }\n\n    __placeGrid(grid, eras, horizon) {\n        const ncols = grid[0].length\n        let y = horizon + this.config.HorizonMarginBottom\n        grid.forEach((row, i) => {\n            eras[i].y = y\n            row.forEach((cell, j) => {\n                let _y = y + this.config.CellTextOffsetY\n                cell.x = this.config.CellWidth * j + this.config.CellOrbmentOffsetX\n                cell.y = _y\n                cell.color = this.branchColors[j]\n                cell.textColor = this.branchTextColors[j]\n                // if (cell.pins.length === 0) return\n                cell.expandable = (j+1 < ncols)\n                    && (cell.pins.length > 0)\n                    && (row[j+1].pins.length === 0)\n                    && (!this.config.disableTextBranchSpan)\n                    && (!this.config.DisableTextClusterSpan || j % 2 === 0)\n                cell.span = cell.expandable ? 2 : 1\n                cell.fullSpan = (j+1 < ncols) ? 2 : 1\n                cell.pins.forEach(pin => {\n                    pin.x = cell.x\n                    pin.y = _y\n                    pin.textPieces = this.nodeTextFold(pin.text, cell.span)\n                    pin.fullTextPieces = this.nodeTextFold(pin.text, cell.fullSpan)\n                    pin.abstractPieces = this.nodeTextSecondaryFold(pin.abstract, cell.fullSpan)\n                    pin.height = pin.textPieces.length * this.config.CellTextLineHeight\n                    _y += pin.height + this.config.CellTextMargin\n                })\n                cell.overlayed = j > 0 && row[j-1].expandable\n                cell.textWidth = this.cellTextWidth(cell.span)\n                cell.fullTextWidth = this.cellTextWidth(cell.fullSpan)\n                cell.fontSize = this.config.CellTextFontSize\n                cell.secondaryFontSize = this.config.CellTextSecondaryFontSize\n                cell.lineHeight = this.config.CellTextLineHeight\n                cell.secondaryLineHeight = this.config.CellTextSecondaryLineHeight\n                cell.top = cell.y - this.config.CellTextLineHeight - this.config.CellTextLineHeight\n                cell.bottom = _y\n                cell.right = this.config.CellWidth * j + this.config.CellTextOffsetX + cell.textWidth\n                cell.height = Math.max(\n                    _y - this.config.CellTextOffsetY - y + this.config.CellPaddingBottom,\n                    this.config.CellPaddingTop + 2 * this.config.CellOrbmentRadius + this.config.CellPaddingBottom\n                )\n            })\n            eras[i].height = row.reduce((prev, cell) => Math.max(prev, cell.height), 0)\n            y += eras[i].height\n        })\n    }\n\n    __placeEdges(root, gridT, ncols, horizon) {\n        const edges = []\n        const addEdge = (x1, y1, x2, y2, color) => edges.push({x1, y1, x2, y2, color})\n        const addVerticalEdge = (x, y1, y2, color) => addEdge(x, y1, x, y2, color)\n        const addHorizontalEdge = (x1, x2, y, color) => addEdge(x1, y, x2, y, color)\n        {\n            const cell = root, cellLeft = gridT[0][0], cellRight = gridT[ncols - 2][0]\n            addVerticalEdge(cell.x, cell.y, horizon, this.rootColor)\n            addHorizontalEdge(cellLeft.x, cellRight.x, horizon, this.rootColor)\n        }\n        gridT.forEach((branch, branchID) => {\n            const _branch = branch.filter(cell => cell.pins.length > 0)\n            if (_branch.length === 0 && branchID % 2 === 1) return\n            const startEra = (branchID % 2 === 0) ? 0 : _branch[0].eraID\n            let endEra = (_branch.length > 0) ? _branch[_branch.length-1].eraID : 0\n            if (branchID % 2 === 0) {\n                const _nextBranch = gridT[branchID+1].filter(cell => cell.pins.length > 0)\n                if (_nextBranch.length > 0) endEra = Math.max(endEra, _nextBranch[0].eraID)\n            }\n            for (let eraID = startEra + 1; eraID <= endEra; eraID++) {\n                let cell = branch[eraID]\n                const yStart = cell.overlayed ? cell.top : cell.y\n                cell = branch[eraID-1]\n                let sib = branchID > 0 ? gridT[branchID-1][eraID-1] : null\n                const yEnd = cell.overlayed ? sib.bottom : cell.y\n                addVerticalEdge(cell.x, yStart, yEnd, cell.color)\n            }\n            if (branchID % 2 === 0) {\n                const cell = branch[0]\n                const yEnd = cell.overlayed ? cell.top : cell.y\n                addVerticalEdge(cell.x, horizon, yEnd, this.gradientColor(this.rootColor, cell.color, cell.x, horizon, cell.x, yEnd))\n            } else {\n                const cell = branch[startEra]\n                const sib = gridT[branchID-1][startEra]\n                const yEnd = cell.top\n                const yStart = cell.y\n                addVerticalEdge(cell.x, yStart, yEnd, cell.color)\n                addHorizontalEdge(cell.x, sib.x, yEnd, this.gradientColor(cell.color, sib.color, cell.x, yEnd, sib.x, yEnd))\n            }\n        })\n        return edges\n    }\n\n    __placeClusterBottomLabels(y, clusterWords) {\n        // const clusterLabelsHeight = _.max(clusterWords.map(pieces => pieces.length)) * this.config.BottomLabelTextLineHeight\n        return clusterWords.map((pieces, clusterID) => pieces.reverse().map((word, idx) => { return {\n            word,\n            x: clusterID * 2 * this.config.CellWidth + this.config.CellPaddingLeft + this.config.CellOrbmentRadius,\n            y: y - idx * this.config.BottomLabelTextLineHeight\n        }}))\n    }\n\n    __placeClusterTopLabels(gridT, clusterNames) {\n        return _.range(0, gridT.length , 2).map(idx => {\n            const branch = gridT[idx]\n            const _branch = branch.filter(cell => cell.pins.length > 0)\n            const _sibBranch = gridT[idx+1].filter(cell => cell.pins.length > 0)\n            const color = this.clusterTopLabelColors[Math.floor(idx / 2)]\n            if (_branch.length === 0 && _sibBranch.length === 0) return {x: 0, y: 0, color, text: \"\"}\n            const y = ((_branch.length === 0 || (_sibBranch.length > 0 && _sibBranch[0].eraID <= _branch[0].eraID)) ?\n                (_sibBranch[0].y - this.config.CellOrbmentRadius - this.config.CellTextLineHeight) :\n                (_branch[0].y - this.config.CellTextLineHeight)) - this.config.TopLabelTextLineHeight / 2\n            const x = branch[0].x + this.config.CellOrbmentRadius + this.config.CellTextLeadMargin\n            const text = clusterNames[Math.floor(idx / 2)]\n            return {x, y, color, text}\n        })\n    }\n\n    __placeLink(p1, p2) {\n        const y1 = p1.y, y2 = p2.y\n        const x1 = (p1.x < p2.x && p1.cell.right <= p2.x) ? p1.cell.right : p1.x, x2 = (p2.x < p1.x && p2.cell.right <= p1.x) ? p2.cell.right : p2.x \n        const mx = (p1.x < p2.x && p1.cell.right <= p2.x) ? (p1.cell.right + this.config.CellPaddingRight) : (p1.x - this.config.CellPaddingLeft - this.config.CellOrbmentRadius)\n        let d = `M ${x1} ${y1}`\n        if (y1 === y2) d += ` L ${x2} ${y2}`\n        else d += ` C ${mx} ${y1}, ${mx} ${y1}, ${mx} ${(y1+y2)/2} S ${mx} ${y2}, ${x2} ${y2}`\n        return { src: p1, tgt: p2, d }\n    }\n\n    __placeLinks(papers) {\n        const links = {references: {}, citations: {}}\n        _.forEach(papers, (src, pid) => {\n            links.references[pid] = []\n            links.citations[pid] = []\n        })\n        _.forEach(papers, (src, pid) => {\n            src.references.forEach(rid => {\n                const ref = papers[rid]\n                if (!ref) return\n                links.references[pid].push(this.__placeLink(src, ref))\n                links.citations[rid].push(this.__placeLink(ref, src))\n        })})\n        this.links = links\n    }\n\n}","import React from 'react'\nimport _ from 'lodash'\nimport './index.css'\nimport DefaultConfig from './default-config.json'\nimport DataView from './data-view'\nimport { Renderer } from './renderer'\nimport DataLayout from './data-layout'\n\nexport default class MRTViewer extends React.Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        this.config = {...DefaultConfig, ...this.props.config}\n        performance.mark(\"dataView start\")\n        const dataView = new DataView(this.props.data, this.props.userEdits, this.config)\n        performance.measure(\"dataView total\", \"dataView start\")\n        performance.mark(\"dataLayout start\")\n        const dataLayout = new DataLayout(this.config, dataView)\n        performance.measure(\"dataLayout total\", \"dataLayout start\")\n        return <Renderer\n            config={dataLayout.config} authors={this.props.authors}\n            defs={dataLayout.defs}\n            root={dataLayout.root} grid={dataLayout.grid} edges={dataLayout.edges} eras={dataLayout.eras} ncols={dataLayout.ncols} links={dataLayout.links}\n            clusterBottomLabels={dataLayout.clusterBottomLabels} clusterTopLabels={dataLayout.clusterTopLabels}\n            horizon={dataLayout.horizon} _width={dataLayout._width} gradientY={dataLayout.gradientY} bottomY={dataLayout.bottomY}\n            layout={dataLayout} userEdits={this.props.userEdits}\n            onEditChange={this.props.onEditChange}\n        />\n    }\n}","import React from 'react'\nimport { Icon } from 'antd'\nimport chroma from 'chroma-js'\nimport './tool.css'\n\nexport default class Tool extends React.Component {\n\n    onClick() {\n        if (this.props.onClick) this.props.onClick()\n    }\n\n    render() {\n        const luminance = this.props.luminance || (this.props.primary ? 0.4 : 0.2)\n        const color = chroma(this.props.color).luminance(luminance)\n        const textColor = color.luminance(luminance / 2)\n        const icon = (this.props.theme !== \"twoTone\") \n            ? <Icon className=\"toolicon\" type={this.props.type} theme={this.props.theme} onClick={() => this.onClick()} style={{color: color.hex()}}/>\n            : <Icon className=\"toolicon\" type={this.props.type} theme={this.props.theme} onClick={() => this.onClick()} twoToneColor={color.hex()}/>\n        return (\n            <div className={`tool tooltip ${this.props.primary ? \"primary\" : \"secondary\"} ${this.props.className}`}>\n                {icon}\n                <span className=\"tooltip-text\" style={{color: textColor.hex()}}>{this.props.tooltipText}</span>\n                {this.props.children}\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport QRCode from 'qrcode'\nimport './toolbox.css'\nimport Tool from './tool'\nimport TooltipTextTranslation from './tooltip-text-translation.json'\n\nexport class Toolbox extends React.Component {\n\n    onLike() {\n        if (this.props.onLike) this.props.onLike()\n    }\n\n    onHideSubBranch() {\n        if (this.props.onHideSubBranch) this.props.onHideSubBranch()\n    }\n\n    onDisableTextClusterSpan() {\n        if (this.props.onDisableTextClusterSpan) this.props.onDisableTextClusterSpan()\n    }\n\n    onLoadJson(e) {\n        if (this.props.onLoadJson) this.props.onLoadJson(e)\n    }\n\n    scaleFont(larger) {\n        if (this.props.scaleFont) this.props.scaleFont(larger)\n    }\n\n    zoom(larger) {\n        if (this.props.zoom) this.props.zoom(larger)\n    }\n    \n    capture(full) {\n        if (this.props.capture) this.props.capture(full)\n    }\n\n    render() {\n        setTimeout(() => {\n            QRCode.toCanvas(document.getElementById(\"mrt-share-qrcode-canvas\"), window.location.href, (e) => { if (e) console.error(e) })\n        }, 500)\n        const lang = this.props.lang || \"en\"\n        const translation = TooltipTextTranslation[lang]\n        const t = (text) => (translation && translation[text.toLowerCase()]) ? translation[text.toLowerCase()] : text\n        return (\n            <div>\n                <div className=\"toolgroup horizontal\">\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"heart\" theme={this.props.like ? \"filled\" : \"twoTone\"} color=\"red\" tooltipText={t(this.props.like ? \"Dislike\" : \"Like\")} primary onClick={() => this.onLike()}/>\n                    </div>\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"share-alt\" theme=\"outlined\" color=\"green\" tooltipText={t(\"Share\")} primary/>\n                        <Tool className=\"qrcode-icon\" type=\"qrcode\" theme=\"outlined\" color=\"green\" tooltipText={t(\"QR Code\")}>\n                            <canvas className=\"qrcode\" id=\"mrt-share-qrcode-canvas\"/>\n                        </Tool>\n                    </div>\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"font-size\" theme=\"outlined\" color=\"pink\" tooltipText={t(\"Font Size\")} primary/>\n                        <Tool type=\"zoom-in\" theme=\"outlined\" color=\"pink\" tooltipText={t(\"Larger Font\")} onClick={() => this.scaleFont(true)}/>\n                        <Tool type=\"zoom-out\" theme=\"outlined\" color=\"pink\" tooltipText={t(\"Smaller Font\")} onClick={() => this.scaleFont(false)}/>\n                    </div>\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"search\" theme=\"outlined\" color=\"aquamarine\" tooltipText={t(\"Zoom\")} primary/>\n                        <Tool type=\"zoom-in\" theme=\"outlined\" color=\"aquamarine\" tooltipText={t(\"Zoom In\")} onClick={() => this.zoom(true)}/>\n                        <Tool type=\"zoom-out\" theme=\"outlined\" color=\"aquamarine\" tooltipText={t(\"Zoom Out\")} onClick={() => this.zoom(false)}/>\n                    </div>\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"download\" theme=\"outlined\" color=\"blue\" tooltipText={t(\"Download\")} primary/>\n                        <Tool type=\"file-image\" theme=\"twoTone\" color=\"blue\" tooltipText={t(\"Full Picture\")} onClick={() => this.capture(true)}/>\n                        <Tool type=\"camera\" theme=\"twoTone\" color=\"blue\" tooltipText={t(\"Snapshot\")} onClick={() => this.capture(false)}/>\n                    </div>\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"control\" theme=\"outlined\" color=\"teal\" tooltipText={t(\"Control\")} primary/>\n                        <Tool type={`eye${this.props.hideSubBranch ? \"\" : \"-invisible\"}`} theme=\"twoTone\" color=\"teal\" onClick={() => this.onHideSubBranch()}\n                            tooltipText={t(this.props.hideSubBranch ? \"Display Sub Branch\" : \"Hide Sub Branch\")}/>\n                        <Tool type=\"column-width\" theme=\"outlined\" color=\"teal\" onClick={() => this.onDisableTextClusterSpan()}\n                            tooltipText={t(this.props.disableTextClusterSpan ? \"Enable Text Span\" : \"Disable Text Span\")}/>\n                        {this.props.onLoadJson && \n                        <Tool type=\"folder-open\" theme=\"outlined\" color=\"teal\" onClick={() => document.getElementById(\"mrt-file-load-input\").click()}\n                            tooltipText={t(\"Load JSON\")}/>}\n                        <input id=\"mrt-file-load-input\" type=\"file\" hidden onChange={(e) => this.onLoadJson(e)}/>\n                    </div>\n                    <div className=\"toolgroup vertical\">\n                        <Tool className=\"toolgroup\" type=\"appstore\" theme=\"outlined\" color=\"purple\" tooltipText={t(\"Toolbox\")} primary/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n","import React from 'react'\nimport MRTViewer from './mrt-viewer'\nimport './index.css'\nimport svgLib from 'save-svg-as-png'\nimport { Toolbox } from './toolbox/index'\n\nexport default class MRT extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            viewerScale: 100,\n            hideSubBranch: false,\n            disableTextClusterSpan: false,\n            fontExtraSize: 0,\n        }\n    }\n\n    onLike() {\n        if (this.props.onLike) this.props.onLike()\n    }\n\n    capture(full) {\n        if (full)\n            svgLib.saveSvgAsPng(document.getElementById(\"mrt-viewer\"), `master-reading-tree.png`)\n        else {\n            const srcWidth = document.getElementById(\"mrt-viewer\").viewBox.baseVal.width\n            const outputWidth = document.body.clientWidth\n            svgLib.saveSvgAsPng(document.getElementById(\"mrt-viewer\"), `master-reading-tree-snapshot.png`, {scale: outputWidth / srcWidth})\n        }\n    }\n\n    zoom(larger) {\n        this.setState({...this.state, viewerScale: Math.min(Math.max(this.state.viewerScale + (larger ? 10 : -10), 100), 1000)})\n    }\n\n    scaleFont(larger) {\n        this.setState({...this.state, fontExtraSize: Math.max(0, Math.min(10, this.state.fontExtraSize + (larger ? 2 : -2)))})\n    }\n\n    onLoadJson(e) {\n        if (e.target.files.length === 0) return\n        const reader = new FileReader()\n        reader.onload = (e) => {\n            if (this.props.onLoadJson) this.props.onLoadJson(JSON.parse(e.target.result))\n        }\n        reader.readAsText(e.target.files[0])\n    }\n\n    onEditChange(edits) {\n        if (this.props.onEditChange) this.props.onEditChange(edits)\n    }\n\n    render() {\n        return (\n            <div className=\"mrt-container\" style={{width: `${this.state.viewerScale}%`}}>\n                <Toolbox lang={this.props.lang}\n                    onLike={() => this.onLike()} like={this.props.like}\n                    onHideSubBranch={() => this.setState({hideSubBranch: !this.state.hideSubBranch})} hideSubBranch={this.state.hideSubBranch}\n                    onDisableTextClusterSpan={() => this.setState({disableTextClusterSpan: !this.state.disableTextClusterSpan})} disableTextClusterSpan={this.state.disableTextClusterSpan}\n                    onLoadJson={this.props.onLoadJson ? (e) => this.onLoadJson(e) : undefined}\n                    scaleFont={(larger) => this.scaleFont(larger)}\n                    zoom={(larger) => this.zoom(larger)}\n                    capture={(full) => this.capture(full)}\n                />\n                <MRTViewer id=\"mrt-viewer\" data={this.props.data}\n                    hideSubBranch={this.state.hideSubBranch} disableTextClusterSpan={this.state.disableTextClusterSpan}\n                    fontExtraSize={this.state.fontExtraSize}\n                    authors={this.props.authors}\n                    onEditChange={(edits) => this.onEditChange(edits)} userEdits={this.props.userEdits}/>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport sample_data from './sample.json';\nimport MRT from './components';\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props)\n    this.state = {data: sample_data, like: false, userEdits: {}}\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MRT data={this.state.data} authors={[\"Somefive\", \"Rainatum\"]} onLoadJson={(data) => this.setState({data})}\n          onLike={() => this.setState({like: !this.state.like})} like={this.state.like}\n          onEditChange={(edits) => this.setState({userEdits: edits})} userEdits={this.state.userEdits}\n          lang=\"en\"/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}