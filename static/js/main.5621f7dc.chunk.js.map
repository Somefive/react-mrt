{"version":3,"sources":["components/mrt-viewer/node.js","components/logo.svg","components/mrt-viewer/index.js","components/toolbox/tool.js","components/toolbox/index.js","components/index.js","App.js","serviceWorker.js","index.js"],"names":["ThumbUpColor","chroma","luminance","desaturate","ThumbDownColor","ExchangeColor","CaretColor","AbstractColor","NodeCircle","props","state","hover","this","setState","onHover","className","cx","node","x","cy","y","r","radius","onMouseOver","onMouseLeave","stroke","color","strokeWidth","fill","React","Component","NodeText","displayInteractionTool","id","randomstring","generate","expand","textColor","darken","baseY","textLines","iconSize","lineHeight","texts","pins","map","pin","_idx","isFocus","textPieces","fullTextPieces","abstractHeight","abstractPieces","length","secondaryLineHeight","iconY","editButtonMarginTop","textWidth","fullTextWidth","generateEditIcon","T","dx","action","transform","style","transformOrigin","onClick","onSwitchLinksVisibility","onEdit","width","height","isUp","edits","rate","isDown","transformOriginX","scaleOrigin","key","textLeadingMargin","filter","fontSize","_text","idx","secondaryFontSize","editable","IconExchange","IconThumbsUpSolid","IconThumbsUp","IconThumbsDownSolid","IconThumbsDown","linksVisibility","IconCaretUp","IconCaretDown","reverse","NodeLinks","source","target","x2","y2","mx","nodePaddingLeft","d","forward","nx","uy","by","nnx","links","references","citations","nodesLookup","generateLinkPath","strokeDasharray","generateArrowPath","indexOf","_extends","Object","assign","i","arguments","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref3","_ref4","_ref5","_ref","svgRef","title","viewBox","ref","ForwardRef","forwardRef","MRTViewer","EraMinRatio","lastEraRatio","labelTextFontSize","labelTextLineHeight","nodeRadius","nodeTextLeadingMargin","nodeTextWidth","nodeFullSpan","horizonMarginTop","horizonMarginBottom","averageFontWidthRatio","nodePaddingRight","nodePaddingTop","nodePaddingBottom","nodeEditButtonMarginTop","nodeOffsetX","nodeOffsetY","nodeWidth","nodeHeight","actualLines","reduce","prev","Math","max","nodeTextLineHeight","toExchange","focusEraIndex","console","log","_data","data","extract","paper","year","venue","trim","prefix","venue_year","exec","text","replace","abstract","root","branches","forEach","branch","push","sort","a","b","clusterNames","name","split","lodash","capitalize","join","hideSubBranch","disableTextBranchSpan","disableTextClusterSpan","nodeFontExtraSize","fontExtraSize","nodeTextFontSize","nodeTextSecondaryFontSize","nodeTextSecondaryLineHeight","nodeTextCustomFold","span","textLength","floor","match","RegExp","line","nodeTextFold","nodeTextSecondaryFold","dataView","isSub","userEdits","clusterID","branchID","eras","years","flatten","_to","_cnt","eraMinSize","lastEraMinSize","from","to","cnt","branchWithEra","era","numBranches","numClusters","rootColor","scale","clusterColors","cubehelix","start","rotations","gamma","lightness","correctLightness","colors","branchColors","_","views","defs","nodes","edges","addEdge","x1","y1","addVerticalEdge","addHorizontalEdge","generateGradientColor","colorID","gradientUnits","offset","stopColor","fullSpan","eraID","horizon","_height","erasHeight","eraHeight","slice","nodeLeft","nodeRight","_branch","startEra","endEra","_nextBranch","shrinkFlag","sib","yStart","yEnd","param","onEditChange","extendedBottomY","centerY","renderNodes","flattenDeep","_width","clusterLabelTextPieces","clusterLabelTexts","pieces","clusterLabelsHeight","extendedHeight","backgroundSolidColors","backgroundTextSolidColors","backgroundGradientSolidColors","backgroundSelectionColors","backgroundTextSelectionColors","backgroundGradientSelectionColors","stdDeviation","in","opacity","_sibBranch","isCurrent","visibility","textDecoration","textAnchor","hex","authors","Tool","primary","icon","theme","type","twoToneColor","tooltipText","children","Toolbox","setTimeout","QRCode","toCanvas","document","getElementById","window","location","href","e","error","lang","translation","TooltipTextTranslation","t","toLowerCase","like","onLike","scaleFont","zoom","capture","onHideSubBranch","onDisableTextClusterSpan","onLoadJson","click","hidden","onChange","MRT","viewerScale","generated","full","svgLib","saveSvgAsPng","srcWidth","baseVal","outputWidth","body","clientWidth","larger","min","files","reader","FileReader","onload","JSON","parse","result","readAsText","undefined","App","sample_data","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5621f7dc.chunk.js","sourcesContent":["import React from 'react'\nimport { ReactComponent as IconThumbsUp } from '@ant-design/icons-svg/inline-svg/outline/like.svg'\nimport { ReactComponent as IconThumbsDown } from '@ant-design/icons-svg/inline-svg/outline/dislike.svg'\nimport { ReactComponent as IconThumbsUpSolid } from '@ant-design/icons-svg/inline-svg/fill/like.svg'\nimport { ReactComponent as IconThumbsDownSolid } from '@ant-design/icons-svg/inline-svg/fill/dislike.svg'\nimport { ReactComponent as IconExchange } from '@ant-design/icons-svg/inline-svg/outline/pull-request.svg'\nimport { ReactComponent as IconCaretDown } from '@ant-design/icons-svg/inline-svg/outline/arrows-alt.svg'\nimport { ReactComponent as IconCaretUp } from '@ant-design/icons-svg/inline-svg/outline/shrink.svg'\nimport chroma from 'chroma-js'\nimport randomstring from 'randomstring'\nimport './node.css'\n\nconst ThumbUpColor = chroma(\"green\").luminance(0.3).desaturate(1)\nconst ThumbDownColor = chroma(\"red\").luminance(0.3).desaturate(2)\nconst ExchangeColor = chroma(\"blue\").luminance(0.3).desaturate(1)\nconst CaretColor = chroma(\"grey\").luminance(0.3)\nconst AbstractColor = chroma(\"grey\").luminance(0.1)\n\nexport class NodeCircle extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {hover: false}\n    }\n\n    onHover(hover) {\n        this.setState({hover})\n        if (this.props.onHover) this.props.onHover(hover)\n    }\n    \n    render() {\n        return (\n            <circle className=\"era-node-circle\" cx={this.props.node.x} cy={this.props.node.y} r={this.props.radius}\n                onMouseOver={() => { this.onHover(true) }}\n                onMouseLeave={() => { this.onHover(false) }}\n                stroke={this.props.color} strokeWidth={this.props.strokeWidth}\n                fill={this.state.hover ? this.props.color : \"white\"}/>\n        )\n    }\n\n}\n\nexport class NodeText extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {displayInteractionTool: false}\n        this.id = randomstring.generate(8)\n        this.state = { expand: -1 }\n    }\n\n    onHover(hover) {\n        if (!hover && this.state.expand !== -1) this.setState({expand: -1})\n    }\n\n    render() {\n        let textColor = chroma(this.props.color).darken()\n        let baseY = 0\n        let textLines = 0\n        const iconSize = this.props.lineHeight * 1.25\n        const texts = this.props.pins.map((pin, _idx) => {\n            baseY = (textLines + _idx / 2) * this.props.lineHeight\n            const isFocus = this.state.expand === _idx\n            const collapseHandler = () => this.setState({expand: isFocus ? -1 : _idx})\n            const textPieces = isFocus ? pin.fullTextPieces : pin.textPieces\n            const abstractHeight = pin.abstractPieces.length * this.props.secondaryLineHeight\n            const iconY = (textPieces.length - 1) * this.props.lineHeight + this.props.editButtonMarginTop + isFocus * abstractHeight\n            const textWidth = isFocus ? this.props.fullTextWidth : this.props.textWidth\n            const generateEditIcon = (T, dx, fill, action) => <g transform={`translate(${textWidth-iconSize*dx}, ${iconY})`}>\n                <g className=\"paper-edit-icon\" style={{transformOrigin: `${iconSize/2}px ${iconSize/2}px`}}\n                    onClick={action === \"link-switch\" ? () => this.props.onSwitchLinksVisibility(pin.id) : (() => this.props.onEdit(action, pin))}>\n                    <T className=\"paper-edit-icon\" fill={fill} width={iconSize} height={iconSize}/>\n                    <rect className=\"paper-edit-icon\" width={iconSize} height={iconSize} fill=\"transparent\"/>\n                </g>\n            </g>\n            const isUp = pin.edits && pin.edits.rate > 0\n            const isDown = pin.edits && pin.edits.rate < 0\n            const transformOriginX = (this.props.scaleOrigin === \"left\") ? 0 : (this.props.scaleOrigin === \"middle\" ? (textWidth / 2) : textWidth)\n            return (\n                <g\n                    key={_idx}\n                    transform={`translate(${this.props.textLeadingMargin + this.props.radius}, ${baseY})`}>\n                    <g className=\"paper-view-group-inner\" style={{transformOrigin: `${transformOriginX}px ${-this.props.lineHeight}px`}}\n                        onMouseOver={() => this.onHover(true)}\n                        onMouseLeave={() => this.onHover(false)}>\n                        <rect className=\"paper-text-background\" x={-this.props.lineHeight} y={-this.props.lineHeight * 2.5}\n                            width={textWidth+2*this.props.lineHeight} height={this.props.lineHeight * 4 + iconY + iconSize}\n                            fill=\"white\" filter=\"url(#blur-filter)\"/>\n                        <text className=\"paper-text\" fontSize={this.props.fontSize} fill={textColor} onClick={collapseHandler}>\n                            {textPieces.map((_text, idx) => {\n                                textLines++\n                                return <tspan key={idx} x=\"0\" y={idx * this.props.lineHeight}>{_text}</tspan>\n                            })}\n                        </text>\n                        {isFocus && \n                            <text className=\"paper-abstract-inner\" fontSize={this.props.secondaryFontSize} fill={AbstractColor}>\n                                {pin.abstractPieces.map((_text, idx) => <tspan key={idx} x=\"0\" y={textPieces.length * this.props.lineHeight + idx * this.props.secondaryLineHeight}>{_text}</tspan>)}\n                            </text>}\n                        <g className=\"paper-edit-icon-group\">\n                            {this.props.editable && generateEditIcon(IconExchange, 6, ExchangeColor, \"to-exchange\")}\n                            {generateEditIcon(isUp ? IconThumbsUpSolid : IconThumbsUp, 4.5, ThumbUpColor, isUp ? \"thumb-delete\" : \"thumb-up\")}\n                            {generateEditIcon(isDown ? IconThumbsDownSolid : IconThumbsDown, 3, ThumbDownColor, isDown ? \"thumb-delete\" : \"thumb-down\")}\n                            {pin.abstractPieces.length > 0 && generateEditIcon(this.props.linksVisibility[pin.id] ? IconCaretUp : IconCaretDown, 1.5, CaretColor, \"link-switch\")}\n                        </g>\n                    </g>\n                </g>\n            )\n        })\n        return (\n            <g className=\"era-node-text-group\" transform={`translate(${this.props.x}, ${this.props.y})`}>\n                {texts.reverse()}\n            </g>\n        )\n    }\n}\n\nexport class NodeLinks extends React.Component {\n\n    generateLinkPath(source, target) {\n        const x1 = 0, y1 = 0, x2 = target.x - source.x, y2 = target.y - source.y\n        const mx = x1 - this.props.radius - this.props.nodePaddingLeft\n        let d = `M ${x1} ${y1}`\n        if (y1 === y2) d += ` L ${x2} ${y2}`\n        else d += ` C ${mx} ${y1}, ${mx} ${y1}, ${mx} ${(y1+y2)/2} S ${mx} ${y2}, ${x2} ${y2}`\n        return d\n    }\n\n    generateArrowPath(source, target, forward) {\n        const x = target.x - source.x, y = target.y - source.y\n        const nx = (x >= 0) ? (x - this.props.radius) : (x + this.props.radius)\n        const uy = y - this.props.radius / 2, by = y + this.props.radius / 2\n        if (forward) {\n            const nnx = (x >= 0) ? (x - this.props.radius * 1.2) : (x + this.props.radius * 1.2)\n            return `M ${x} ${y} L ${nnx} ${uy} L ${nx} ${y} L ${nnx} ${by} L ${x} ${y}`\n        } else {\n            const nnx = (x >= 0) ? (x + this.props.radius * 0.2) : (x - this.props.radius * 0.2)\n            return `M ${nx} ${y} L ${nnx} ${uy} L ${x} ${y} L ${nnx} ${by} L ${nx} ${y}`\n        }\n    }\n\n    render() {\n        let textColor = chroma(this.props.node.color).darken()\n        const links = this.props.node.pins.map((pin, _idx) => {\n            return (this.props.linksVisibility[pin.id] && \n            <g key={pin.id} transform={`translate(${pin.x}, ${pin.y})`}>\n                <circle cx=\"0\" cy=\"0\" r={0.5 * this.props.lineHeight} fill={textColor}/>\n                {[...pin.references, ...pin.citations].map((id, idx) => this.props.nodesLookup[id] && \n                <g key={idx}>\n                    <path d={this.generateLinkPath(pin, this.props.nodesLookup[id])} strokeWidth={2} stroke={textColor} strokeDasharray={10} fill=\"transparent\"/>\n                    <path d={this.generateArrowPath(pin, this.props.nodesLookup[id], pin.references.indexOf(id) >= 0)} fill={textColor}/>\n                </g>\n                )}\n            </g>)\n        })\n        return <g>{links}</g>\n    }\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M520.650142 80.061167L369.746208 410.281909l269.859169-71.853003 1.641632-0.631397-120.596867-257.736342z\",\n  fill: \"#E9624C\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M256.852386 657.03194l385.909977 121.859662 100.392157-222.756937-76.272784-163.279319-333.251449 96.098656-76.777901 168.077938z\",\n  fill: \"#2A698D\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M92.689111 1015.791836h865.266741L773.966704 622.052534l-102.286349 232.227895-442.735726-136.381798L92.689111 1015.791836z\",\n  fill: \"#233D7E\"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M484.281662 0H0v1015.791836h6.187693L483.650265 1.641633l0.631397-1.641633zM555.376989 0l0.505117 1.136515 483.271427 1014.655321h4.293501V0H555.376989z\",\n  fill: \"#3C3837\"\n});\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 1024 1024\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.7ecb0366.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport { NodeCircle, NodeText, NodeLinks } from './node'\nimport randomstring from 'randomstring'\nimport chroma from 'chroma-js'\nimport lodash from 'lodash'\nimport './index.css'\nimport { ReactComponent as Logo } from '../logo.svg'\nimport { pipelineTopicExpression } from '@babel/types'\n\nexport default class MRTViewer extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.EraMinRatio = this.props.EraMinRatio || 0.05\n        this.lastEraRatio = this.props.lastEraRatio || 0.2\n\n        this.strokeWidth = 4\n\n        this.labelTextFontSize = 64\n        this.labelTextLineHeight = 72\n\n        this.nodeRadius = 20\n        this.nodeTextLeadingMargin = 20\n        this.nodeTextWidth = 260\n\n        this.nodeFullSpan = 2\n\n        this.horizonMarginTop = 32\n        this.horizonMarginBottom = 48\n\n        this.averageFontWidthRatio = 0.6\n        \n        this.nodePaddingLeft = 20\n        this.nodePaddingRight = 20\n        this.nodePaddingTop = 32\n        this.nodePaddingBottom = 12\n\n        this.nodeEditButtonMarginTop = 10\n\n        this.nodeOffsetX = this.nodePaddingLeft + this.nodeRadius\n        this.nodeOffsetY = this.nodePaddingTop + this.nodeRadius\n        \n        this.nodeWidth = this.nodePaddingLeft + 2 * this.nodeRadius + this.nodeTextLeadingMargin + this.nodeTextWidth + this.nodePaddingRight\n        // this.nodeTextLines = (node) => node.pins.reduce((prev, pin) => prev + pin.textPieces.length, 0)\n        this.nodeHeight = (node) => {\n            const actualLines = node.pins.reduce((prev, pin) => prev + pin.textPieces.length, -1) + (node.pins.length - 1) / 2\n            return this.nodePaddingTop + this.nodeRadius + Math.max(this.nodeRadius, actualLines * this.nodeTextLineHeight) + this.nodePaddingBottom\n        }\n\n        this.state = {toExchange: null, focusEraIndex: -1, linksVisibility: {}}\n    }\n\n    onSwitchLinksVisibility(id) {\n        const linksVisibility = this.state.linksVisibility\n        linksVisibility[id] = !(linksVisibility[id] === true)\n        console.log(linksVisibility)\n        this.setState({linksVisibility})\n    }\n\n    render() {\n\n        this._data = this.props.data\n        console.log(this._data)\n\n        const extract = (paper) => {\n            const id = paper[\"paper_id\"]\n            const year = paper[\"paper_year\"]\n            const venue = paper[\"paper_venue\"].trim()\n            const title = paper[\"paper_title\"].trim()\n            const citations = paper[\"citations\"]\n            const references = paper[\"references\"]\n            let prefix = `${year}`\n            const venue_year = /^(19|20)\\d{2}\\b/.exec(venue)\n            if (venue_year == null && venue.length > 0) {\n                prefix = `${year} ${venue}`\n            } else if (venue_year != null) {\n                prefix = `${venue}`\n            }\n            const text = `[${prefix}] ${title}`.replace('\\t', ' ').replace('\\n', ' ')\n            const abstract = paper[\"paper_abstract\"] ? paper[\"paper_abstract\"].trim().replace('\\t', ' ') : \"\"\n            return {id, year, venue, title, citations, references, text, abstract}\n        }\n        this.data = {\n            root: extract(this._data.root),\n            branches: []\n        }\n        this._data.branches.forEach(branch => {\n            this.data.branches.push(branch[0].map(extract))\n            this.data.branches.push(branch[1].map(extract))\n        })\n        this.data.branches.forEach(branch => branch.sort((a, b) => {\n            return a.year === b.year ? (b.citations.length - a.citations.length) : (b.year - a.year)\n        }))\n        this.clusterNames = this.props.data.clusterNames.map(name => name.split(' ').map(lodash.capitalize).join(' '))\n\n        this.hideSubBranch = this.props.hideSubBranch\n        this.disableTextBranchSpan = this.props.disableTextBranchSpan\n        this.disableTextClusterSpan = this.props.disableTextClusterSpan\n\n        this.nodeFontExtraSize = this.props.fontExtraSize || 0\n        this.nodeTextFontSize = 20 + this.nodeFontExtraSize\n        this.nodeTextSecondaryFontSize = 16 + this.nodeFontExtraSize\n        this.nodeTextLineHeight = 20 + this.nodeFontExtraSize\n        this.nodeTextSecondaryLineHeight = 18 + this.nodeFontExtraSize\n        this.nodeTextCustomFold = (text, span, fontSize) => {\n            const textLength = Math.floor(((span - 1) * this.nodeWidth + this.nodeTextWidth) / (fontSize * this.averageFontWidthRatio))\n            return (text.match(new RegExp(`([^\\\\n]{1,${textLength}})(\\\\s|$)`, 'g')) || []).filter(line => line.length > 0)\n        }\n        this.nodeTextFold = (text, span) => this.nodeTextCustomFold(text, span, this.nodeTextFontSize)\n        this.nodeTextSecondaryFold = (text, span) => this.nodeTextCustomFold(text, span, this.nodeTextSecondaryFontSize)\n\n        // initialize dataView (filter subBranch is hideSubBranch is enabled)\n        let dataView = {root: {...this.data.root}, branches: this.data.branches.map(() => [])}\n        this.data.branches.forEach((branch, idx) => branch.forEach(paper => {\n            const isSub = idx % 2 === 1\n            const edits = this.props.userEdits[paper.id]\n            const clusterID = edits ? edits.clusterID : Math.floor(idx / 2)\n            const branchID = clusterID * 2 + isSub\n            if (!this.hideSubBranch || !isSub) dataView.branches[branchID].push({...paper, isSub, edits, clusterID, branchID})\n        }))\n        dataView.branches.forEach(branch => branch.sort((a, b) => (a.year === b.year) ? (b.citations.length - a.citations.length) : (b.year - a.year)))\n\n        // calculate eras according to density of paper\n        let eras = []\n        {\n            let years = lodash.flatten(dataView.branches).map(paper => paper.year).sort().reverse()\n            let _to = years[0]\n            let _cnt = 1\n            let eraMinSize = this.EraMinRatio * years.length\n            let lastEraMinSize = this.lastEraRatio * years.length\n            for (let i = 1; i < years.length; i++) {\n                if (years[i] === years[i-1] || _cnt < eraMinSize || i > years.length - lastEraMinSize) _cnt += 1\n                else {\n                    eras.push({from: years[i-1], to: _to, cnt: _cnt})\n                    _to = years[i]\n                    _cnt = 1\n                }\n            }\n            eras.push({from: years[years.length-1], to: _to, cnt: _cnt})\n        }\n        const branchWithEra = (branch, era) => branch.filter(paper => paper.year >= era.from && paper.year <= era.to)\n\n        // initialize views\n        let numBranches = dataView.branches.length\n        let numClusters = Math.floor(numBranches / 2)\n        const rootColor = chroma.scale()(0.5)\n        const clusterColors = chroma.cubehelix().start(200).rotations(3).gamma(0.7).lightness([0.2, 0.6]).scale().correctLightness().colors(numClusters)\n        const branchColors = dataView.branches.map((_, branchID) => chroma(clusterColors[Math.floor(branchID / 2)]).luminance(branchID % 2 === 0 ? 0.25 : 0.5))\n        let views = {defs: [], nodes: {}, edges: []}\n        const addEdge = (x1, y1, x2, y2, color) => views.edges.push(<line key={views.edges.length} x1={x1} y1={y1} x2={x2} y2={y2} strokeWidth={this.strokeWidth - 1} stroke={color}/>)\n        const addVerticalEdge = (x, y1, y2, color) => addEdge(x, y1, x, y2, color)\n        const addHorizontalEdge = (x1, x2, y, color) => addEdge(x1, y, x2, y, color)\n        const generateGradientColor = (from, to, x1, y1, x2, y2) => {\n            const colorID = randomstring.generate(8)\n            views.defs.push(\n                <defs key={colorID}>\n                    <linearGradient id={colorID} x1={x1} y1={y1} x2={x2} y2={y2} gradientUnits=\"userSpaceOnUse\">\n                    <stop offset=\"20%\"  stopColor={from} />\n                    <stop offset=\"80%\" stopColor={to} />\n                    </linearGradient>\n                </defs>\n            )\n            return `url('#${colorID}')`\n        }\n\n        // Arrange coornidates for each era node\n        views.nodes.root = {\n            x: this.nodeWidth * (dataView.branches.length - 1) / 2 + this.nodeOffsetX,\n            y: this.nodeOffsetY,\n            color: rootColor,\n            pins: [{...dataView.root, \n                textPieces: this.nodeTextCustomFold(dataView.root.text, 3, this.nodeTextFontSize * 1.5), \n                fullTextPieces: this.nodeTextCustomFold(dataView.root.text, 3, this.nodeTextFontSize * 1.5),\n                abstractPieces: this.nodeTextCustomFold(dataView.root.abstract, 3, this.nodeTextSecondaryFontSize * 1.5),\n                edits: this.props.userEdits[dataView.root.id]\n            }],\n            span: 3,\n            fullSpan: 3,\n            fontSize: this.nodeTextFontSize * 1.5,\n            secondaryFontSize: this.nodeTextSecondaryFontSize * 1.5,\n            lineHeight: this.nodeTextLineHeight * 1.5,\n            secondaryLineHeight: this.nodeTextSecondaryLineHeight * 1.5,\n        }\n        // views.nodes.root.lines = this.nodeTextLines(views.nodes.root)\n        views.nodes.root.height = this.nodeHeight(views.nodes.root)\n\n        views.nodes.branches = dataView.branches.map((branch, branchID) => eras.map((era, eraID) => { return {\n            x: this.nodeWidth * branchID + this.nodeOffsetX,\n            y: 0,\n            color: branchColors[branchID],\n            pins: branchWithEra(branch, era),\n            era,\n            eraID,\n            clusterID: Math.floor(branchID / 2),\n            branchID,\n            fontSize: this.nodeTextFontSize,\n            secondaryFontSize: this.nodeTextSecondaryFontSize,\n            lineHeight: this.nodeTextLineHeight,\n            secondaryLineHeight: this.nodeTextSecondaryLineHeight,\n        }}))\n        \n        views.nodes.branches.forEach((branch, branchID) => branch.forEach((node, eraID) => {\n            if (node.pins.length === 0) return\n            node.span = (branchID < numBranches - 1 && views.nodes.branches[branchID+1][eraID].pins.length === 0\n                && !this.disableTextBranchSpan && (!this.disableTextClusterSpan || branchID % 2 === 0)) ? 2 : 1\n            node.fullSpan = (branchID < numBranches - 1) ? this.nodeFullSpan : 1\n            node.pins.forEach(pin => {\n                pin.textPieces = this.nodeTextFold(pin.text, node.span)\n                pin.fullTextPieces = this.nodeTextFold(pin.text, node.fullSpan)\n                pin.abstractPieces = this.nodeTextSecondaryFold(pin.abstract, node.fullSpan)\n            })\n            // node.lines = this.nodeTextLines(node)\n            node.height = this.nodeHeight(node)\n        }))\n\n        const horizon = views.nodes.root.height + this.horizonMarginTop\n        let _height = horizon + this.horizonMarginBottom\n        const erasHeight = eras.map((_, eraID) => {\n            views.nodes.branches.forEach(branch => branch[eraID].y = _height + this.nodeOffsetY)\n            const eraHeight = views.nodes.branches.reduce((prev, branch) => Math.max(prev, branch[eraID].height || 0), 0)\n            _height += eraHeight\n            return eraHeight\n        })\n\n        const nodesLookup = {}\n        views.nodes.branches.forEach(branch => branch.forEach(node => node.pins.forEach((pin, idx) => {\n            pin.x = node.x\n            pin.y = node.y + node.pins.slice(0, idx).reduce((prev, pin) => prev + (pin.textPieces.length + 0.5) * this.nodeTextLineHeight, 0)\n            nodesLookup[pin.id] = pin\n        })))\n        console.log(nodesLookup)\n\n        {\n            const node = views.nodes.root, nodeLeft = views.nodes.branches[0][0], nodeRight = views.nodes.branches[numBranches - 2][0]\n            addVerticalEdge(node.x, node.y, horizon, rootColor)\n            addHorizontalEdge(nodeLeft.x, nodeRight.x, horizon, rootColor)\n        }\n        views.nodes.branches.forEach((branch, branchID) => {\n            const _branch = branch.filter(node => node.pins.length > 0)\n            if (_branch.length === 0 && branchID % 2 === 1) return\n            const startEra = (branchID % 2 === 0) ? 0 : _branch[0].eraID\n            let endEra = (_branch.length > 0) ? _branch[_branch.length-1].eraID : 0\n            if (branchID % 2 === 0) {\n                const _nextBranch = views.nodes.branches[branchID+1].filter(node => node.pins.length > 0)\n                if (_nextBranch.length > 0) endEra = Math.max(endEra, _nextBranch[0].eraID)\n            }\n            const shrinkFlag = !this.disableTextBranchSpan && (!(this.disableTextClusterSpan && branchID % 2 === 0))\n            for (let eraID = startEra + 1; eraID <= endEra; eraID++) {\n                let node = branch[eraID]\n                let sib = branchID > 0 ? views.nodes.branches[branchID-1][eraID] : null\n                const yStart = (shrinkFlag && node.pins.length === 0 && ((branchID > 0 && sib.pins.length > 0) || (eraID === endEra))) ? (node.y - this.nodeRadius - this.nodeTextLineHeight) : node.y\n                node = branch[eraID-1]\n                sib = branchID > 0 ? views.nodes.branches[branchID-1][eraID-1] : null\n                const yEnd = (shrinkFlag && node.pins.length === 0 && branchID > 0 && sib.pins.length > 0) ? (node.y - this.nodeOffsetY + this.nodeHeight(sib) - this.nodePaddingBottom + this.nodeTextLineHeight) : node.y\n                addVerticalEdge(node.x, yStart, yEnd, node.color)\n            }\n            if (branchID % 2 === 0) {\n                const node = branch[0]\n                const sib = branchID > 0 ? views.nodes.branches[branchID-1][0] : null\n                const yEnd = (shrinkFlag && node.pins.length === 0 && branchID > 0 && sib.pins.length > 0) ? (node.y - this.nodeRadius - this.nodeTextLineHeight) : node.y\n                addVerticalEdge(node.x, horizon, yEnd, generateGradientColor(rootColor, node.color, node.x, horizon, node.x, yEnd))\n            } else {\n                const node = branch[startEra]\n                const sib = views.nodes.branches[branchID-1][startEra]\n                const yEnd = node.y - this.nodeRadius - this.nodeTextLineHeight\n                const yStart = node.y\n                addVerticalEdge(node.x, yStart, yEnd, node.color)\n                addHorizontalEdge(node.x, sib.x, yEnd, generateGradientColor(node.color, sib.color, node.x, yEnd, sib.x, yEnd))\n            }\n        })\n        \n        const onEdit = (action, source, param) => {\n            const userEdits = this.props.userEdits\n            if (!userEdits[source.id] && (action === \"thumb-up\" || action === \"thumb-down\" || action === \"exchange\")) {\n                userEdits[source.id] = {rate: 0, clusterID: source.clusterID}\n            }\n            if (action === \"thumb-up\" && userEdits[source.id].rate <= 0) {\n                userEdits[source.id].rate = 1\n                this.props.onEditChange(userEdits)\n            } else if (action === \"thumb-down\" && userEdits[source.id].rate >= 0) {\n                userEdits[source.id].rate = -1\n                this.props.onEditChange(userEdits)\n            } else if (action === \"thumb-delete\" && userEdits[source.id] && userEdits[source.id].rate !== 0) {\n                userEdits[source.id].rate = 0\n                this.props.onEditChange(userEdits)\n            } else if (action === \"to-exchange\" && this.state.toExchange === null) {\n                this.setState({toExchange: source})\n                this.props.onEditChange(userEdits)\n            } else if (action === \"exchange\") {\n                userEdits[source.id].clusterID = param\n                this.setState({toExchange: null})\n                this.props.onEditChange(userEdits)\n            }\n        }\n\n        const extendedBottomY = views.nodes.branches.map(branch => branch[branch.length-1]).reduce((prev, node) => {\n            let centerY = node.y\n            node.pins.forEach(pin => {\n                prev = Math.max(prev, centerY + (pin.fullTextPieces.length - 1) * this.nodeTextLineHeight * 2 + pin.abstractPieces.length * this.nodeTextSecondaryLineHeight + this.nodeTextLineHeight * 2)\n                centerY += pin.textPieces.length * this.nodeTextLineHeight\n            })\n            return prev\n        }, _height)\n\n        const renderNodes = lodash.flattenDeep(views.nodes.branches).sort((a, b) => (a.eraID === b.eraID) ? (b.branchID - a.branchID) : (b.eraID - a.eraID))\n        renderNodes.push(views.nodes.root)\n\n        const _width = this.nodeWidth * dataView.branches.length\n        const clusterLabelTextPieces = this.clusterNames.map(name => name.split(' '))\n        const clusterLabelTexts = clusterLabelTextPieces.map((pieces, _idx) => \n            <text key={_idx}>\n                {pieces.reverse().map((_text, idx) => <tspan key={idx} x=\"0\" y={-idx * this.labelTextLineHeight}>{_text}</tspan>)}\n            </text>\n        )\n        const clusterLabelsHeight = clusterLabelTextPieces.reduce((prev, pieces) => Math.max(prev, pieces.length), 0) * this.labelTextLineHeight\n        _height += clusterLabelsHeight + this.labelTextLineHeight\n\n        const extendedHeight = Math.max(this.labelTextLineHeight * 1.5, extendedBottomY - _height)\n        const backgroundSolidColors = clusterColors.map(color => chroma(color).luminance(0.9))\n        const backgroundTextSolidColors = clusterColors.map(color => chroma(color).luminance(0.7))\n        const backgroundGradientSolidColors = clusterColors.map((color, idx) => {\n            const x = views.nodes.branches[idx*2][eras.length-1].x\n            return generateGradientColor(chroma(color).luminance(0.9), \"white\", x, _height, x, _height+extendedHeight)\n        })\n        const backgroundSelectionColors = clusterColors.map(color => chroma(color).luminance(0.5))\n        const backgroundTextSelectionColors = clusterColors.map(color => chroma(color).luminance(0.2))\n        const backgroundGradientSelectionColors = clusterColors.map((color, idx) => {\n            const x = views.nodes.branches[idx*2][eras.length-1].x\n            return generateGradientColor(chroma(color).luminance(0.5), \"white\", x, _height, x, _height+extendedHeight)\n        })\n\n        console.log(views)\n\n        return <svg className=\"mrt\" id={this.props.id} width=\"100%\" viewBox={`0 0 ${_width} ${_height+extendedHeight}`}>\n            {views.defs}\n            <filter id=\"blur-filter\">\n                <feGaussianBlur stdDeviation={this.nodeTextLineHeight} in=\"SourceGraphic\"/>\n            </filter>\n            {\n                <g className=\"mrt-background\">\n                    <rect x=\"0\" y=\"0\" width={_width} height={horizon} fill={chroma(rootColor).luminance(0.9)}></rect>\n                </g>\n            }\n            {\n                clusterLabelTexts.map((texts, idx) => {\n                    return <g className=\"mrt-background\" key={idx} opacity={this.state.toExchange === null ? 1 : 0}>\n                        <rect x={this.nodeWidth*idx*2} y={horizon} width={this.nodeWidth*2} height={_height-horizon} fill={backgroundSolidColors[idx]}/>\n                        <rect x={this.nodeWidth*idx*2} y={_height} width={this.nodeWidth*2} height={extendedHeight} fill={backgroundGradientSolidColors[idx]}/>\n                        <g transform={`translate(${this.nodeWidth*idx*2+this.nodeOffsetX}, ${_height-this.labelTextLineHeight/2})`} fill={backgroundTextSolidColors[idx]} fontSize={this.labelTextFontSize}>{texts}</g>\n                    </g>\n                })\n            }\n            {\n                eras.map((era, idx) => \n                <g key={idx} className=\"mrt-era-background\" transform={`translate(0, ${views.nodes.branches[0][idx].y - this.nodeRadius - this.nodePaddingTop + erasHeight[idx]})`}>\n                    <rect className=\"mrt-era-background\" x=\"0\" y={-erasHeight[idx]} width={_width} height={erasHeight[idx]} opacity={(idx === this.state.focusEraIndex) ? 0.1 : 0}/>\n                    <text className=\"mrt-era-background\" fontSize={this.labelTextFontSize} x={this.nodePaddingLeft} y={-this.labelTextFontSize/2} opacity={(idx === this.state.focusEraIndex) ? 0.2 : 0}>\n                        {era.from === era.to ? era.from : `${era.from} - ${era.to}`}\n                    </text>\n                </g>)\n            }\n            {\n                views.nodes.branches.map((branch, idx) => {\n                    if (idx % 2 !== 0) return <text key={idx}/>\n                    const _branch = branch.filter(node => node.pins.length > 0)\n                    const _sibBranch = views.nodes.branches[idx+1].filter(node => node.pins.length > 0)\n                    if (_branch.length === 0 && _sibBranch.length === 0) return <text key={idx}/>\n                    const fontSize = this.nodeTextFontSize * 2\n                    const y = ((_branch.length === 0 || (_sibBranch.length > 0 && _sibBranch[0].eraID <= _branch[0].eraID)) ?\n                        (_sibBranch[0].y - this.nodeRadius - this.nodeTextLineHeight) :\n                        (_branch[0].y - this.nodeTextLineHeight)) - fontSize / 2\n                    const x = branch[0].x + this.nodeRadius + this.nodeTextLeadingMargin\n                    const color = chroma(branchColors[idx]).darken(2)\n                    return <text key={idx} x={x} y={y} fill={color} fontSize={fontSize}>{this.clusterNames[Math.floor(idx / 2)]}</text>\n                })\n            }\n            {views.edges}\n            {renderNodes.map((node, idx) => node.pins.length > 0 &&\n                <NodeCircle key={idx} node={node}\n                            radius={this.nodeRadius}\n                            lineHeight={this.nodeTextLineHeight}\n                            color={node.color}\n                            strokeWidth={this.strokeWidth}\n                            onHover={(hover) => \n                                this.setState({...this.state,\n                                    focusEraIndex: hover ? node.eraID : -1\n                                })   \n                            }/>\n            )}\n            <g className=\"mrt-links\">\n            {renderNodes.map((node, idx) => node.pins.length > 0 && node !== views.nodes.root &&\n                <NodeLinks key={idx}\n                    linksVisibility={this.state.linksVisibility}\n                    node={node}\n                    nodesLookup={nodesLookup}\n                    nodePaddingLeft={this.nodePaddingLeft}\n                    radius={this.nodeRadius}\n                    lineHeight={this.nodeTextLineHeight}\n                />)\n            }\n            </g>\n            <g className=\"mrt-node-text-container\">\n            {renderNodes.map((node, idx) => node.pins.length > 0 &&\n                <NodeText key={idx}\n                      node={node}\n                      pins={node.pins} \n                      x={node.x} y={node.y}\n                      radius={this.nodeRadius}\n                      lineHeight={node.lineHeight}\n                      secondaryLineHeight={node.secondaryLineHeight}\n                      textWidth={(node.span - 1) * this.nodeWidth + this.nodeTextWidth}\n                      fullTextWidth={(node.fullSpan - 1) * this.nodeWidth + this.nodeTextWidth}\n                      color={node.color}\n                      fontSize={node.fontSize}\n                      secondaryFontSize={node.secondaryFontSize}\n                      strokeWidth={this.strokeWidth}\n                      onEdit={onEdit}\n                      textLeadingMargin={this.nodeTextLeadingMargin}\n                      editable={typeof(node.clusterID) !== \"undefined\"}\n                      editButtonMarginTop={this.nodeEditButtonMarginTop}\n                      scaleOrigin={(node.clusterID === numClusters - 1) ? \"right\" : ((node.branchID === numBranches - 3) ? \"middle\" : \"left\")}\n                      linksVisibility={this.state.linksVisibility}\n                      onSwitchLinksVisibility={(id) => this.onSwitchLinksVisibility(id)}/>)}\n            </g>\n            {\n                clusterLabelTexts.map((texts, idx) => {\n                    const isCurrent = this.state.toExchange !== null && idx === this.state.toExchange.clusterID\n                    return <g className=\"mrt-background\" key={idx} opacity={this.state.toExchange === null ? 0 : 1} visibility={this.state.toExchange === null ? \"hidden\" : \"none\"} onClick={() => onEdit(\"exchange\", this.state.toExchange, idx)}>\n                        <rect className=\"mrt-background-card\" x={this.nodeWidth*idx*2} y={horizon} width={this.nodeWidth*2} height={_height-horizon} fill={backgroundSelectionColors[idx]}/>\n                        <rect className=\"mrt-background-card\" x={this.nodeWidth*idx*2} y={_height} width={this.nodeWidth*2} height={extendedHeight} fill={backgroundGradientSelectionColors[idx]}/>\n                        <g className=\"mrt-background-text\" style={{textDecoration: isCurrent ? \"underline\" : \"\"}} transform={`translate(${this.nodeWidth*idx*2+this.nodeOffsetX}, ${_height-this.labelTextLineHeight/2})`} fill={backgroundTextSelectionColors[idx]} fontSize={this.labelTextFontSize}>{texts}</g>\n                    </g>\n                })\n            }\n            {\n                <g opacity=\"0.5\" transform={`translate(${_width}, ${_height+extendedHeight-this.labelTextLineHeight * 0.5})`}>                    \n                    <Logo x={-this.labelTextFontSize * 3.35} y={-this.labelTextFontSize * 1.78} height={this.labelTextFontSize * 0.8} width={this.labelTextFontSize * 0.8}/>\n                    <text x={-this.labelTextFontSize * 0.1} y={-this.labelTextFontSize * 0.05} textAnchor=\"end\"\n                        fontSize={this.labelTextFontSize * 0.75} fill={chroma(\"grey\").luminance(0.3).hex()}>{(this.props.authors || []).join(', ')}\n                    </text>\n                    <text x={-this.labelTextFontSize * 0.1} y={-this.labelTextFontSize * 1} textAnchor=\"end\"\n                        fontSize={this.labelTextFontSize * 0.7} fill={chroma(\"grey\").luminance(0.3).hex()}>AMiner\n                    </text>\n                </g>\n            }\n        </svg>\n    }\n}","import React from 'react'\nimport { Icon } from 'antd'\nimport chroma from 'chroma-js'\nimport './tool.css'\n\nexport default class Tool extends React.Component {\n\n    onClick() {\n        if (this.props.onClick) this.props.onClick()\n    }\n\n    render() {\n        const luminance = this.props.luminance || (this.props.primary ? 0.4 : 0.2)\n        const color = chroma(this.props.color).luminance(luminance)\n        const textColor = color.luminance(luminance / 2)\n        const icon = (this.props.theme !== \"twoTone\") \n            ? <Icon className=\"toolicon\" type={this.props.type} theme={this.props.theme} onClick={() => this.onClick()} style={{color: color.hex()}}/>\n            : <Icon className=\"toolicon\" type={this.props.type} theme={this.props.theme} onClick={() => this.onClick()} twoToneColor={color.hex()}/>\n        return (\n            <div className={`tool tooltip ${this.props.primary ? \"primary\" : \"secondary\"} ${this.props.className}`}>\n                {icon}\n                <span className=\"tooltip-text\" style={{color: textColor.hex()}}>{this.props.tooltipText}</span>\n                {this.props.children}\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport QRCode from 'qrcode'\nimport './toolbox.css'\nimport Tool from './tool'\nimport TooltipTextTranslation from './tooltip-text-translation.json'\n\nexport class Toolbox extends React.Component {\n\n    render() {\n        setTimeout(() => {\n            QRCode.toCanvas(document.getElementById(\"mrt-share-qrcode-canvas\"), window.location.href, (e) => { if (e) console.error(e) })\n        }, 500)\n        const lang = this.props.lang || \"en\"\n        const translation = TooltipTextTranslation[lang]\n        const t = (text) => (translation && translation[text.toLowerCase()]) ? translation[text.toLowerCase()] : text\n        return (\n            <div>\n                <div className=\"toolgroup horizontal\">\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"heart\" theme={this.props.like ? \"filled\" : \"twoTone\"} color=\"red\" tooltipText={t(this.props.like ? \"Dislike\" : \"Like\")} primary onClick={() => this.props.onLike()}/>\n                    </div>\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"share-alt\" theme=\"outlined\" color=\"green\" tooltipText={t(\"Share\")} primary/>\n                        <Tool className=\"qrcode-icon\" type=\"qrcode\" theme=\"outlined\" color=\"green\" tooltipText={t(\"QR Code\")}>\n                            <canvas className=\"qrcode\" id=\"mrt-share-qrcode-canvas\"/>\n                        </Tool>\n                    </div>\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"font-size\" theme=\"outlined\" color=\"pink\" tooltipText={t(\"Font Size\")} primary/>\n                        <Tool type=\"zoom-in\" theme=\"outlined\" color=\"pink\" tooltipText={t(\"Larger Font\")} onClick={() => this.props.scaleFont(true)}/>\n                        <Tool type=\"zoom-out\" theme=\"outlined\" color=\"pink\" tooltipText={t(\"Smaller Font\")} onClick={() => this.props.scaleFont(false)}/>\n                    </div>\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"search\" theme=\"outlined\" color=\"aquamarine\" tooltipText={t(\"Zoom\")} primary/>\n                        <Tool type=\"zoom-in\" theme=\"outlined\" color=\"aquamarine\" tooltipText={t(\"Zoom In\")} onClick={() => this.props.zoom(true)}/>\n                        <Tool type=\"zoom-out\" theme=\"outlined\" color=\"aquamarine\" tooltipText={t(\"Zoom Out\")} onClick={() => this.props.zoom(false)}/>\n                    </div>\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"download\" theme=\"outlined\" color=\"blue\" tooltipText={t(\"Download\")} primary/>\n                        <Tool type=\"file-image\" theme=\"twoTone\" color=\"blue\" tooltipText={t(\"Full Picture\")} onClick={() => this.props.capture(true)}/>\n                        <Tool type=\"camera\" theme=\"twoTone\" color=\"blue\" tooltipText={t(\"Snapshot\")} onClick={() => this.props.capture(false)}/>\n                    </div>\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"control\" theme=\"outlined\" color=\"teal\" tooltipText={t(\"Control\")} primary/>\n                        <Tool type={`eye${this.props.hideSubBranch ? \"\" : \"-invisible\"}`} theme=\"twoTone\" color=\"teal\" onClick={() => this.props.onHideSubBranch()}\n                            tooltipText={t(this.props.hideSubBranch ? \"Display Sub Branch\" : \"Hide Sub Branch\")}/>\n                        <Tool type=\"column-width\" theme=\"outlined\" color=\"teal\" onClick={() => this.props.onDisableTextClusterSpan()}\n                            tooltipText={t(this.props.disableTextClusterSpan ? \"Enable Text Span\" : \"Disable Text Span\")}/>\n                        {this.props.onLoadJson && \n                        <Tool type=\"folder-open\" theme=\"outlined\" color=\"teal\" onClick={() => document.getElementById(\"mrt-file-load-input\").click()}\n                            tooltipText={t(\"Load JSON\")}/>}\n                        <input id=\"mrt-file-load-input\" type=\"file\" hidden onChange={(e) => this.props.onLoadJson(e)}/>\n                    </div>\n                    <div className=\"toolgroup vertical\">\n                        <Tool className=\"toolgroup\" type=\"appstore\" theme=\"outlined\" color=\"purple\" tooltipText={t(\"Toolbox\")} primary/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n","import React from 'react'\nimport MRTViewer from './mrt-viewer'\nimport './index.css'\nimport svgLib from 'save-svg-as-png'\nimport { Toolbox } from './toolbox/index'\n\nexport default class MRT extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            like: this.props.like || false,\n            viewerScale: 100,\n            hideSubBranch: false,\n            disableTextClusterSpan: false,\n            fontExtraSize: 0,\n        }\n        this.generated = false\n    }\n\n    capture(full) {\n        if (full)\n            svgLib.saveSvgAsPng(document.getElementById(\"mrt-viewer\"), `master-reading-tree.png`)\n        else {\n            const srcWidth = document.getElementById(\"mrt-viewer\").viewBox.baseVal.width\n            const outputWidth = document.body.clientWidth\n            svgLib.saveSvgAsPng(document.getElementById(\"mrt-viewer\"), `master-reading-tree-snapshot.png`, {scale: outputWidth / srcWidth})\n        }\n    }\n\n    zoom(larger) {\n        this.setState({...this.state, viewerScale: Math.min(Math.max(this.state.viewerScale + (larger ? 10 : -10), 100), 1000)})\n    }\n\n    scaleFont(larger) {\n        this.setState({...this.state, fontExtraSize: Math.max(0, Math.min(10, this.state.fontExtraSize + (larger ? 2 : -2)))})\n    }\n\n    onLoadJson(e) {\n        if (e.target.files.length === 0) return\n        const reader = new FileReader()\n        reader.onload = (e) => {\n            if (this.props.onLoadJson) this.props.onLoadJson(JSON.parse(e.target.result))\n        }\n        reader.readAsText(e.target.files[0])\n    }\n\n    render() {\n        return (\n            <div className=\"mrt-container\" style={{width: `${this.state.viewerScale}%`}}>\n                <Toolbox lang={this.props.lang}\n                    onLike={() => this.props.onLike()} like={this.props.like}\n                    onHideSubBranch={() => this.setState({hideSubBranch: !this.state.hideSubBranch})} hideSubBranch={this.state.hideSubBranch}\n                    onDisableTextClusterSpan={() => this.setState({disableTextClusterSpan: !this.state.disableTextClusterSpan})} disableTextClusterSpan={this.state.disableTextClusterSpan}\n                    onLoadJson={this.props.onLoadJson ? (e) => this.onLoadJson(e) : undefined}\n                    scaleFont={(larger) => this.scaleFont(larger)}\n                    zoom={(larger) => this.zoom(larger)}\n                    capture={(full) => this.capture(full)}\n                />\n                <MRTViewer id=\"mrt-viewer\" data={this.props.data} userEdits={this.props.userEdits} \n                    hideSubBranch={this.state.hideSubBranch} disableTextClusterSpan={this.state.disableTextClusterSpan}\n                    fontExtraSize={this.state.fontExtraSize}\n                    authors={this.props.authors}\n                    onEditChange={this.props.onEditChange}/>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport sample_data from './sample.json';\nimport MRT from './components';\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props)\n    this.state = {data: sample_data, like: false, userEdits: {}}\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MRT data={this.state.data} authors={[\"Somefive\", \"Rainatum\"]} onLoadJson={(data) => this.setState({data})}\n          onLike={() => this.setState({like: !this.state.like})} like={this.state.like}\n          onEditChange={(edits) => this.setState({userEdits: edits})} userEdits={this.state.userEdits}\n          lang=\"en\"/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}