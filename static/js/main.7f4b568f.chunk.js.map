{"version":3,"sources":["components/mrt-viewer/node.js","components/logo.svg","components/mrt-viewer/index.js","components/index.js","App.js","serviceWorker.js","index.js"],"names":["ThumbUpColor","chroma","luminance","desaturate","ThumbDownColor","ExchangeColor","CaretColor","AbstractColor","NodeCircle","className","cx","this","props","node","x","cy","y","r","radius","onMouseOver","onHover","onMouseLeave","stroke","color","strokeWidth","fill","expand","React","Component","NodeText","state","displayInteractionTool","id","randomstring","generate","action","source","onEdit","hover","setState","textColor","darken","baseY","textLines","iconSize","lineHeight","texts","pins","map","pin","_idx","isFocus","collapseHandler","textPieces","fullTextPieces","abstractHeight","abstractPieces","length","secondaryLineHeight","iconY","editButtonMarginTop","textWidth","fullTextWidth","generateEditIcon","T","dx","transform","style","transformOrigin","onClick","width","height","isUp","edits","rate","isDown","transformOriginX","scaleOrigin","key","textLeadingMargin","filter","fontSize","_text","idx","secondaryFontSize","editable","IconExchange","IconThumbsUpSolid","IconThumbsUp","IconThumbsDownSolid","IconThumbsDown","IconCaretUp","IconCaretDown","reverse","_extends","Object","assign","target","i","arguments","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref3","_ref4","_ref5","_ref","svgRef","title","viewBox","ref","ForwardRef","forwardRef","MRTViewer","EraMinRatio","lastEraRatio","labelTextFontSize","labelTextLineHeight","nodeRadius","nodeTextLeadingMargin","nodeTextWidth","nodeFullSpan","horizonMarginTop","horizonMarginBottom","averageFontWidthRatio","nodePaddingLeft","nodePaddingRight","nodePaddingTop","nodePaddingBottom","nodeEditButtonMarginTop","nodeOffsetX","nodeOffsetY","nodeWidth","nodeTextLines","reduce","prev","nodeHeight","lines","Math","max","nodeTextLineHeight","_data","data","extract","paper","year","venue","trim","citations","prefix","venue_year","exec","text","replace","abstract","root","branches","forEach","branch","push","sort","a","b","clusterNames","name","split","lodash","capitalize","join","userEdits","toExchange","focusNodeIndex","focusEraIndex","hideSubBranch","disableTextBranchSpan","disableTextClusterSpan","nodeFontExtraSize","fontExtraSize","nodeTextFontSize","nodeTextSecondaryFontSize","nodeTextSecondaryLineHeight","nodeTextFold","span","textLength","floor","match","RegExp","line","nodeTextSecondaryFold","dataView","isSub","clusterID","branchID","eras","years","flatten","_to","_cnt","eraMinSize","lastEraMinSize","from","to","cnt","branchWithEra","era","numBranches","numClusters","rootColor","scale","clusterColors","cubehelix","start","rotations","gamma","lightness","correctLightness","colors","branchColors","_","views","defs","nodes","edges","addEdge","x1","y1","x2","y2","addVerticalEdge","addHorizontalEdge","generateGradientColor","colorID","gradientUnits","offset","stopColor","fullSpan","eraID","horizon","_height","erasHeight","eraHeight","nodeLeft","nodeRight","_branch","startEra","endEra","_nextBranch","shrinkFlag","sib","yStart","yEnd","param","_state","extendedBottomY","centerY","renderNodes","flattenDeep","_width","clusterLabelTextPieces","clusterLabelTexts","pieces","clusterLabelsHeight","extendedHeight","backgroundSolidColors","backgroundTextSolidColors","backgroundGradientSolidColors","backgroundSelectionColors","backgroundTextSelectionColors","backgroundGradientSelectionColors","stdDeviation","in","opacity","_sibBranch","isCurrent","visibility","textDecoration","textAnchor","hex","authors","MRT","like","viewerScale","displayQRCode","generated","full","svgLib","saveSvgAsPng","document","getElementById","srcWidth","baseVal","outputWidth","body","clientWidth","larger","min","display","QRCode","toCanvas","window","location","href","e","console","error","type","theme","twoToneColor","scaleFont","zoom","capture","App","sample_data","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f4b568f.chunk.js","sourcesContent":["import React from 'react'\nimport { ReactComponent as IconThumbsUp } from '@ant-design/icons-svg/inline-svg/outline/like.svg'\nimport { ReactComponent as IconThumbsDown } from '@ant-design/icons-svg/inline-svg/outline/dislike.svg'\nimport { ReactComponent as IconThumbsUpSolid } from '@ant-design/icons-svg/inline-svg/fill/like.svg'\nimport { ReactComponent as IconThumbsDownSolid } from '@ant-design/icons-svg/inline-svg/fill/dislike.svg'\nimport { ReactComponent as IconExchange } from '@ant-design/icons-svg/inline-svg/outline/pull-request.svg'\nimport { ReactComponent as IconCaretDown } from '@ant-design/icons-svg/inline-svg/outline/arrows-alt.svg'\nimport { ReactComponent as IconCaretUp } from '@ant-design/icons-svg/inline-svg/outline/shrink.svg'\nimport chroma from 'chroma-js'\nimport randomstring from 'randomstring'\nimport './node.css'\n\nconst ThumbUpColor = chroma(\"green\").luminance(0.3).desaturate(1)\nconst ThumbDownColor = chroma(\"red\").luminance(0.3).desaturate(2)\nconst ExchangeColor = chroma(\"blue\").luminance(0.3).desaturate(1)\nconst CaretColor = chroma(\"grey\").luminance(0.3)\nconst AbstractColor = chroma(\"grey\").luminance(0.1)\n\nexport class NodeCircle extends React.Component {\n    \n    render() {\n        return (\n            <circle className=\"era-node-circle\" cx={this.props.node.x} cy={this.props.node.y} r={this.props.radius}\n                onMouseOver={() => { if (this.props.onHover) this.props.onHover(true) }}\n                onMouseLeave={() => { if (this.props.onHover) this.props.onHover(false) }}\n                stroke={this.props.color} strokeWidth={this.props.strokeWidth}\n                fill={this.props.expand ? this.props.color : \"white\"}/>\n        )\n    }\n\n}\n\nexport class NodeText extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {displayInteractionTool: false}\n        this.id = randomstring.generate(8)\n        this.state = { expand: -1 }\n    }\n\n    onEdit(action, source) {\n        if (this.props.onEdit) this.props.onEdit(action, source)\n    }\n\n    onHover(hover) {\n        if (!hover && this.state.expand !== -1) this.setState({expand: -1})\n        if (this.props.onHover) this.props.onHover(hover)\n    }\n\n    render() {\n        let textColor = chroma(this.props.color).darken()\n        let baseY = 0\n        let textLines = 0\n        const iconSize = this.props.lineHeight * 1.25\n        const texts = this.props.pins.map((pin, _idx) => {\n            baseY = textLines * this.props.lineHeight\n            const isFocus = this.state.expand === _idx\n            const collapseHandler = () => this.setState({expand: isFocus ? -1 : _idx})\n            const textPieces = isFocus ? pin.fullTextPieces : pin.textPieces\n            const abstractHeight = pin.abstractPieces.length * this.props.secondaryLineHeight\n            const iconY = (textPieces.length - 1) * this.props.lineHeight + this.props.editButtonMarginTop + isFocus * abstractHeight\n            const textWidth = isFocus ? this.props.fullTextWidth : this.props.textWidth\n            const generateEditIcon = (T, dx, fill, action) => <g transform={`translate(${textWidth-iconSize*dx}, ${iconY})`}>\n                <g className=\"paper-edit-icon\" style={{transformOrigin: `${iconSize/2}px ${iconSize/2}px`}}\n                    onClick={action === \"collapse\" ? collapseHandler : (() => this.onEdit(action, pin))}>\n                    <T className=\"paper-edit-icon\" fill={fill} width={iconSize} height={iconSize}/>\n                    <rect className=\"paper-edit-icon\" width={iconSize} height={iconSize} fill=\"transparent\"/>\n                </g>\n            </g>\n            const isUp = pin.edits && pin.edits.rate > 0\n            const isDown = pin.edits && pin.edits.rate < 0\n            const transformOriginX = (this.props.scaleOrigin === \"left\") ? 0 : (this.props.scaleOrigin === \"middle\" ? (textWidth / 2) : textWidth)\n            return (\n                <g className=\"paper-view-group-outer\"\n                    key={_idx}\n                    onMouseOver={() => this.onHover(true)}\n                    onMouseLeave={() => this.onHover(false)}\n                    transform={`translate(${this.props.textLeadingMargin + this.props.radius}, ${baseY})`}>\n                    <g className=\"paper-view-group-inner\" style={{transformOrigin: `${transformOriginX}px ${-this.props.lineHeight}px`}}>\n                        <rect className=\"paper-text-background\" x={-this.props.lineHeight} y={-this.props.lineHeight * 2.5}\n                            width={textWidth+2*this.props.lineHeight} height={this.props.lineHeight * 4 + iconY + iconSize}\n                            fill=\"white\" filter=\"url(#blur-filter)\"/>\n                        <text className=\"paper-text\" fontSize={this.props.fontSize} fill={textColor} onClick={collapseHandler}>\n                            {textPieces.map((_text, idx) => {\n                                textLines++\n                                return <tspan key={idx} x=\"0\" y={idx * this.props.lineHeight}>{_text}</tspan>\n                            })}\n                        </text>\n                        {isFocus && \n                            <text className=\"paper-abstract-inner\" fontSize={this.props.secondaryFontSize} fill={AbstractColor}>\n                                {pin.abstractPieces.map((_text, idx) => <tspan key={idx} x=\"0\" y={textPieces.length * this.props.lineHeight + idx * this.props.secondaryLineHeight}>{_text}</tspan>)}\n                            </text>}\n                        <g className=\"paper-edit-icon-group\">\n                            {this.props.editable && generateEditIcon(IconExchange, 6, ExchangeColor, \"to-exchange\")}\n                            {generateEditIcon(isUp ? IconThumbsUpSolid : IconThumbsUp, 4.5, ThumbUpColor, isUp ? \"thumb-delete\" : \"thumb-up\")}\n                            {generateEditIcon(isDown ? IconThumbsDownSolid : IconThumbsDown, 3, ThumbDownColor, isDown ? \"thumb-delete\" : \"thumb-down\")}\n                            {pin.abstractPieces.length > 0 && generateEditIcon(isFocus ? IconCaretUp : IconCaretDown, 1.5, CaretColor, \"collapse\")}\n                        </g>\n                    </g>\n                </g>\n            )\n        })\n        return (\n            <g className=\"era-node-text-group\" transform={`translate(${this.props.x}, ${this.props.y})`}>\n                {texts.reverse()}\n            </g>\n        )\n    }\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M520.650142 80.061167L369.746208 410.281909l269.859169-71.853003 1.641632-0.631397-120.596867-257.736342z\",\n  fill: \"#E9624C\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M256.852386 657.03194l385.909977 121.859662 100.392157-222.756937-76.272784-163.279319-333.251449 96.098656-76.777901 168.077938z\",\n  fill: \"#2A698D\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M92.689111 1015.791836h865.266741L773.966704 622.052534l-102.286349 232.227895-442.735726-136.381798L92.689111 1015.791836z\",\n  fill: \"#233D7E\"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M484.281662 0H0v1015.791836h6.187693L483.650265 1.641633l0.631397-1.641633zM555.376989 0l0.505117 1.136515 483.271427 1014.655321h4.293501V0H555.376989z\",\n  fill: \"#3C3837\"\n});\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 1024 1024\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.7ecb0366.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport { NodeCircle, NodeText } from './node'\nimport randomstring from 'randomstring'\nimport chroma from 'chroma-js'\nimport lodash from 'lodash'\nimport './index.css'\nimport { ReactComponent as Logo } from '../logo.svg'\n\nexport default class MRTViewer extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.EraMinRatio = this.props.EraMinRatio || 0.05\n        this.lastEraRatio = this.props.lastEraRatio || 0.2\n\n        this.strokeWidth = 4\n\n        this.labelTextFontSize = 64\n        this.labelTextLineHeight = 72\n\n        this.nodeRadius = 20\n        this.nodeTextLeadingMargin = 20\n        this.nodeTextWidth = 260\n\n        this.nodeFullSpan = 2\n\n        this.horizonMarginTop = 32\n        this.horizonMarginBottom = 48\n\n        this.averageFontWidthRatio = 0.6\n        \n        this.nodePaddingLeft = 20\n        this.nodePaddingRight = 20\n        this.nodePaddingTop = 32\n        this.nodePaddingBottom = 12\n\n        this.nodeEditButtonMarginTop = 10\n\n        this.nodeOffsetX = this.nodePaddingLeft + this.nodeRadius\n        this.nodeOffsetY = this.nodePaddingTop + this.nodeRadius\n        \n        this.nodeWidth = this.nodePaddingLeft + 2 * this.nodeRadius + this.nodeTextLeadingMargin + this.nodeTextWidth + this.nodePaddingRight\n        this.nodeTextLines = (node) => node.pins.reduce((prev, pin) => prev + pin.textPieces.length, 0)\n        this.nodeHeight = (lines) => this.nodePaddingTop + this.nodeRadius + Math.max(this.nodeRadius, (lines-1) * this.nodeTextLineHeight) + this.nodePaddingBottom\n\n        this._data = props.data\n\n        const extract = (paper) => {\n            const id = paper[\"paper_id\"]\n            const year = paper[\"paper_year\"]\n            const venue = paper[\"paper_venue\"].trim()\n            const title = paper[\"paper_title\"].trim()\n            const citations = paper[\"paper_citations\"]\n            let prefix = `${year}`\n            const venue_year = /^(19|20)\\d{2}\\b/.exec(venue)\n            if (venue_year == null && venue.length > 0) {\n                prefix = `${year} ${venue}`\n            } else if (venue_year != null) {\n                prefix = `${venue}`\n            }\n            const text = `[${prefix}] ${title}`.replace('\\t', ' ').replace('\\n', ' ')\n            const abstract = paper[\"paper_abstract\"] ? paper[\"paper_abstract\"].trim().replace('\\t', ' ') : \"\"\n            return {id, year, venue, title, citations, text, abstract}\n        }\n        this.data = {\n            root: extract(this._data.root),\n            branches: []\n        }\n        this._data.branches.forEach(branch => {\n            this.data.branches.push(branch[0].map(extract))\n            this.data.branches.push(branch[1].map(extract))\n        })\n        this.data.branches.forEach(branch => branch.sort((a, b) => {\n            return a.year === b.year ? (b.citations - a.citations) : (b.year - a.year)\n        }))\n        this.clusterNames = this.props.data.clusterNames.map(name => name.split(' ').map(lodash.capitalize).join(' '))\n\n        this.state = {userEdits: this.props.userEdits || {}, toExchange: null, focusNodeIndex: -1, focusEraIndex: -1}\n    }\n\n    render() {\n\n        this.hideSubBranch = this.props.hideSubBranch\n        this.disableTextBranchSpan = this.props.disableTextBranchSpan\n        this.disableTextClusterSpan = this.props.disableTextClusterSpan\n\n        this.nodeFontExtraSize = this.props.fontExtraSize || 0\n        this.nodeTextFontSize = 20 + this.nodeFontExtraSize\n        this.nodeTextSecondaryFontSize = 16 + this.nodeFontExtraSize\n        this.nodeTextLineHeight = 20 + this.nodeFontExtraSize\n        this.nodeTextSecondaryLineHeight = 18 + this.nodeFontExtraSize\n        this.nodeTextFold = (text, span) => {\n            const textLength = Math.floor(((span - 1) * this.nodeWidth + this.nodeTextWidth) / (this.nodeTextFontSize * this.averageFontWidthRatio))\n            return (text.match(new RegExp(`([^\\\\n]{1,${textLength}})(\\\\s|$)`, 'g')) || []).filter(line => line.length > 0)\n        }\n        this.nodeTextSecondaryFold = (text, span) => {\n            const textLength = Math.floor(((span - 1) * this.nodeWidth + this.nodeTextWidth) / (this.nodeTextSecondaryFontSize * this.averageFontWidthRatio))\n            return (text.match(new RegExp(`([^\\\\n]{1,${textLength}})(\\\\s|$)`, 'g')) || []).filter(line => line.length > 0)\n        }\n\n        // initialize dataView (filter subBranch is hideSubBranch is enabled)\n        let dataView = {root: {...this.data.root}, branches: this.data.branches.map(() => [])}\n        this.data.branches.forEach((branch, idx) => branch.forEach(paper => {\n            const isSub = idx % 2 === 1\n            const edits = this.state.userEdits[paper.id]\n            const clusterID = edits ? edits.clusterID : Math.floor(idx / 2)\n            const branchID = clusterID * 2 + isSub\n            if (!this.hideSubBranch || !isSub) dataView.branches[branchID].push({...paper, isSub, edits, clusterID, branchID})\n        }))\n        dataView.branches.forEach(branch => branch.sort((a, b) => (a.year === b.year) ? (b.citations - a.citations) : (b.year - a.year)))\n\n        // calculate eras according to density of paper\n        let eras = []\n        {\n            let years = lodash.flatten(dataView.branches).map(paper => paper.year).sort().reverse()\n            let _to = years[0]\n            let _cnt = 1\n            let eraMinSize = this.EraMinRatio * years.length\n            let lastEraMinSize = this.lastEraRatio * years.length\n            for (let i = 1; i < years.length; i++) {\n                if (years[i] === years[i-1] || _cnt < eraMinSize || i > years.length - lastEraMinSize) _cnt += 1\n                else {\n                    eras.push({from: years[i-1], to: _to, cnt: _cnt})\n                    _to = years[i]\n                    _cnt = 1\n                }\n            }\n            eras.push({from: years[years.length-1], to: _to, cnt: _cnt})\n        }\n        const branchWithEra = (branch, era) => branch.filter(paper => paper.year >= era.from && paper.year <= era.to)\n\n        // initialize views\n        let numBranches = dataView.branches.length\n        let numClusters = Math.floor(numBranches / 2)\n        const rootColor = chroma.scale()(0.5)\n        const clusterColors = chroma.cubehelix().start(200).rotations(3).gamma(0.7).lightness([0.2, 0.6]).scale().correctLightness().colors(numClusters)\n        const branchColors = dataView.branches.map((_, branchID) => chroma(clusterColors[Math.floor(branchID / 2)]).luminance(branchID % 2 === 0 ? 0.25 : 0.5))\n        let views = {defs: [], nodes: {}, edges: []}\n        const addEdge = (x1, y1, x2, y2, color) => views.edges.push(<line key={views.edges.length} x1={x1} y1={y1} x2={x2} y2={y2} strokeWidth={this.strokeWidth - 1} stroke={color}/>)\n        const addVerticalEdge = (x, y1, y2, color) => addEdge(x, y1, x, y2, color)\n        const addHorizontalEdge = (x1, x2, y, color) => addEdge(x1, y, x2, y, color)\n        const generateGradientColor = (from, to, x1, y1, x2, y2) => {\n            const colorID = randomstring.generate(8)\n            views.defs.push(\n                <defs key={colorID}>\n                    <linearGradient id={colorID} x1={x1} y1={y1} x2={x2} y2={y2} gradientUnits=\"userSpaceOnUse\">\n                    <stop offset=\"20%\"  stopColor={from} />\n                    <stop offset=\"80%\" stopColor={to} />\n                    </linearGradient>\n                </defs>\n            )\n            return `url('#${colorID}')`\n        }\n\n        // Arrange coornidates for each era node\n        views.nodes.root = {\n            x: this.nodeWidth * (dataView.branches.length - 1) / 2 + this.nodeOffsetX,\n            y: this.nodeOffsetY,\n            color: rootColor,\n            pins: [{...dataView.root, \n                textPieces: this.nodeTextFold(dataView.root.text, 2), \n                fullTextPieces: this.nodeTextFold(dataView.root.text, this.nodeFullSpan),\n                abstractPieces: this.nodeTextSecondaryFold(dataView.root.abstract, this.nodeFullSpan),\n                edits: this.state.userEdits[dataView.root.id]\n            }],\n            span: 2,\n            fullSpan: this.nodeFullSpan,\n        }\n        views.nodes.root.lines = this.nodeTextLines(views.nodes.root)\n        views.nodes.root.height = this.nodeHeight(views.nodes.root.lines)\n\n        views.nodes.branches = dataView.branches.map((branch, branchID) => eras.map((era, eraID) => { return {\n            x: this.nodeWidth * branchID + this.nodeOffsetX,\n            y: 0,\n            color: branchColors[branchID],\n            pins: branchWithEra(branch, era),\n            era,\n            eraID,\n            clusterID: Math.floor(branchID / 2),\n            branchID,\n        }}))\n        \n        views.nodes.branches.forEach((branch, branchID) => branch.forEach((node, eraID) => {\n            if (node.pins.length === 0) return\n            node.span = (branchID < numBranches - 1 && views.nodes.branches[branchID+1][eraID].pins.length === 0\n                && !this.disableTextBranchSpan && (!this.disableTextClusterSpan || branchID % 2 === 0)) ? 2 : 1\n            node.fullSpan = (branchID < numBranches - 1) ? this.nodeFullSpan : 1\n            node.pins.forEach(pin => {\n                pin.textPieces = this.nodeTextFold(pin.text, node.span)\n                pin.fullTextPieces = this.nodeTextFold(pin.text, node.fullSpan)\n                pin.abstractPieces = this.nodeTextSecondaryFold(pin.abstract, node.fullSpan)\n            })\n            node.lines = this.nodeTextLines(node)\n            node.height = this.nodeHeight(node.lines)\n        }))\n\n        const horizon = views.nodes.root.height + this.horizonMarginTop\n        let _height = horizon + this.horizonMarginBottom\n        const erasHeight = eras.map((_, eraID) => {\n            views.nodes.branches.forEach(branch => branch[eraID].y = _height + this.nodeOffsetY)\n            const eraHeight = views.nodes.branches.reduce((prev, branch) => Math.max(prev, branch[eraID].height || 0), 0)\n            _height += eraHeight\n            return eraHeight\n        })\n\n        {\n            const node = views.nodes.root, nodeLeft = views.nodes.branches[0][0], nodeRight = views.nodes.branches[numBranches - 2][0]\n            addVerticalEdge(node.x, node.y, horizon, rootColor)\n            addHorizontalEdge(nodeLeft.x, nodeRight.x, horizon, rootColor)\n        }\n        views.nodes.branches.forEach((branch, branchID) => {\n            const _branch = branch.filter(node => node.pins.length > 0)\n            if (_branch.length === 0 && branchID % 2 === 1) return\n            const startEra = (branchID % 2 === 0) ? 0 : _branch[0].eraID\n            let endEra = (_branch.length > 0) ? _branch[_branch.length-1].eraID : 0\n            if (branchID % 2 === 0) {\n                const _nextBranch = views.nodes.branches[branchID+1].filter(node => node.pins.length > 0)\n                if (_nextBranch.length > 0) endEra = Math.max(endEra, _nextBranch[0].eraID)\n            }\n            const shrinkFlag = !this.disableTextBranchSpan && (!(this.disableTextClusterSpan && branchID % 2 === 0))\n            for (let eraID = startEra + 1; eraID <= endEra; eraID++) {\n                let node = branch[eraID]\n                let sib = branchID > 0 ? views.nodes.branches[branchID-1][eraID] : null\n                const yStart = (shrinkFlag && node.pins.length === 0 && ((branchID > 0 && sib.pins.length > 0) || (eraID === endEra))) ? (node.y - this.nodeRadius - this.nodeTextLineHeight) : node.y\n                node = branch[eraID-1]\n                sib = branchID > 0 ? views.nodes.branches[branchID-1][eraID-1] : null\n                const yEnd = (shrinkFlag && node.pins.length === 0 && branchID > 0 && sib.pins.length > 0) ? (node.y - this.nodeOffsetY + this.nodeHeight(this.nodeTextLines(sib)) - this.nodePaddingBottom + this.nodeTextLineHeight) : node.y\n                addVerticalEdge(node.x, yStart, yEnd, node.color)\n            }\n            if (branchID % 2 === 0) {\n                const node = branch[0]\n                const sib = branchID > 0 ? views.nodes.branches[branchID-1][0] : null\n                const yEnd = (shrinkFlag && node.pins.length === 0 && branchID > 0 && sib.pins.length > 0) ? (node.y - this.nodeRadius - this.nodeTextLineHeight) : node.y\n                addVerticalEdge(node.x, horizon, yEnd, generateGradientColor(rootColor, node.color, node.x, horizon, node.x, yEnd))\n            } else {\n                const node = branch[startEra]\n                const sib = views.nodes.branches[branchID-1][startEra]\n                const yEnd = node.y - this.nodeRadius - this.nodeTextLineHeight\n                const yStart = node.y\n                addVerticalEdge(node.x, yStart, yEnd, node.color)\n                addHorizontalEdge(node.x, sib.x, yEnd, generateGradientColor(node.color, sib.color, node.x, yEnd, sib.x, yEnd))\n            }\n        })\n        \n        const onEdit = (action, source, param) => {\n            const _state = {...this.state}\n            if (!_state.userEdits[source.id] && (action === \"thumb-up\" || action === \"thumb-down\" || action === \"exchange\")) {\n                _state.userEdits[source.id] = {rate: 0, clusterID: source.clusterID}\n            }\n            if (action === \"thumb-up\" && _state.userEdits[source.id].rate <= 0) {\n                _state.userEdits[source.id].rate = 1\n                this.setState(_state)\n            } else if (action === \"thumb-down\" && _state.userEdits[source.id].rate >= 0) {\n                _state.userEdits[source.id].rate = -1\n                this.setState(_state)\n            } else if (action === \"thumb-delete\" && _state.userEdits[source.id] && _state.userEdits[source.id].rate !== 0) {\n                _state.userEdits[source.id].rate = 0\n                this.setState(_state)\n            } else if (action === \"to-exchange\" && _state.toExchange === null) {\n                _state.toExchange = source\n                this.setState(_state)\n            } else if (action === \"exchange\") {\n                _state.userEdits[source.id].clusterID = param\n                _state.toExchange = null\n                this.setState(_state)\n            }\n        }\n\n        const extendedBottomY = views.nodes.branches.map(branch => branch[branch.length-1]).reduce((prev, node) => {\n            let centerY = node.y\n            node.pins.forEach(pin => {\n                prev = Math.max(prev, centerY + (pin.fullTextPieces.length - 1) * this.nodeTextLineHeight * 2 + pin.abstractPieces.length * this.nodeTextSecondaryLineHeight + this.nodeTextLineHeight * 2)\n                centerY += pin.textPieces.length * this.nodeTextLineHeight\n            })\n            return prev\n        }, _height)\n\n        const renderNodes = lodash.flattenDeep(views.nodes.branches).sort((a, b) => (a.eraID === b.eraID) ? (b.branchID - a.branchID) : (b.eraID - a.eraID))\n        renderNodes.push(views.nodes.root)\n\n        const _width = this.nodeWidth * dataView.branches.length\n        const clusterLabelTextPieces = this.clusterNames.map(name => name.split(' '))\n        const clusterLabelTexts = clusterLabelTextPieces.map((pieces, _idx) => \n            <text key={_idx}>\n                {pieces.reverse().map((_text, idx) => <tspan key={idx} x=\"0\" y={-idx * this.labelTextLineHeight}>{_text}</tspan>)}\n            </text>\n        )\n        const clusterLabelsHeight = clusterLabelTextPieces.reduce((prev, pieces) => Math.max(prev, pieces.length), 0) * this.labelTextLineHeight\n        _height += clusterLabelsHeight + this.labelTextLineHeight\n\n        const extendedHeight = Math.max(this.labelTextLineHeight * 1.5, extendedBottomY - _height)\n        const backgroundSolidColors = clusterColors.map(color => chroma(color).luminance(0.9))\n        const backgroundTextSolidColors = clusterColors.map(color => chroma(color).luminance(0.7))\n        const backgroundGradientSolidColors = clusterColors.map((color, idx) => {\n            const x = views.nodes.branches[idx*2][eras.length-1].x\n            return generateGradientColor(chroma(color).luminance(0.9), \"white\", x, _height, x, _height+extendedHeight)\n        })\n        const backgroundSelectionColors = clusterColors.map(color => chroma(color).luminance(0.5))\n        const backgroundTextSelectionColors = clusterColors.map(color => chroma(color).luminance(0.2))\n        const backgroundGradientSelectionColors = clusterColors.map((color, idx) => {\n            const x = views.nodes.branches[idx*2][eras.length-1].x\n            return generateGradientColor(chroma(color).luminance(0.5), \"white\", x, _height, x, _height+extendedHeight)\n        })\n\n        return <svg className=\"mrt\" id={this.props.id} /*width={`${_width}px`} height={`${_height}px`}*/ width=\"100%\" viewBox={`0 0 ${_width} ${_height+extendedHeight}`}>\n            {views.defs}\n            <filter id=\"blur-filter\">\n                <feGaussianBlur stdDeviation={this.nodeTextLineHeight} in=\"SourceGraphic\"/>\n            </filter>\n            {\n                <g className=\"mrt-background\">\n                    <rect x=\"0\" y=\"0\" width={_width} height={horizon} fill={chroma(rootColor).luminance(0.9)}></rect>\n                </g>\n            }\n            {\n                clusterLabelTexts.map((texts, idx) => {\n                    return <g className=\"mrt-background\" key={idx} opacity={this.state.toExchange === null ? 1 : 0}>\n                        <rect x={this.nodeWidth*idx*2} y={horizon} width={this.nodeWidth*2} height={_height-horizon} fill={backgroundSolidColors[idx]}/>\n                        <rect x={this.nodeWidth*idx*2} y={_height} width={this.nodeWidth*2} height={extendedHeight} fill={backgroundGradientSolidColors[idx]}/>\n                        <g transform={`translate(${this.nodeWidth*idx*2+this.nodeOffsetX}, ${_height-this.labelTextLineHeight/2})`} fill={backgroundTextSolidColors[idx]} fontSize={this.labelTextFontSize}>{texts}</g>\n                    </g>\n                })\n            }\n            {\n                eras.map((era, idx) => \n                <g key={idx} className=\"mrt-era-background\" transform={`translate(0, ${views.nodes.branches[0][idx].y - this.nodeRadius - this.nodePaddingTop + erasHeight[idx]})`}>\n                    <rect className=\"mrt-era-background\" x=\"0\" y={-erasHeight[idx]} width={_width} height={erasHeight[idx]} opacity={(idx === this.state.focusEraIndex) ? 0.1 : 0}/>\n                    <text className=\"mrt-era-background\" fontSize={this.labelTextFontSize} x={this.nodePaddingLeft} y={-this.labelTextFontSize/2} opacity={(idx === this.state.focusEraIndex) ? 0.2 : 0}>\n                        {era.from === era.to ? era.from : `${era.from} - ${era.to}`}\n                    </text>\n                </g>)\n            }\n            {\n                views.nodes.branches.map((branch, idx) => {\n                    if (idx % 2 !== 0) return <text key={idx}/>\n                    const _branch = branch.filter(node => node.pins.length > 0)\n                    const _sibBranch = views.nodes.branches[idx+1].filter(node => node.pins.length > 0)\n                    if (_branch.length === 0 && _sibBranch.length === 0) return <text key={idx}/>\n                    const fontSize = this.nodeTextFontSize * 2\n                    const y = ((_branch.length === 0 || (_sibBranch.length > 0 && _sibBranch[0].eraID <= _branch[0].eraID)) ?\n                        (_sibBranch[0].y - this.nodeRadius - this.nodeTextLineHeight) :\n                        (_branch[0].y - this.nodeTextLineHeight)) - fontSize / 2\n                    const x = branch[0].x + this.nodeRadius + this.nodeTextLeadingMargin\n                    const color = chroma(branchColors[idx]).darken(2)\n                    return <text key={idx} x={x} y={y} fill={color} fontSize={fontSize}>{this.clusterNames[Math.floor(idx / 2)]}</text>\n                })\n            }\n            {views.edges}\n            {renderNodes.map((node, idx) => node.pins.length > 0 &&\n                <NodeCircle key={idx} node={node}\n                            radius={this.nodeRadius}\n                            lineHeight={this.nodeTextLineHeight}\n                            color={node.color}\n                            strokeWidth={this.strokeWidth}\n                            onHover={(hover) => \n                                this.setState({...this.state,\n                                    focusNodeIndex: hover ? idx : -1,\n                                    focusEraIndex: hover ? node.eraID : -1\n                                })   \n                            }\n                            expand={idx === this.state.focusNodeIndex}/>\n            )}\n            <g className=\"mrt-node-text-container\">\n            {renderNodes.map((node, idx) => node.pins.length > 0 &&\n                <NodeText key={idx}\n                      pins={node.pins} \n                      x={node.x} y={node.y}\n                      radius={this.nodeRadius}\n                      lineHeight={this.nodeTextLineHeight}\n                      secondaryLineHeight={this.nodeTextSecondaryLineHeight}\n                      textWidth={(node.span - 1) * this.nodeWidth + this.nodeTextWidth}\n                      fullTextWidth={(node.fullSpan - 1) * this.nodeWidth + this.nodeTextWidth}\n                      color={node.color}\n                      fontSize={this.nodeTextFontSize}\n                      secondaryFontSize={this.nodeTextSecondaryFontSize}\n                      strokeWidth={this.strokeWidth}\n                      onEdit={onEdit}\n                      textLeadingMargin={this.nodeTextLeadingMargin}\n                      onHover={(hover) => this.setState({...this.state, focusNodeIndex: hover ? idx : -1})}\n                      editable={typeof(node.clusterID) !== \"undefined\"}\n                      editButtonMarginTop={this.nodeEditButtonMarginTop}\n                      scaleOrigin={(node.clusterID === numClusters - 1) ? \"right\" : ((node.branchID === numBranches - 3) ? \"middle\" : \"left\")}/>)}\n            </g>\n            {\n                clusterLabelTexts.map((texts, idx) => {\n                    const isCurrent = this.state.toExchange !== null && idx === this.state.toExchange.clusterID\n                    return <g className=\"mrt-background\" key={idx} opacity={this.state.toExchange === null ? 0 : 1} visibility={this.state.toExchange === null ? \"hidden\" : \"none\"} onClick={() => onEdit(\"exchange\", this.state.toExchange, idx)}>\n                        <rect className=\"mrt-background-card\" x={this.nodeWidth*idx*2} y={horizon} width={this.nodeWidth*2} height={_height-horizon} fill={backgroundSelectionColors[idx]}/>\n                        <rect className=\"mrt-background-card\" x={this.nodeWidth*idx*2} y={_height} width={this.nodeWidth*2} height={extendedHeight} fill={backgroundGradientSelectionColors[idx]}/>\n                        <g className=\"mrt-background-text\" style={{textDecoration: isCurrent ? \"underline\" : \"\"}} transform={`translate(${this.nodeWidth*idx*2+this.nodeOffsetX}, ${_height-this.labelTextLineHeight/2})`} fill={backgroundTextSelectionColors[idx]} fontSize={this.labelTextFontSize}>{texts}</g>\n                    </g>\n                })\n            }\n            {\n                <g opacity=\"0.5\" transform={`translate(${_width}, ${_height+extendedHeight-this.labelTextLineHeight * 0.5})`}>                    \n                    <Logo x={-this.labelTextFontSize * 3.35} y={-this.labelTextFontSize * 1.78} height={this.labelTextFontSize * 0.8} width={this.labelTextFontSize * 0.8}/>\n                    <text x={-this.labelTextFontSize * 0.1} y={-this.labelTextFontSize * 0.05} textAnchor=\"end\"\n                        fontSize={this.labelTextFontSize * 0.75} fill={chroma(\"grey\").luminance(0.3).hex()}>{(this.props.authors || []).join(', ')}\n                    </text>\n                    <text x={-this.labelTextFontSize * 0.1} y={-this.labelTextFontSize * 1} textAnchor=\"end\"\n                        fontSize={this.labelTextFontSize * 0.7} fill={chroma(\"grey\").luminance(0.3).hex()}>AMiner\n                    </text>\n                </g>\n            }\n        </svg>\n    }\n}","import React from 'react'\nimport MRTViewer from './mrt-viewer'\nimport { Icon } from 'antd'\nimport chroma from 'chroma-js'\nimport './index.css'\nimport svgLib from 'save-svg-as-png'\nimport QRCode from 'qrcode'\n\nexport default class MRT extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            userEdits: this.props.userEdits || {},\n            like: this.props.like || false,\n            viewerScale: 100,\n            hideSubBranch: false,\n            disableTextClusterSpan: false,\n            fontExtraSize: 0,\n            displayQRCode: false,\n        }\n        this.generated = false\n    }\n\n    like() {\n        this.setState({...this.state, like: !this.state.like})\n    }\n\n    capture(full) {\n        if (full)\n            svgLib.saveSvgAsPng(document.getElementById(\"mrt-viewer\"), `master-reading-tree.png`)\n        else {\n            const srcWidth = document.getElementById(\"mrt-viewer\").viewBox.baseVal.width\n            const outputWidth = document.body.clientWidth\n            svgLib.saveSvgAsPng(document.getElementById(\"mrt-viewer\"), `master-reading-tree-snapshot.png`, {scale: outputWidth / srcWidth})\n        }\n    }\n\n    zoom(larger) {\n        this.setState({...this.state, viewerScale: Math.min(Math.max(this.state.viewerScale + (larger ? 10 : -10), 100), 1000)})\n    }\n\n    scaleFont(larger) {\n        this.setState({...this.state, fontExtraSize: Math.max(0, Math.min(10, this.state.fontExtraSize + (larger ? 2 : -2)))})\n    }\n\n    displayQRCode(display) {\n        if (!this.generated) {\n            QRCode.toCanvas(document.getElementById(\"mrt-share-qrcode-canvas\"), window.location.href, (e) => { if (e) console.error(e) })\n            this.generated = true\n        }\n        this.setState({...this.state, displayQRCode: display})\n    }\n\n    render() {\n        return (\n            <div className=\"mrt-container\" style={{width: `${this.state.viewerScale}%`}}>\n                <div className=\"mrt-toolbox mrt-toolbox-menu horizontal\">\n                    <div className=\"menu-item horizontal-secondary mrt-toolbox-tool-icon\" onClick={() => this.like()}>\n                        <Icon type=\"heart\" theme={this.state.like ? \"filled\" : \"twoTone\"}\n                            twoToneColor={chroma(\"red\").luminance(0.4).hex()}\n                            style={{color: chroma(\"red\").luminance(0.4).hex()}}/>\n                    </div>\n                    <div className=\"menu-item horizontal-secondary mrt-toolbox-menu vertical\">\n                        <div className=\"menu-item mrt-toolbox-tool-icon\">\n                            <Icon type=\"share-alt\" theme=\"outlined\" style={{color: chroma(\"green\").luminance(0.4).hex()}}/>\n                        </div>\n                        <div className=\"menu-item vertical-secondary mrt-toolbox-tool-icon\" \n                            onMouseOver={() => this.displayQRCode(true)}\n                            onMouseLeave={() => this.displayQRCode(false)}>\n                            <Icon type=\"qrcode\" theme=\"outlined\" style={{color: chroma(\"green\").luminance(0.2).hex()}}/>\n                        </div>\n                    </div>\n                    <div className=\"menu-item horizontal-secondary mrt-toolbox-menu vertical\">\n                        <div className=\"menu-item mrt-toolbox-tool-icon\">\n                            <Icon type=\"font-size\" theme=\"outlined\" style={{color: chroma(\"pink\").luminance(0.4).hex()}}/>\n                        </div>\n                        <div className=\"menu-item vertical-secondary mrt-toolbox-tool-icon\" onClick={() => this.scaleFont(true)}>\n                            <Icon type=\"zoom-in\" theme=\"outlined\" style={{color: chroma(\"pink\").luminance(0.2).hex()}}/>\n                        </div>\n                        <div className=\"menu-item vertical-secondary mrt-toolbox-tool-icon\" onClick={() => this.scaleFont(false)}>\n                            <Icon type=\"zoom-out\" theme=\"outlined\" style={{color: chroma(\"pink\").luminance(0.2).hex()}}/>\n                        </div>\n                    </div>\n                    <div className=\"menu-item horizontal-secondary mrt-toolbox-menu vertical\">\n                        <div className=\"menu-item mrt-toolbox-tool-icon\">\n                            <Icon type=\"search\" theme=\"outlined\" style={{color: chroma(\"aquamarine\").luminance(0.4).hex()}}/>\n                        </div>\n                        <div className=\"menu-item vertical-secondary mrt-toolbox-tool-icon\" onClick={() => this.zoom(true)}>\n                            <Icon type=\"zoom-in\" theme=\"outlined\" style={{color: chroma(\"aquamarine\").luminance(0.2).hex()}}/>\n                        </div>\n                        <div className=\"menu-item vertical-secondary mrt-toolbox-tool-icon\" onClick={() => this.zoom(false)}>\n                            <Icon type=\"zoom-out\" theme=\"outlined\" style={{color: chroma(\"aquamarine\").luminance(0.2).hex()}}/>\n                        </div>\n                    </div>\n                    <div className=\"menu-item horizontal-secondary mrt-toolbox-menu vertical\">\n                        <div className=\"menu-item mrt-toolbox-tool-icon\">\n                            <Icon type=\"download\" theme=\"outlined\" style={{color: chroma(\"blue\").luminance(0.4).hex()}}/>\n                        </div>\n                        <div className=\"menu-item vertical-secondary mrt-toolbox-tool-icon\" onClick={() => this.capture(true)}>\n                            <Icon type=\"file-image\" theme=\"twoTone\" twoToneColor={chroma(\"blue\").luminance(0.2).hex()}/>\n                        </div>\n                        <div className=\"menu-item vertical-secondary mrt-toolbox-tool-icon\" onClick={() => this.capture(false)}>\n                            <Icon type=\"camera\" theme=\"twoTone\" twoToneColor={chroma(\"blue\").luminance(0.2).hex()}/>\n                        </div>\n                    </div>\n                    <div className=\"menu-item horizontal-secondary mrt-toolbox-menu vertical\">\n                        <div className=\"menu-item mrt-toolbox-tool-icon\">\n                            <Icon type=\"control\" theme=\"outlined\" style={{color: chroma(\"teal\").luminance(0.4).hex()}}/>\n                        </div>\n                        <div className=\"menu-item vertical-secondary mrt-toolbox-tool-icon\" onClick={() => this.setState({...this.state, hideSubBranch: !this.state.hideSubBranch})}>\n                            <Icon type={`eye${this.state.hideSubBranch ? \"\" : \"-invisible\"}`} theme=\"twoTone\" twoToneColor={chroma(\"teal\").luminance(0.2).hex()}/>\n                        </div>\n                        <div className=\"menu-item vertical-secondary mrt-toolbox-tool-icon\" onClick={() => this.setState({...this.state, disableTextClusterSpan: !this.state.disableTextClusterSpan})}>\n                            <Icon type=\"column-width\" theme=\"outlined\" style={{color: chroma(\"teal\").luminance(0.2).hex()}}/>\n                        </div>\n                    </div>\n                    <div className=\"menu-item mrt-toolbox-menu vertical\">\n                        <div className=\"menu-item mrt-toolbox-tool-icon\">\n                            <Icon type=\"appstore\" theme=\"outlined\" style={{color: chroma(\"purple\").luminance(0.4).hex()}}/>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mrt-qrcode\" style={{display: this.state.displayQRCode ? \"block\" : \"none\"}}>\n                    <canvas id=\"mrt-share-qrcode-canvas\"/>\n                </div>\n                <MRTViewer id=\"mrt-viewer\" data={this.props.data} userEdits={this.userEdits} \n                    hideSubBranch={this.state.hideSubBranch} disableTextClusterSpan={this.state.disableTextClusterSpan}\n                    fontExtraSize={this.state.fontExtraSize}\n                    authors={this.props.authors}/>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport sample_data from './sample.json';\nimport MRT from './components';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MRT data={sample_data} authors={[\"Somefive\", \"Rainatum\"]}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}