{"version":3,"sources":["components/mrt-viewer/node.js","components/logo.svg","components/mrt-viewer/index.js","components/toolbox/tool.js","components/toolbox/index.js","components/index.js","App.js","serviceWorker.js","index.js"],"names":["ThumbUpColor","chroma","luminance","desaturate","ThumbDownColor","ExchangeColor","DisplayLinkColor","StarColor","HideLinkColor","AbstractColor","NodeCircle","props","state","hover","this","setState","onHover","className","cx","node","x","cy","y","r","radius","onMouseOver","onMouseLeave","stroke","color","strokeWidth","fill","React","Component","NodeText","expand","lang","translation","TooltipTextTranslation","t","text","toLowerCase","textColor","iconSize","lineHeight","texts","pins","map","pin","_idx","isFocus","textPieces","fullTextPieces","abstractHeight","abstractPieces","length","secondaryLineHeight","iconY","editButtonMarginTop","textWidth","fullTextWidth","generateEditIcon","T","dx","action","transform","style","transformOrigin","onClick","onSwitchLinksVisibility","id","onEdit","width","height","textAnchor","fontSize","isUp","edits","rate","isDown","transformOriginX","scaleOrigin","key","textLeadingMargin","filter","_text","idx","secondaryFontSize","editable","IconExchange","IconThumbsUpSolid","IconThumbsUp","IconThumbsDownSolid","IconThumbsDown","references","citations","IconShareAlt","linksVisibility","level","_","range","reverse","NodeLinks","source","target","x1","y1","x2","y2","mx","nodePaddingLeft","d","forward","nx","uy","by","nnx","links","nodesLookup","generateLinkPath","strokeDasharray","generateArrowPath","indexOf","_extends","Object","assign","i","arguments","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref3","_ref4","_ref5","_ref","svgRef","title","viewBox","ref","ForwardRef","forwardRef","MRTViewer","EraMinRatio","lastEraRatio","labelTextFontSize","labelTextLineHeight","nodeRadius","nodeTextLeadingMargin","nodeTextWidth","nodeFullSpan","horizonMarginTop","horizonMarginBottom","averageFontWidthRatio","nodePaddingRight","nodePaddingTop","nodePaddingBottom","nodeEditButtonMarginTop","nodeOffsetX","nodeOffsetY","nodeWidth","pinHeight","nodeHeight","pinsHeight","sum","nodeTextLineHeight","Math","max","toExchange","focusEraIndex","extract","paper","year","venue","trim","score","prefix","venue_year","exec","replace","abstract","clusterNames","data","name","split","capitalize","join","hideSubBranch","disableTextBranchSpan","disableTextClusterSpan","nodeFontExtraSize","fontExtraSize","nodeTextFontSize","nodeTextSecondaryFontSize","nodeTextSecondaryLineHeight","nodeTextCustomFold","span","textLength","floor","match","RegExp","line","nodeTextFold","nodeTextSecondaryFold","importance","maxImportance","minImportance","min","clusterStrokeWidth","dataView","root","branches","forEach","subBranches","clusterID","branch","isSub","raw","userEdits","branchID","push","sort","a","b","paperCount","flatten","scoreRank","eras","years","_to","_cnt","eraMinSize","lastEraMinSize","from","to","cnt","branchWithEra","era","numClusters","numBranches","rootColor","scale","clusterColors","cubehelix","start","rotations","gamma","lightness","correctLightness","colors","branchColors","branchTextColors","darken","views","defs","nodes","edges","addEdge","addVerticalEdge","addHorizontalEdge","generateGradientColor","colorID","randomstring","generate","gradientUnits","offset","stopColor","fullSpan","eraID","edgeStrokeWidth","horizon","_height","erasHeight","eraHeight","reduce","prev","slice","nodeLeft","nodeRight","_branch","startEra","endEra","_nextBranch","shrinkFlag","sib","yStart","yEnd","param","onEditChange","extendedBottomY","renderNodes","flattenDeep","_width","clusterLabelTextPieces","clusterLabelTexts","pieces","clusterLabelsHeight","extendedHeight","backgroundSolidColors","backgroundTextSolidColors","backgroundGradientSolidColors","backgroundSelectionColors","backgroundTextSelectionColors","backgroundGradientSelectionColors","stdDeviation","in","opacity","_sibBranch","isCurrent","visibility","textDecoration","hex","authors","Tool","primary","icon","theme","type","twoToneColor","tooltipText","children","Toolbox","setTimeout","QRCode","toCanvas","document","getElementById","window","location","href","e","console","error","like","onLike","scaleFont","zoom","capture","onHideSubBranch","onDisableTextClusterSpan","onLoadJson","click","hidden","onChange","MRT","viewerScale","generated","full","svgLib","saveSvgAsPng","srcWidth","baseVal","outputWidth","body","clientWidth","larger","files","reader","FileReader","onload","JSON","parse","result","readAsText","undefined","App","sample_data","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.42179aaa.chunk.js","sourcesContent":["import React from 'react'\nimport { ReactComponent as IconThumbsUp } from '@ant-design/icons-svg/inline-svg/outline/like.svg'\nimport { ReactComponent as IconThumbsDown } from '@ant-design/icons-svg/inline-svg/outline/dislike.svg'\nimport { ReactComponent as IconThumbsUpSolid } from '@ant-design/icons-svg/inline-svg/fill/like.svg'\nimport { ReactComponent as IconThumbsDownSolid } from '@ant-design/icons-svg/inline-svg/fill/dislike.svg'\nimport { ReactComponent as IconExchange } from '@ant-design/icons-svg/inline-svg/outline/pull-request.svg'\nimport { ReactComponent as IconShareAlt } from '@ant-design/icons-svg/inline-svg/outline/share-alt.svg'\nimport { ReactComponent as IconStar } from '@ant-design/icons-svg/inline-svg/fill/star.svg'\nimport chroma from 'chroma-js'\nimport './node.css'\nimport TooltipTextTranslation from './tooltip-text-translation.json'\nimport _ from 'lodash'\n\nconst ThumbUpColor = chroma(\"green\").luminance(0.3).desaturate(1)\nconst ThumbDownColor = chroma(\"red\").luminance(0.3).desaturate(2)\nconst ExchangeColor = chroma(\"blue\").luminance(0.3).desaturate(1)\nconst DisplayLinkColor = chroma(\"orange\").luminance(0.3)\nconst StarColor = chroma(\"purple\").luminance(0.3)\nconst HideLinkColor = chroma(\"grey\").luminance(0.3)\nconst AbstractColor = chroma(\"grey\").luminance(0.1)\n\nexport class NodeCircle extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {hover: false}\n    }\n\n    onHover(hover) {\n        this.setState({hover})\n        if (this.props.onHover) this.props.onHover(hover)\n    }\n    \n    render() {\n        return (\n            <circle className=\"era-node-circle\" cx={this.props.node.x} cy={this.props.node.y} r={this.props.radius}\n                onMouseOver={() => { this.onHover(true) }}\n                onMouseLeave={() => { this.onHover(false) }}\n                stroke={this.props.node.color} strokeWidth={this.props.strokeWidth}\n                fill={this.state.hover ? this.props.node.color : \"white\"}/>\n        )\n    }\n\n}\n\nexport class NodeText extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { expand: -1 }\n    }\n\n    onHover(hover) {\n        if (!hover && this.state.expand !== -1) this.setState({expand: -1})\n    }\n\n    render() {\n        const lang = this.props.lang || \"en\"\n        const translation = TooltipTextTranslation[lang]\n        const t = (text) => (translation && translation[text.toLowerCase()]) ? translation[text.toLowerCase()] : text\n        let textColor = this.props.node.textColor\n        const iconSize = this.props.lineHeight * 1.25\n        const texts = this.props.pins.map((pin, _idx) => {\n            const isFocus = this.state.expand === _idx\n            const collapseHandler = () => this.setState({expand: isFocus ? -1 : _idx})\n            const textPieces = isFocus ? pin.fullTextPieces : pin.textPieces\n            const abstractHeight = pin.abstractPieces.length * this.props.secondaryLineHeight\n            const iconY = (textPieces.length - 1) * this.props.lineHeight + this.props.editButtonMarginTop + isFocus * abstractHeight\n            const textWidth = isFocus ? this.props.fullTextWidth : this.props.textWidth\n            const generateEditIcon = (T, dx, fill, action, text) => <g transform={`translate(${textWidth-iconSize*dx}, ${iconY})`}>\n                <g className=\"paper-edit-icon\" style={{transformOrigin: `${iconSize/2}px ${iconSize/2}px`}}\n                    onClick={action === \"link-switch\" ? () => this.props.onSwitchLinksVisibility(pin.id) : (() => this.props.onEdit(action, pin))}>\n                    <T className=\"paper-edit-icon\" fill={fill} width={iconSize} height={iconSize}/>\n                    <rect className=\"paper-edit-icon\" width={iconSize} height={iconSize} fill=\"transparent\"/>\n                    <text textAnchor=\"middle\" x={iconSize/2} y={iconSize+this.props.secondaryLineHeight/2} fill={fill} fontSize={this.props.secondaryLineHeight/2}>{t(text)}</text>\n                </g>\n            </g>\n            const isUp = pin.edits && pin.edits.rate > 0\n            const isDown = pin.edits && pin.edits.rate < 0\n            const transformOriginX = (this.props.scaleOrigin === \"left\") ? 0 : (this.props.scaleOrigin === \"middle\" ? (textWidth / 2) : textWidth)\n            return (\n                <g key={_idx} transform={`translate(${this.props.textLeadingMargin + this.props.radius}, ${pin.y - this.props.node.y})`}>\n                    <g className=\"paper-view-group-inner\" style={{transformOrigin: `${transformOriginX}px ${-this.props.lineHeight}px`}}\n                        onMouseOver={() => this.onHover(true)}\n                        onMouseLeave={() => this.onHover(false)}>\n                        <rect className=\"paper-text-background\" x={-this.props.lineHeight} y={-this.props.lineHeight * 2.5}\n                            width={textWidth+2*this.props.lineHeight} height={this.props.lineHeight * 4 + iconY + iconSize}\n                            fill=\"white\" filter=\"url(#blur-filter)\"/>\n                        <text className=\"paper-text\" fontSize={this.props.fontSize} fill={textColor} onClick={collapseHandler}>\n                            {textPieces.map((_text, idx) => <tspan key={idx} x=\"0\" y={idx * this.props.lineHeight}>{_text}</tspan>)}\n                        </text>\n                        {isFocus && \n                            <text className=\"paper-abstract-inner\" fontSize={this.props.secondaryFontSize} fill={AbstractColor}>\n                                {pin.abstractPieces.map((_text, idx) => <tspan key={idx} x=\"0\" y={textPieces.length * this.props.lineHeight + idx * this.props.secondaryLineHeight}>{_text}</tspan>)}\n                            </text>}\n                        <g className=\"paper-edit-icon-group\">\n                            {this.props.editable && generateEditIcon(IconExchange, 6, ExchangeColor, \"to-exchange\", \"Move\")}\n                            {generateEditIcon(isUp ? IconThumbsUpSolid : IconThumbsUp, 4.5, ThumbUpColor, isUp ? \"thumb-delete\" : \"thumb-up\", \"Like\")}\n                            {generateEditIcon(isDown ? IconThumbsDownSolid : IconThumbsDown, 3, ThumbDownColor, isDown ? \"thumb-delete\" : \"thumb-down\", \"Dislike\")}\n                            {this.props.editable && (pin.references.length > 0 || pin.citations.length > 0) && generateEditIcon(IconShareAlt, 1.5, this.props.linksVisibility[pin.id] ? HideLinkColor : DisplayLinkColor, \"link-switch\", \"Citation\")}\n                            {pin.level &&\n                            <g transform={`translate(0, ${iconY})`}>\n                                <rect className=\"paper-edit-icon\" width={iconSize*pin.level} height={iconSize} fill=\"transparent\"/>\n                                <g className=\"paper-edit-icon\" style={{transformOrigin: `${iconSize/2}px ${iconSize/2}px`}}>\n                                {_.range(0, pin.level).map((idx) => <g transform={`translate(${idx * iconSize}, 0)`} key={idx}><IconStar className=\"paper-edit-icon\" fill={StarColor} width={iconSize} height={iconSize}/></g>)}\n                                    <text textAnchor=\"middle\" x={pin.level*iconSize/2} y={iconSize+this.props.secondaryLineHeight/2} fill={StarColor} fontSize={this.props.secondaryLineHeight/2}>{t(\"Influence\")}</text>\n                                </g>\n                            </g>\n                            }\n                        </g>\n                    </g>\n                </g>\n            )\n        })\n        return (\n            <g className=\"era-node-text-group\" transform={`translate(${this.props.x}, ${this.props.y})`}>\n                {texts.reverse()}\n            </g>\n        )\n    }\n}\n\nexport class NodeLinks extends React.Component {\n\n    generateLinkPath(source, target) {\n        const x1 = source.x, y1 = source.y, x2 = target.x, y2 = target.y\n        const mx = x1 - this.props.radius - this.props.nodePaddingLeft\n        let d = `M ${x1} ${y1}`\n        if (y1 === y2) d += ` L ${x2} ${y2}`\n        else d += ` C ${mx} ${y1}, ${mx} ${y1}, ${mx} ${(y1+y2)/2} S ${mx} ${y2}, ${x2} ${y2}`\n        return d\n    }\n\n    generateArrowPath(source, target, forward) {\n        const x = target.x, y = target.y\n        const nx = (x >= source.x) ? (x - this.props.radius) : (x + this.props.radius)\n        const uy = y - this.props.radius / 2, by = y + this.props.radius / 2\n        if (forward) {\n            const nnx = (x >= source.x) ? (x - this.props.radius * 1.2) : (x + this.props.radius * 1.2)\n            return `M ${x} ${y} L ${nnx} ${uy} L ${nx} ${y} L ${nnx} ${by} L ${x} ${y}`\n        } else {\n            const nnx = (x >= source.x) ? (x + this.props.radius * 0.2) : (x - this.props.radius * 0.2)\n            return `M ${nx} ${y} L ${nnx} ${uy} L ${x} ${y} L ${nnx} ${by} L ${nx} ${y}`\n        }\n    }\n\n    render() {\n        const textColor = this.props.node.textColor\n        const links = this.props.node.pins.map((pin, _idx) => {\n            return (this.props.linksVisibility[pin.id] && \n            <g key={pin.id}>\n                <circle cx={pin.x} cy={pin.y} r={0.5 * this.props.lineHeight} fill={textColor}/>\n                {[...pin.references, ...pin.citations].map((id, idx) => this.props.nodesLookup[id] && \n                <g key={idx}>\n                    <path d={this.generateLinkPath(pin, this.props.nodesLookup[id])} strokeWidth={2} stroke={textColor} strokeDasharray={10} fill=\"transparent\"/>\n                    <path d={this.generateArrowPath(pin, this.props.nodesLookup[id], pin.references.indexOf(id) >= 0)} fill={textColor}/>\n                </g>\n                )}\n            </g>)\n        })\n        return <g>{links}</g>\n    }\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M520.650142 80.061167L369.746208 410.281909l269.859169-71.853003 1.641632-0.631397-120.596867-257.736342z\",\n  fill: \"#E9624C\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M256.852386 657.03194l385.909977 121.859662 100.392157-222.756937-76.272784-163.279319-333.251449 96.098656-76.777901 168.077938z\",\n  fill: \"#2A698D\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M92.689111 1015.791836h865.266741L773.966704 622.052534l-102.286349 232.227895-442.735726-136.381798L92.689111 1015.791836z\",\n  fill: \"#233D7E\"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M484.281662 0H0v1015.791836h6.187693L483.650265 1.641633l0.631397-1.641633zM555.376989 0l0.505117 1.136515 483.271427 1014.655321h4.293501V0H555.376989z\",\n  fill: \"#3C3837\"\n});\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 1024 1024\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.7ecb0366.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport { NodeCircle, NodeText, NodeLinks } from './node'\nimport randomstring from 'randomstring'\nimport chroma from 'chroma-js'\nimport './index.css'\nimport { ReactComponent as Logo } from '../logo.svg'\nimport _ from 'lodash'\n\nexport default class MRTViewer extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.EraMinRatio = this.props.EraMinRatio || 0.05\n        this.lastEraRatio = this.props.lastEraRatio || 0.2\n\n        this.strokeWidth = 4\n\n        this.labelTextFontSize = 64\n        this.labelTextLineHeight = 72\n\n        this.nodeRadius = 20\n        this.nodeTextLeadingMargin = 20\n        this.nodeTextWidth = 260\n\n        this.nodeFullSpan = 2\n\n        this.horizonMarginTop = 32\n        this.horizonMarginBottom = 48\n\n        this.averageFontWidthRatio = 0.6\n        \n        this.nodePaddingLeft = 20\n        this.nodePaddingRight = 20\n        this.nodePaddingTop = 32\n        this.nodePaddingBottom = 12\n\n        this.nodeEditButtonMarginTop = 10\n\n        this.nodeOffsetX = this.nodePaddingLeft + this.nodeRadius\n        this.nodeOffsetY = this.nodePaddingTop + this.nodeRadius\n        \n        this.nodeWidth = this.nodePaddingLeft + 2 * this.nodeRadius + this.nodeTextLeadingMargin + this.nodeTextWidth + this.nodePaddingRight\n        this.pinHeight = (pin, lineHeight) => (pin.textPieces.length + 0.4) * lineHeight\n        this.nodeHeight = (node) => {\n            const pinsHeight = _.sum(node.pins.map(pin => this.pinHeight(pin, this.nodeTextLineHeight)))\n            return this.nodePaddingTop + this.nodeRadius + Math.max(this.nodeRadius, pinsHeight) + this.nodePaddingBottom\n        }\n\n        this.state = {toExchange: null, focusEraIndex: -1, linksVisibility: {}}\n    }\n\n    onSwitchLinksVisibility(id) {\n        const linksVisibility = this.state.linksVisibility\n        linksVisibility[id] = !(linksVisibility[id] === true)\n        this.setState({linksVisibility})\n    }\n\n    render() {\n        const extract = (paper) => {\n            const id = paper[\"paper_id\"]\n            const year = paper[\"paper_year\"]\n            const venue = paper[\"paper_venue\"].trim()\n            const title = paper[\"paper_title\"].trim()\n            const citations = paper[\"citations\"]\n            const references = paper[\"references\"]\n            const score = paper[\"score\"]\n            let prefix = `${year}`\n            const venue_year = /^(19|20)\\d{2}\\b/.exec(venue)\n            if (venue_year == null && venue.length > 0) {\n                prefix = `${year} ${venue}`\n            } else if (venue_year != null) {\n                prefix = `${venue}`\n            }\n            const text = `[${prefix}] ${title}`.replace('\\t', ' ').replace('\\n', ' ')\n            const abstract = paper[\"paper_abstract\"] ? paper[\"paper_abstract\"].trim().replace('\\t', ' ') : \"\"\n            return {id, year, venue, title, citations, references, text, abstract, score}\n        }\n\n        this.clusterNames = this.props.data.clusterNames.map(name => name.split(' ').map(_.capitalize).join(' '))\n\n        this.hideSubBranch = this.props.hideSubBranch\n        this.disableTextBranchSpan = this.props.disableTextBranchSpan\n        this.disableTextClusterSpan = this.props.disableTextClusterSpan\n\n        this.nodeFontExtraSize = this.props.fontExtraSize || 0\n        this.nodeTextFontSize = 20 + this.nodeFontExtraSize\n        this.nodeTextSecondaryFontSize = 16 + this.nodeFontExtraSize\n        this.nodeTextLineHeight = 20 + this.nodeFontExtraSize\n        this.nodeTextSecondaryLineHeight = 18 + this.nodeFontExtraSize\n        this.nodeTextCustomFold = (text, span, fontSize) => {\n            const textLength = Math.floor(((span - 1) * this.nodeWidth + this.nodeTextWidth) / (fontSize * this.averageFontWidthRatio))\n            return (text.match(new RegExp(`([^\\\\n]{1,${textLength}})(\\\\s|$)`, 'g')) || []).filter(line => line.length > 0)\n        }\n        this.nodeTextFold = (text, span) => this.nodeTextCustomFold(text, span, this.nodeTextFontSize)\n        this.nodeTextSecondaryFold = (text, span) => this.nodeTextCustomFold(text, span, this.nodeTextSecondaryFontSize)\n\n\n        const importance = this.props.data.importance\n        const maxImportance = _.max(importance), minImportance = _.min(importance)\n        const clusterStrokeWidth = importance.map((i) => ((i - minImportance) / (maxImportance - minImportance) + 1) / 2 * this.strokeWidth)\n\n        // initialize dataView (filter subBranch is hideSubBranch is enabled)\n        let dataView = {root: extract(this.props.data.root), branches: _.range(0, 2 * this.props.data.branches.length).map(() => [])}\n        this.props.data.branches.forEach((subBranches, clusterID) => subBranches.forEach((branch, isSub) => branch.forEach(raw => {\n            const paper = extract(raw)\n            paper.isSub = isSub\n            paper.edits = this.props.userEdits[paper.id]\n            paper.clusterID = paper.edits ? paper.edits.clusterID : clusterID\n            paper.branchID = paper.clusterID * 2 + isSub\n            if (!this.hideSubBranch || !isSub) dataView.branches[paper.branchID].push(paper)\n        })))\n        dataView.branches.forEach(branch => branch.sort((a, b) => (a.year === b.year) ? (b.citations.length - a.citations.length) : (b.year - a.year)))\n\n        const paperCount = _.flatten(dataView.branches).length\n        {\n            _.flatten(dataView.branches).sort((a, b) => (b.score - a.score)).forEach((paper, idx) => {\n                paper.scoreRank = idx\n                if (idx < paperCount * 0.1) paper.level = 3\n                else if (idx < paperCount * 0.3) paper.level = 2\n                else if (idx < paperCount * 0.6) paper.level = 1\n                else paper.level = 0\n            })\n        }\n\n        // calculate eras according to density of paper\n        let eras = []\n        {\n            let years = _.flatten(dataView.branches).map(paper => paper.year).sort().reverse()\n            let _to = years[0]\n            let _cnt = 1\n            let eraMinSize = this.EraMinRatio * years.length\n            let lastEraMinSize = this.lastEraRatio * years.length\n            for (let i = 1; i < years.length; i++) {\n                if (years[i] === years[i-1] || _cnt < eraMinSize || i > years.length - lastEraMinSize) _cnt += 1\n                else {\n                    eras.push({from: years[i-1], to: _to, cnt: _cnt})\n                    _to = years[i]\n                    _cnt = 1\n                }\n            }\n            eras.push({from: years[years.length-1], to: _to, cnt: _cnt})\n        }\n        const branchWithEra = (branch, era) => branch.filter(paper => paper.year >= era.from && paper.year <= era.to)\n\n        // initialize views\n        let numClusters = this.props.data.branches.length\n        let numBranches = numClusters * 2\n        const rootColor = chroma.scale()(0.5)\n        const clusterColors = chroma.cubehelix().start(200).rotations(3).gamma(0.7).lightness([0.2, 0.6]).scale().correctLightness().colors(numClusters)\n        const branchColors = dataView.branches.map((_, branchID) => chroma(clusterColors[Math.floor(branchID / 2)]).luminance(branchID % 2 === 0 ? 0.25 : 0.5))\n        const branchTextColors = branchColors.map(color => chroma(color).darken())\n        let views = {defs: [], nodes: {}, edges: []}\n        const addEdge = (x1, y1, x2, y2, color, strokeWidth) => views.edges.push(<line key={views.edges.length} x1={x1} y1={y1} x2={x2} y2={y2} strokeWidth={strokeWidth} stroke={color}/>)\n        const addVerticalEdge = (x, y1, y2, color, strokeWidth) => addEdge(x, y1, x, y2, color, strokeWidth)\n        const addHorizontalEdge = (x1, x2, y, color, strokeWidth) => addEdge(x1, y, x2, y, color, strokeWidth)\n        const generateGradientColor = (from, to, x1, y1, x2, y2) => {\n            const colorID = randomstring.generate(8)\n            views.defs.push(\n                <defs key={colorID}>\n                    <linearGradient id={colorID} x1={x1} y1={y1} x2={x2} y2={y2} gradientUnits=\"userSpaceOnUse\">\n                    <stop offset=\"20%\"  stopColor={from} />\n                    <stop offset=\"80%\" stopColor={to} />\n                    </linearGradient>\n                </defs>\n            )\n            return `url('#${colorID}')`\n        }\n\n        // Arrange coornidates for each era node\n        views.nodes.root = {\n            x: this.nodeWidth * (dataView.branches.length - 1) / 2 + this.nodeOffsetX,\n            y: this.nodeOffsetY,\n            color: rootColor,\n            textColor: chroma(rootColor).darken(),\n            pins: [{...dataView.root, \n                textPieces: this.nodeTextCustomFold(dataView.root.text, 3, this.nodeTextFontSize * 1.5), \n                fullTextPieces: this.nodeTextCustomFold(dataView.root.text, 3, this.nodeTextFontSize * 1.5),\n                abstractPieces: this.nodeTextCustomFold(dataView.root.abstract, 3, this.nodeTextSecondaryFontSize * 1.5),\n                edits: this.props.userEdits[dataView.root.id]\n            }],\n            span: 3,\n            fullSpan: 3,\n            fontSize: this.nodeTextFontSize * 1.5,\n            secondaryFontSize: this.nodeTextSecondaryFontSize * 1.5,\n            lineHeight: this.nodeTextLineHeight * 1.5,\n            secondaryLineHeight: this.nodeTextSecondaryLineHeight * 1.5,\n        }\n        views.nodes.root.height = this.nodeHeight(views.nodes.root)\n        views.nodes.root.pins[0].x = views.nodes.root.x\n        views.nodes.root.pins[0].y = views.nodes.root.y\n\n        views.nodes.branches = dataView.branches.map((branch, branchID) => eras.map((era, eraID) => { return {\n            x: this.nodeWidth * branchID + this.nodeOffsetX,\n            y: 0,\n            color: branchColors[branchID],\n            textColor: branchTextColors[branchID],\n            pins: branchWithEra(branch, era),\n            era,\n            eraID,\n            clusterID: Math.floor(branchID / 2),\n            branchID,\n            fontSize: this.nodeTextFontSize,\n            secondaryFontSize: this.nodeTextSecondaryFontSize,\n            lineHeight: this.nodeTextLineHeight,\n            secondaryLineHeight: this.nodeTextSecondaryLineHeight,\n            height: 0,\n            edgeStrokeWidth: clusterStrokeWidth[Math.floor(branchID / 2)]\n        }}))\n        \n        views.nodes.branches.forEach((branch, branchID) => branch.forEach((node, eraID) => {\n            if (node.pins.length === 0) return\n            node.span = (branchID < numBranches - 1 && views.nodes.branches[branchID+1][eraID].pins.length === 0\n                && !this.disableTextBranchSpan && (!this.disableTextClusterSpan || branchID % 2 === 0)) ? 2 : 1\n            node.fullSpan = (branchID < numBranches - 1) ? this.nodeFullSpan : 1\n            node.pins.forEach(pin => {\n                pin.textPieces = this.nodeTextFold(pin.text, node.span)\n                pin.fullTextPieces = this.nodeTextFold(pin.text, node.fullSpan)\n                pin.abstractPieces = this.nodeTextSecondaryFold(pin.abstract, node.fullSpan)\n            })\n            node.height = this.nodeHeight(node)\n        }))\n\n        const horizon = views.nodes.root.height + this.horizonMarginTop\n        let _height = horizon + this.horizonMarginBottom\n        const erasHeight = eras.map((_, eraID) => {\n            views.nodes.branches.forEach(branch => branch[eraID].y = _height + this.nodeOffsetY)\n            const eraHeight = views.nodes.branches.reduce((prev, branch) => Math.max(prev, branch[eraID].height || 0), 0)\n            _height += eraHeight\n            return eraHeight\n        })\n\n        const nodesLookup = {}\n        views.nodes.branches.forEach(branch => branch.forEach(node => node.pins.forEach((pin, idx) => {\n            pin.x = node.x\n            pin.y = node.y + node.pins.slice(0, idx).reduce((prev, pin) => prev + (pin.textPieces.length + 0.4) * this.nodeTextLineHeight, 0)\n            nodesLookup[pin.id] = pin\n        })))\n\n        {\n            const node = views.nodes.root, nodeLeft = views.nodes.branches[0][0], nodeRight = views.nodes.branches[numBranches - 2][0]\n            addVerticalEdge(node.x, node.y, horizon, rootColor, this.strokeWidth)\n            addHorizontalEdge(nodeLeft.x, nodeRight.x, horizon, rootColor, this.strokeWidth)\n        }\n        views.nodes.branches.forEach((branch, branchID) => {\n            const _branch = branch.filter(node => node.pins.length > 0)\n            if (_branch.length === 0 && branchID % 2 === 1) return\n            const startEra = (branchID % 2 === 0) ? 0 : _branch[0].eraID\n            let endEra = (_branch.length > 0) ? _branch[_branch.length-1].eraID : 0\n            if (branchID % 2 === 0) {\n                const _nextBranch = views.nodes.branches[branchID+1].filter(node => node.pins.length > 0)\n                if (_nextBranch.length > 0) endEra = Math.max(endEra, _nextBranch[0].eraID)\n            }\n            const shrinkFlag = !this.disableTextBranchSpan && (!(this.disableTextClusterSpan && branchID % 2 === 0))\n            for (let eraID = startEra + 1; eraID <= endEra; eraID++) {\n                let node = branch[eraID]\n                let sib = branchID > 0 ? views.nodes.branches[branchID-1][eraID] : null\n                const yStart = (shrinkFlag && node.pins.length === 0 && ((branchID > 0 && sib.pins.length > 0) || (eraID === endEra))) ? (node.y - this.nodeRadius - this.nodeTextLineHeight) : node.y\n                node = branch[eraID-1]\n                sib = branchID > 0 ? views.nodes.branches[branchID-1][eraID-1] : null\n                const yEnd = (shrinkFlag && node.pins.length === 0 && branchID > 0 && sib.pins.length > 0) ? (node.y - this.nodeOffsetY + sib.height - this.nodePaddingBottom + this.nodeTextLineHeight) : node.y\n                addVerticalEdge(node.x, yStart, yEnd, node.color, node.edgeStrokeWidth)\n            }\n            if (branchID % 2 === 0) {\n                const node = branch[0]\n                const sib = branchID > 0 ? views.nodes.branches[branchID-1][0] : null\n                const yEnd = (shrinkFlag && node.pins.length === 0 && branchID > 0 && sib.pins.length > 0) ? (node.y - this.nodeRadius - this.nodeTextLineHeight) : node.y\n                addVerticalEdge(node.x, horizon, yEnd, generateGradientColor(rootColor, node.color, node.x, horizon, node.x, yEnd), node.edgeStrokeWidth)\n            } else {\n                const node = branch[startEra]\n                const sib = views.nodes.branches[branchID-1][startEra]\n                const yEnd = node.y - this.nodeRadius - this.nodeTextLineHeight\n                const yStart = node.y\n                addVerticalEdge(node.x, yStart, yEnd, node.color, node.edgeStrokeWidth)\n                addHorizontalEdge(node.x, sib.x, yEnd, generateGradientColor(node.color, sib.color, node.x, yEnd, sib.x, yEnd), node.edgeStrokeWidth)\n            }\n        })\n        \n        const onEdit = (action, source, param) => {\n            const userEdits = this.props.userEdits\n            if (!userEdits[source.id] && (action === \"thumb-up\" || action === \"thumb-down\" || action === \"exchange\")) {\n                userEdits[source.id] = {rate: 0, clusterID: source.clusterID}\n            }\n            if (action === \"thumb-up\" && userEdits[source.id].rate <= 0) {\n                userEdits[source.id].rate = 1\n                this.props.onEditChange(userEdits)\n            } else if (action === \"thumb-down\" && userEdits[source.id].rate >= 0) {\n                userEdits[source.id].rate = -1\n                this.props.onEditChange(userEdits)\n            } else if (action === \"thumb-delete\" && userEdits[source.id] && userEdits[source.id].rate !== 0) {\n                userEdits[source.id].rate = 0\n                this.props.onEditChange(userEdits)\n            } else if (action === \"to-exchange\" && this.state.toExchange === null) {\n                this.setState({toExchange: source})\n                this.props.onEditChange(userEdits)\n            } else if (action === \"exchange\") {\n                userEdits[source.id].clusterID = param\n                this.setState({toExchange: null})\n                this.props.onEditChange(userEdits)\n            }\n        }\n\n        \n        const extendedBottomY = views.nodes.branches.map(branch => branch[branch.length-1]).reduce((prev, node) =>\n            Math.max(prev, _.max(node.pins.map(pin => \n                pin.y + 2 * (pin.fullTextPieces.length * node.lineHeight + pin.abstractPieces.length * node.secondaryLineHeight)\n            )) || 0), _height)\n\n        const renderNodes = _.flattenDeep(views.nodes.branches).sort((a, b) => (a.eraID === b.eraID) ? (b.branchID - a.branchID) : (b.eraID - a.eraID))\n        renderNodes.push(views.nodes.root)\n\n        const _width = this.nodeWidth * dataView.branches.length\n        const clusterLabelTextPieces = this.clusterNames.map(name => name.split(' '))\n        const clusterLabelTexts = clusterLabelTextPieces.map((pieces, _idx) => \n            <text key={_idx}>\n                {pieces.reverse().map((_text, idx) => <tspan key={idx} x=\"0\" y={-idx * this.labelTextLineHeight}>{_text}</tspan>)}\n            </text>\n        )\n        const clusterLabelsHeight = clusterLabelTextPieces.reduce((prev, pieces) => Math.max(prev, pieces.length), 0) * this.labelTextLineHeight\n        _height += clusterLabelsHeight + this.labelTextLineHeight\n\n        const extendedHeight = Math.max(this.labelTextLineHeight * 1.5, extendedBottomY - _height)\n        const backgroundSolidColors = clusterColors.map(color => chroma(color).luminance(0.9))\n        const backgroundTextSolidColors = clusterColors.map(color => chroma(color).luminance(0.7))\n        const backgroundGradientSolidColors = clusterColors.map((color, idx) => {\n            const x = views.nodes.branches[idx*2][eras.length-1].x\n            return generateGradientColor(chroma(color).luminance(0.9), \"white\", x, _height, x, _height+extendedHeight)\n        })\n        const backgroundSelectionColors = clusterColors.map(color => chroma(color).luminance(0.5))\n        const backgroundTextSelectionColors = clusterColors.map(color => chroma(color).luminance(0.2))\n        const backgroundGradientSelectionColors = clusterColors.map((color, idx) => {\n            const x = views.nodes.branches[idx*2][eras.length-1].x\n            return generateGradientColor(chroma(color).luminance(0.5), \"white\", x, _height, x, _height+extendedHeight)\n        })\n\n        return <svg className=\"mrt\" id={this.props.id} width=\"100%\" viewBox={`0 0 ${_width} ${_height+extendedHeight}`}>\n            {views.defs}\n            <filter id=\"blur-filter\">\n                <feGaussianBlur stdDeviation={this.nodeTextLineHeight} in=\"SourceGraphic\"/>\n            </filter>\n            {\n                <g className=\"mrt-background\">\n                    <rect x=\"0\" y=\"0\" width={_width} height={horizon} fill={chroma(rootColor).luminance(0.9)}></rect>\n                </g>\n            }\n            {\n                clusterLabelTexts.map((texts, idx) => {\n                    return <g className=\"mrt-background\" key={idx} opacity={this.state.toExchange === null ? 1 : 0}>\n                        <rect x={this.nodeWidth*idx*2} y={horizon} width={this.nodeWidth*2} height={_height-horizon} fill={backgroundSolidColors[idx]}/>\n                        <rect x={this.nodeWidth*idx*2} y={_height} width={this.nodeWidth*2} height={extendedHeight} fill={backgroundGradientSolidColors[idx]}/>\n                        <g transform={`translate(${this.nodeWidth*idx*2+this.nodeOffsetX}, ${_height-this.labelTextLineHeight/2})`} fill={backgroundTextSolidColors[idx]} fontSize={this.labelTextFontSize}>{texts}</g>\n                    </g>\n                })\n            }\n            {\n                eras.map((era, idx) => \n                <g key={idx} className=\"mrt-era-background\" transform={`translate(0, ${views.nodes.branches[0][idx].y - this.nodeRadius - this.nodePaddingTop + erasHeight[idx]})`}>\n                    <rect className=\"mrt-era-background\" x=\"0\" y={-erasHeight[idx]} width={_width} height={erasHeight[idx]} opacity={(idx === this.state.focusEraIndex) ? 0.1 : 0}/>\n                    <text className=\"mrt-era-background\" fontSize={this.labelTextFontSize} x={this.nodePaddingLeft} y={-this.labelTextFontSize/2} opacity={(idx === this.state.focusEraIndex) ? 0.2 : 0}>\n                        {era.from === era.to ? era.from : `${era.from} - ${era.to}`}\n                    </text>\n                </g>)\n            }\n            {\n                views.nodes.branches.map((branch, idx) => {\n                    if (idx % 2 !== 0) return <text key={idx}/>\n                    const _branch = branch.filter(node => node.pins.length > 0)\n                    const _sibBranch = views.nodes.branches[idx+1].filter(node => node.pins.length > 0)\n                    if (_branch.length === 0 && _sibBranch.length === 0) return <text key={idx}/>\n                    const fontSize = this.nodeTextFontSize * 2\n                    const y = ((_branch.length === 0 || (_sibBranch.length > 0 && _sibBranch[0].eraID <= _branch[0].eraID)) ?\n                        (_sibBranch[0].y - this.nodeRadius - this.nodeTextLineHeight / 2) :\n                        (_branch[0].y - this.nodeTextLineHeight)) - fontSize / 2\n                    const x = branch[0].x + this.nodeRadius + this.nodeTextLeadingMargin\n                    const color = chroma(branchColors[idx]).darken(2)\n                    return <text key={idx} x={x} y={y} fill={color} fontSize={fontSize}>{this.clusterNames[Math.floor(idx / 2)]}</text>\n                })\n            }\n            {views.edges}\n            {renderNodes.map((node, idx) => node.pins.length > 0 &&\n                <NodeCircle key={idx} node={node}\n                            radius={this.nodeRadius}\n                            lineHeight={this.nodeTextLineHeight}\n                            color={node.color}\n                            strokeWidth={this.strokeWidth}\n                            onHover={(hover) => \n                                this.setState({...this.state,\n                                    focusEraIndex: hover ? node.eraID : -1\n                                })   \n                            }/>\n            )}\n            <g className=\"mrt-links\">\n            {renderNodes.map((node, idx) => node.pins.length > 0 && node !== views.nodes.root &&\n                <NodeLinks key={idx}\n                    linksVisibility={this.state.linksVisibility}\n                    node={node}\n                    nodesLookup={nodesLookup}\n                    nodePaddingLeft={this.nodePaddingLeft}\n                    radius={this.nodeRadius}\n                    lineHeight={this.nodeTextLineHeight}\n                />)\n            }\n            </g>\n            <g className=\"mrt-node-text-container\">\n            {renderNodes.map((node, idx) => node.pins.length > 0 &&\n                <NodeText key={idx}\n                      node={node}\n                      pins={node.pins} \n                      x={node.x} y={node.y}\n                      radius={this.nodeRadius}\n                      lineHeight={node.lineHeight}\n                      secondaryLineHeight={node.secondaryLineHeight}\n                      textWidth={(node.span - 1) * this.nodeWidth + this.nodeTextWidth}\n                      fullTextWidth={(node.fullSpan - 1) * this.nodeWidth + this.nodeTextWidth}\n                      color={node.color}\n                      fontSize={node.fontSize}\n                      secondaryFontSize={node.secondaryFontSize}\n                      strokeWidth={this.strokeWidth}\n                      onEdit={onEdit}\n                      textLeadingMargin={this.nodeTextLeadingMargin}\n                      editable={typeof(node.clusterID) !== \"undefined\"}\n                      editButtonMarginTop={this.nodeEditButtonMarginTop}\n                      scaleOrigin={(node.clusterID === numClusters - 1) ? \"right\" : ((node.branchID === numBranches - 3) ? \"middle\" : \"left\")}\n                      linksVisibility={this.state.linksVisibility}\n                      onSwitchLinksVisibility={(id) => this.onSwitchLinksVisibility(id)}\n                      lang={this.props.lang}/>)}\n            </g>\n            {\n                clusterLabelTexts.map((texts, idx) => {\n                    const isCurrent = this.state.toExchange !== null && idx === this.state.toExchange.clusterID\n                    return <g className=\"mrt-background\" key={idx} opacity={this.state.toExchange === null ? 0 : 1} visibility={this.state.toExchange === null ? \"hidden\" : \"none\"} onClick={() => onEdit(\"exchange\", this.state.toExchange, idx)}>\n                        <rect className=\"mrt-background-card\" x={this.nodeWidth*idx*2} y={horizon} width={this.nodeWidth*2} height={_height-horizon} fill={backgroundSelectionColors[idx]}/>\n                        <rect className=\"mrt-background-card\" x={this.nodeWidth*idx*2} y={_height} width={this.nodeWidth*2} height={extendedHeight} fill={backgroundGradientSelectionColors[idx]}/>\n                        <g className=\"mrt-background-text\" style={{textDecoration: isCurrent ? \"underline\" : \"\"}} transform={`translate(${this.nodeWidth*idx*2+this.nodeOffsetX}, ${_height-this.labelTextLineHeight/2})`} fill={backgroundTextSelectionColors[idx]} fontSize={this.labelTextFontSize}>{texts}</g>\n                    </g>\n                })\n            }\n            {\n                <g opacity=\"0.5\" transform={`translate(${_width}, ${_height+extendedHeight-this.labelTextLineHeight * 0.5})`}>                    \n                    <Logo x={-this.labelTextFontSize * 3.35} y={-this.labelTextFontSize * 1.78} height={this.labelTextFontSize * 0.8} width={this.labelTextFontSize * 0.8}/>\n                    <text x={-this.labelTextFontSize * 0.1} y={-this.labelTextFontSize * 0.05} textAnchor=\"end\"\n                        fontSize={this.labelTextFontSize * 0.75} fill={chroma(\"grey\").luminance(0.3).hex()}>{(this.props.authors || []).join(', ')}\n                    </text>\n                    <text x={-this.labelTextFontSize * 0.1} y={-this.labelTextFontSize * 1} textAnchor=\"end\"\n                        fontSize={this.labelTextFontSize * 0.7} fill={chroma(\"grey\").luminance(0.3).hex()}>AMiner\n                    </text>\n                </g>\n            }\n        </svg>\n    }\n}","import React from 'react'\nimport { Icon } from 'antd'\nimport chroma from 'chroma-js'\nimport './tool.css'\n\nexport default class Tool extends React.Component {\n\n    onClick() {\n        if (this.props.onClick) this.props.onClick()\n    }\n\n    render() {\n        const luminance = this.props.luminance || (this.props.primary ? 0.4 : 0.2)\n        const color = chroma(this.props.color).luminance(luminance)\n        const textColor = color.luminance(luminance / 2)\n        const icon = (this.props.theme !== \"twoTone\") \n            ? <Icon className=\"toolicon\" type={this.props.type} theme={this.props.theme} onClick={() => this.onClick()} style={{color: color.hex()}}/>\n            : <Icon className=\"toolicon\" type={this.props.type} theme={this.props.theme} onClick={() => this.onClick()} twoToneColor={color.hex()}/>\n        return (\n            <div className={`tool tooltip ${this.props.primary ? \"primary\" : \"secondary\"} ${this.props.className}`}>\n                {icon}\n                <span className=\"tooltip-text\" style={{color: textColor.hex()}}>{this.props.tooltipText}</span>\n                {this.props.children}\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport QRCode from 'qrcode'\nimport './toolbox.css'\nimport Tool from './tool'\nimport TooltipTextTranslation from './tooltip-text-translation.json'\n\nexport class Toolbox extends React.Component {\n\n    render() {\n        setTimeout(() => {\n            QRCode.toCanvas(document.getElementById(\"mrt-share-qrcode-canvas\"), window.location.href, (e) => { if (e) console.error(e) })\n        }, 500)\n        const lang = this.props.lang || \"en\"\n        const translation = TooltipTextTranslation[lang]\n        const t = (text) => (translation && translation[text.toLowerCase()]) ? translation[text.toLowerCase()] : text\n        return (\n            <div>\n                <div className=\"toolgroup horizontal\">\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"heart\" theme={this.props.like ? \"filled\" : \"twoTone\"} color=\"red\" tooltipText={t(this.props.like ? \"Dislike\" : \"Like\")} primary onClick={() => this.props.onLike()}/>\n                    </div>\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"share-alt\" theme=\"outlined\" color=\"green\" tooltipText={t(\"Share\")} primary/>\n                        <Tool className=\"qrcode-icon\" type=\"qrcode\" theme=\"outlined\" color=\"green\" tooltipText={t(\"QR Code\")}>\n                            <canvas className=\"qrcode\" id=\"mrt-share-qrcode-canvas\"/>\n                        </Tool>\n                    </div>\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"font-size\" theme=\"outlined\" color=\"pink\" tooltipText={t(\"Font Size\")} primary/>\n                        <Tool type=\"zoom-in\" theme=\"outlined\" color=\"pink\" tooltipText={t(\"Larger Font\")} onClick={() => this.props.scaleFont(true)}/>\n                        <Tool type=\"zoom-out\" theme=\"outlined\" color=\"pink\" tooltipText={t(\"Smaller Font\")} onClick={() => this.props.scaleFont(false)}/>\n                    </div>\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"search\" theme=\"outlined\" color=\"aquamarine\" tooltipText={t(\"Zoom\")} primary/>\n                        <Tool type=\"zoom-in\" theme=\"outlined\" color=\"aquamarine\" tooltipText={t(\"Zoom In\")} onClick={() => this.props.zoom(true)}/>\n                        <Tool type=\"zoom-out\" theme=\"outlined\" color=\"aquamarine\" tooltipText={t(\"Zoom Out\")} onClick={() => this.props.zoom(false)}/>\n                    </div>\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"download\" theme=\"outlined\" color=\"blue\" tooltipText={t(\"Download\")} primary/>\n                        <Tool type=\"file-image\" theme=\"twoTone\" color=\"blue\" tooltipText={t(\"Full Picture\")} onClick={() => this.props.capture(true)}/>\n                        <Tool type=\"camera\" theme=\"twoTone\" color=\"blue\" tooltipText={t(\"Snapshot\")} onClick={() => this.props.capture(false)}/>\n                    </div>\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"control\" theme=\"outlined\" color=\"teal\" tooltipText={t(\"Control\")} primary/>\n                        <Tool type={`eye${this.props.hideSubBranch ? \"\" : \"-invisible\"}`} theme=\"twoTone\" color=\"teal\" onClick={() => this.props.onHideSubBranch()}\n                            tooltipText={t(this.props.hideSubBranch ? \"Display Sub Branch\" : \"Hide Sub Branch\")}/>\n                        <Tool type=\"column-width\" theme=\"outlined\" color=\"teal\" onClick={() => this.props.onDisableTextClusterSpan()}\n                            tooltipText={t(this.props.disableTextClusterSpan ? \"Enable Text Span\" : \"Disable Text Span\")}/>\n                        {this.props.onLoadJson && \n                        <Tool type=\"folder-open\" theme=\"outlined\" color=\"teal\" onClick={() => document.getElementById(\"mrt-file-load-input\").click()}\n                            tooltipText={t(\"Load JSON\")}/>}\n                        <input id=\"mrt-file-load-input\" type=\"file\" hidden onChange={(e) => this.props.onLoadJson(e)}/>\n                    </div>\n                    <div className=\"toolgroup vertical\">\n                        <Tool className=\"toolgroup\" type=\"appstore\" theme=\"outlined\" color=\"purple\" tooltipText={t(\"Toolbox\")} primary/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n","import React from 'react'\nimport MRTViewer from './mrt-viewer'\nimport './index.css'\nimport svgLib from 'save-svg-as-png'\nimport { Toolbox } from './toolbox/index'\n\nexport default class MRT extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            like: this.props.like || false,\n            viewerScale: 100,\n            hideSubBranch: false,\n            disableTextClusterSpan: false,\n            fontExtraSize: 0,\n        }\n        this.generated = false\n    }\n\n    capture(full) {\n        if (full)\n            svgLib.saveSvgAsPng(document.getElementById(\"mrt-viewer\"), `master-reading-tree.png`)\n        else {\n            const srcWidth = document.getElementById(\"mrt-viewer\").viewBox.baseVal.width\n            const outputWidth = document.body.clientWidth\n            svgLib.saveSvgAsPng(document.getElementById(\"mrt-viewer\"), `master-reading-tree-snapshot.png`, {scale: outputWidth / srcWidth})\n        }\n    }\n\n    zoom(larger) {\n        this.setState({...this.state, viewerScale: Math.min(Math.max(this.state.viewerScale + (larger ? 10 : -10), 100), 1000)})\n    }\n\n    scaleFont(larger) {\n        this.setState({...this.state, fontExtraSize: Math.max(0, Math.min(10, this.state.fontExtraSize + (larger ? 2 : -2)))})\n    }\n\n    onLoadJson(e) {\n        if (e.target.files.length === 0) return\n        const reader = new FileReader()\n        reader.onload = (e) => {\n            if (this.props.onLoadJson) this.props.onLoadJson(JSON.parse(e.target.result))\n        }\n        reader.readAsText(e.target.files[0])\n    }\n\n    render() {\n        return (\n            <div className=\"mrt-container\" style={{width: `${this.state.viewerScale}%`}}>\n                <Toolbox lang={this.props.lang}\n                    onLike={() => this.props.onLike()} like={this.props.like}\n                    onHideSubBranch={() => this.setState({hideSubBranch: !this.state.hideSubBranch})} hideSubBranch={this.state.hideSubBranch}\n                    onDisableTextClusterSpan={() => this.setState({disableTextClusterSpan: !this.state.disableTextClusterSpan})} disableTextClusterSpan={this.state.disableTextClusterSpan}\n                    onLoadJson={this.props.onLoadJson ? (e) => this.onLoadJson(e) : undefined}\n                    scaleFont={(larger) => this.scaleFont(larger)}\n                    zoom={(larger) => this.zoom(larger)}\n                    capture={(full) => this.capture(full)}\n                    lang={this.props.lang}\n                />\n                <MRTViewer id=\"mrt-viewer\" data={this.props.data} userEdits={this.props.userEdits} \n                    hideSubBranch={this.state.hideSubBranch} disableTextClusterSpan={this.state.disableTextClusterSpan}\n                    fontExtraSize={this.state.fontExtraSize}\n                    authors={this.props.authors}\n                    onEditChange={this.props.onEditChange}\n                    lang={this.props.lang}/>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport sample_data from './sample.json';\nimport MRT from './components';\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props)\n    this.state = {data: sample_data, like: false, userEdits: {}}\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MRT data={this.state.data} authors={[\"Somefive\", \"Rainatum\"]} onLoadJson={(data) => this.setState({data})}\n          onLike={() => this.setState({like: !this.state.like})} like={this.state.like}\n          onEditChange={(edits) => this.setState({userEdits: edits})} userEdits={this.state.userEdits}\n          lang=\"en\"/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}