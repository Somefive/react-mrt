{"version":3,"sources":["components/toolbox/images/guide1.jpg","components/toolbox/images/guide2.jpg","components/toolbox/images/guide3.jpg","components/toolbox/images/guide4.jpg","components/toolbox/images/guide5.jpg","components/toolbox/images/guide6.jpg","components/toolbox/images/guide7.jpg","components/toolbox/images/guide8.jpg","components/mrt-viewer/node.js","components/logo.svg","components/mrt-viewer/index.js","components/toolbox/tool.js","components/toolbox/helper.js","components/toolbox/index.js","components/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ThumbUpColor","chroma","luminance","desaturate","ThumbDownColor","ExchangeColor","DisplayLinkColor","StarColor","HideLinkColor","AbstractColor","NodeCircle","level","this","props","node","pins","reduce","prev","pin","Math","max","r","radius","dy","dx","sqrt","y","x1","x","x2","onMouseEnter","onHover","onMouseLeave","d","fill","color","stroke","strokeWidth","className","cx","cy","React","Component","NodeText","state","expand","pinned","focus","idx","enter","setState","onSwitchLinksVisibility","id","lang","translation","TooltipTextTranslation","t","text","toLowerCase","textColor","iconSize","lineHeight","texts","map","_idx","isFocus","textPieces","fullTextPieces","abstractHeight","abstractPieces","length","secondaryLineHeight","iconY","editButtonMarginTop","textWidth","fullTextWidth","generateEditIcon","T","action","transform","style","transformOrigin","onClick","pinLinkHandler","onEdit","width","height","textAnchor","fontSize","isUp","edits","rate","isDown","transformOriginX","scaleOrigin","key","textLeadingMargin","filter","onCollapse","_text","secondaryFontSize","editable","IconExchange","IconThumbsUpSolid","IconThumbsUp","IconThumbsDownSolid","IconThumbsDown","references","citations","IconPushPin","_","range","reverse","NodeLinks","source","target","y1","y2","mx","nodePaddingLeft","forward","nx","uy","by","nnx","links","linksVisibility","nodesLookup","generateLinkPath","strokeDasharray","generateArrowPath","indexOf","_extends","Object","assign","i","arguments","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref3","_ref4","_ref5","_ref","svgRef","title","viewBox","ref","ForwardRef","forwardRef","MRTViewer","EraMinRatio","lastEraRatio","labelTextFontSize","labelTextLineHeight","nodeRadius","nodeTextLeadingMargin","nodeTextWidth","nodeFullSpan","horizonMarginTop","horizonMarginBottom","averageFontWidthRatio","nodePaddingRight","nodePaddingTop","nodePaddingBottom","nodeEditButtonMarginTop","nodeOffsetX","nodeOffsetY","nodeWidth","pinHeight","nodeHeight","pinsHeight","sum","nodeTextLineHeight","toExchange","focusEraIndex","visible","extract","paper","year","venue","trim","score","prefix","venue_year","exec","replace","abstract","clusterNames","data","name","split","capitalize","join","hideSubBranch","disableTextBranchSpan","disableTextClusterSpan","nodeFontExtraSize","fontExtraSize","nodeTextFontSize","nodeTextSecondaryFontSize","nodeTextSecondaryLineHeight","nodeTextCustomFold","span","textLength","floor","match","RegExp","line","nodeTextFold","nodeTextSecondaryFold","importance","maxImportance","minImportance","min","clusterStrokeWidth","dataView","root","branches","forEach","subBranches","clusterID","branch","isSub","raw","userEdits","branchID","push","sort","a","b","paperCount","flatten","scoreRank","eras","years","_to","_cnt","eraMinSize","lastEraMinSize","from","to","cnt","branchWithEra","era","numClusters","numBranches","rootColor","scale","clusterColors","cubehelix","start","rotations","gamma","lightness","correctLightness","colors","branchColors","branchTextColors","darken","views","defs","nodes","edges","addEdge","addVerticalEdge","addHorizontalEdge","generateGradientColor","colorID","randomstring","generate","gradientUnits","offset","stopColor","fullSpan","eraID","edgeStrokeWidth","horizon","_height","erasHeight","eraHeight","slice","nodeLeft","nodeRight","_branch","startEra","endEra","_nextBranch","shrinkFlag","sib","yStart","yEnd","param","onEditChange","extendedBottomY","renderNodes","flattenDeep","_width","clusterLabelTextPieces","clusterLabelTexts","pieces","clusterLabelsHeight","extendedHeight","backgroundSolidColors","backgroundTextSolidColors","backgroundGradientSolidColors","backgroundSelectionColors","backgroundTextSelectionColors","backgroundGradientSelectionColors","stdDeviation","in","opacity","_sibBranch","hover","onCardOpen","isCurrent","visibility","textDecoration","hex","authors","Tool","primary","icon","theme","type","twoToneColor","tooltipText","children","Helper","images","img1","img2","img3","img4","img5","img6","img7","img8","autoplay","img","alt","src","Toolbox","helperVisible","setTimeout","QRCode","toCanvas","document","getElementById","window","location","href","e","console","error","like","onLike","scaleFont","zoom","capture","onHideSubBranch","onDisableTextClusterSpan","onLoadJson","click","hidden","onChange","onCancel","footer","bodyStyle","padding","MRT","viewerScale","generated","full","svgLib","saveSvgAsPng","srcWidth","baseVal","outputWidth","body","clientWidth","larger","files","reader","FileReader","onload","JSON","parse","result","readAsText","undefined","onCardSet","App","sample_data","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.998e37bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/guide1.a3abcbb0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/guide2.222cb2a5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/guide3.237e4a25.jpg\";","module.exports = __webpack_public_path__ + \"static/media/guide4.926e1d4a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/guide5.69ff752e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/guide6.4d0b0c91.jpg\";","module.exports = __webpack_public_path__ + \"static/media/guide7.8c36ea19.jpg\";","module.exports = __webpack_public_path__ + \"static/media/guide8.506ce187.jpg\";","import React from 'react'\nimport { ReactComponent as IconThumbsUp } from '@ant-design/icons-svg/inline-svg/outline/like.svg'\nimport { ReactComponent as IconThumbsDown } from '@ant-design/icons-svg/inline-svg/outline/dislike.svg'\nimport { ReactComponent as IconThumbsUpSolid } from '@ant-design/icons-svg/inline-svg/fill/like.svg'\nimport { ReactComponent as IconThumbsDownSolid } from '@ant-design/icons-svg/inline-svg/fill/dislike.svg'\nimport { ReactComponent as IconExchange } from '@ant-design/icons-svg/inline-svg/outline/pull-request.svg'\nimport { ReactComponent as IconPushPin } from '@ant-design/icons-svg/inline-svg/outline/pushpin.svg'\nimport { ReactComponent as IconStar } from '@ant-design/icons-svg/inline-svg/fill/star.svg'\nimport chroma from 'chroma-js'\nimport './node.css'\nimport TooltipTextTranslation from './tooltip-text-translation.json'\nimport _ from 'lodash'\n\nconst ThumbUpColor = chroma(\"green\").luminance(0.3).desaturate(1)\nconst ThumbDownColor = chroma(\"red\").luminance(0.3).desaturate(2)\nconst ExchangeColor = chroma(\"blue\").luminance(0.3).desaturate(1)\nconst DisplayLinkColor = chroma(\"orange\").luminance(0.3)\nconst StarColor = chroma(\"purple\").luminance(0.3)\nconst HideLinkColor = chroma(\"grey\").luminance(0.3)\nconst AbstractColor = chroma(\"grey\").luminance(0.1)\n\nexport class NodeCircle extends React.Component {\n\n    render() {\n        const level = this.props.node.pins.reduce((prev, pin) => Math.max(prev, pin.level || 0), 0)\n        const r = this.props.radius\n        const dy = r * (level / 1.75 - 0.75)\n        const dx = Math.sqrt(r * r - dy * dy)\n        const y = this.props.node.y - dy, x1 = this.props.node.x - dx, x2 = this.props.node.x + dx\n        return (\n            <g onMouseEnter={() => { this.props.onHover(true) }} onMouseLeave={() => { this.props.onHover(false) }}>\n                {level > 0 && <path d={`M ${x1} ${y} A ${r} ${r} 0 ${level >= 2 ? 1 : 0} 0 ${x2} ${y}`} fill={this.props.node.color} stroke={this.props.node.color} strokeWidth={this.props.strokeWidth}/>}\n                {level > 0 && <path d={`M ${x1} ${y} A ${r} ${r} 0 ${level >= 2 ? 0 : 1} 1 ${x2} ${y}`} fill=\"white\" stroke={this.props.node.color} strokeWidth={this.props.strokeWidth}/>}\n                {level === 0 && <circle className=\"era-node-circle\" cx={this.props.node.x} cy={this.props.node.y} r={this.props.radius}\n                    stroke={this.props.node.color} strokeWidth={this.props.strokeWidth}\n                    fill=\"white\"/>}\n            </g>\n        )\n    }\n\n}\n\nexport class NodeText extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { expand: -1, pinned: {}, focus: -1 }\n    }\n\n    onHover(idx, enter) {\n        this.setState({expand: enter ? this.state.expand : -1, focus: enter ? idx: -1})\n        if (enter || !this.state.pinned[idx]) this.props.onSwitchLinksVisibility(this.props.node.pins[idx].id, enter)\n    }\n\n    onCollapse(idx) {\n        const enter = this.state.expand !== idx\n        this.setState({expand: enter ? idx : -1})\n        if (enter || !this.state.pinned[idx]) this.props.onSwitchLinksVisibility(this.props.node.pins[idx].id, enter)\n    }\n\n    render() {\n        const lang = this.props.lang || \"en\"\n        const translation = TooltipTextTranslation[lang]\n        const t = (text) => (translation && translation[text.toLowerCase()]) ? translation[text.toLowerCase()] : text\n        let textColor = this.props.node.textColor\n        const iconSize = this.props.lineHeight * 1.25\n        const texts = this.props.pins.map((pin, _idx) => {\n            const isFocus = this.state.expand === _idx\n            const collapseHandler = () => this.onCollapse(_idx)\n            const pinLinkHandler = () => {\n                const pinned = this.state.pinned\n                pinned[_idx] = !pinned[_idx]\n                this.setState({pinned})\n            }\n            // const collapseHandler = () => this.props.onCardOpen(pin)\n            const textPieces = isFocus ? pin.fullTextPieces : pin.textPieces\n            const abstractHeight = pin.abstractPieces.length * this.props.secondaryLineHeight\n            const iconY = (textPieces.length - 1) * this.props.lineHeight + this.props.editButtonMarginTop + isFocus * abstractHeight\n            const textWidth = isFocus ? this.props.fullTextWidth : this.props.textWidth\n            const generateEditIcon = (T, dx, fill, action, text) => <g transform={`translate(${textWidth-iconSize*dx}, ${iconY})`}>\n                <g className=\"paper-edit-icon\" style={{transformOrigin: `${iconSize/2}px ${iconSize/2}px`}}\n                    onClick={action === \"pin-link\" ? (() => pinLinkHandler()) : (() => this.props.onEdit(action, pin))}>\n                    <T className=\"paper-edit-icon\" fill={fill} width={iconSize} height={iconSize}/>\n                    <rect className=\"paper-edit-icon\" width={iconSize} height={iconSize} fill=\"transparent\"/>\n                    <text textAnchor=\"middle\" x={iconSize/2} y={iconSize+this.props.secondaryLineHeight/2} fill={fill} fontSize={this.props.secondaryLineHeight/2}>{t(text)}</text>\n                </g>\n            </g>\n            const isUp = pin.edits && pin.edits.rate > 0\n            const isDown = pin.edits && pin.edits.rate < 0\n            const transformOriginX = (this.props.scaleOrigin === \"left\") ? 0 : (this.props.scaleOrigin === \"middle\" ? (textWidth / 2) : textWidth)\n            return (\n                <g key={_idx} transform={`translate(${this.props.textLeadingMargin + this.props.radius}, ${pin.y - this.props.node.y})`}>\n                    <g className=\"paper-view-group-inner\" style={{transformOrigin: `${transformOriginX}px ${-this.props.lineHeight}px`}}\n                        onMouseEnter={() => this.onHover(_idx, true)}\n                        onMouseLeave={() => this.onHover(_idx, false)}>\n                        <rect className=\"paper-text-background\" x={-this.props.lineHeight} y={-this.props.lineHeight * 2.5}\n                            width={textWidth+2*this.props.lineHeight} height={this.props.lineHeight * 4 + iconY + iconSize}\n                            fill=\"white\" filter=\"url(#blur-filter)\"/>\n                        <text className=\"paper-text\" fontSize={this.props.fontSize} fill={textColor} onClick={collapseHandler}>\n                            {textPieces.map((_text, idx) => <tspan key={idx} x=\"0\" y={idx * this.props.lineHeight}>{_text}</tspan>)}\n                        </text>\n                        {isFocus && \n                            <text className=\"paper-abstract-inner\" fontSize={this.props.secondaryFontSize} fill={AbstractColor}>\n                                {pin.abstractPieces.map((_text, idx) => <tspan key={idx} x=\"0\" y={textPieces.length * this.props.lineHeight + idx * this.props.secondaryLineHeight}>{_text}</tspan>)}\n                            </text>}\n                        {this.state.focus === _idx &&\n                        <g className=\"paper-edit-icon-group\">\n                            {this.props.editable && generateEditIcon(IconExchange, 6, ExchangeColor, \"to-exchange\", \"Move\")}\n                            {generateEditIcon(isUp ? IconThumbsUpSolid : IconThumbsUp, 4.5, ThumbUpColor, isUp ? \"thumb-delete\" : \"thumb-up\", \"Like\")}\n                            {generateEditIcon(isDown ? IconThumbsDownSolid : IconThumbsDown, 3, ThumbDownColor, isDown ? \"thumb-delete\" : \"thumb-down\", \"Dislike\")}\n                            {this.props.editable && (pin.references.length > 0 || pin.citations.length > 0) && generateEditIcon(IconPushPin, 1.5, this.state.pinned[_idx] ? HideLinkColor : DisplayLinkColor, \"pin-link\", \"Citation\")}\n                            {pin.level &&\n                            <g transform={`translate(0, ${iconY})`}>\n                                <rect className=\"paper-edit-icon\" width={iconSize*pin.level} height={iconSize} fill=\"transparent\"/>\n                                <g className=\"paper-edit-icon\" style={{transformOrigin: `${iconSize/2}px ${iconSize/2}px`}}>\n                                {_.range(0, pin.level).map((idx) => <g transform={`translate(${idx * iconSize}, 0)`} key={idx}><IconStar className=\"paper-edit-icon\" fill={StarColor} width={iconSize} height={iconSize}/></g>)}\n                                    <text textAnchor=\"middle\" x={pin.level*iconSize/2} y={iconSize+this.props.secondaryLineHeight/2} fill={StarColor} fontSize={this.props.secondaryLineHeight/2}>{t(\"Influence\")}</text>\n                                </g>\n                            </g>\n                            }\n                        </g>\n                        }\n                    </g>\n                </g>\n            )\n        })\n        return (\n            <g className=\"era-node-text-group\" transform={`translate(${this.props.x}, ${this.props.y})`}>\n                {texts.reverse()}\n            </g>\n        )\n    }\n}\n\nexport class NodeLinks extends React.Component {\n\n    generateLinkPath(source, target) {\n        const x1 = source.x, y1 = source.y, x2 = target.x, y2 = target.y\n        const mx = x1 - this.props.radius - this.props.nodePaddingLeft\n        let d = `M ${x1} ${y1}`\n        if (y1 === y2) d += ` L ${x2} ${y2}`\n        else d += ` C ${mx} ${y1}, ${mx} ${y1}, ${mx} ${(y1+y2)/2} S ${mx} ${y2}, ${x2} ${y2}`\n        return d\n    }\n\n    generateArrowPath(source, target, forward) {\n        const x = target.x, y = target.y\n        const nx = (x >= source.x) ? (x - this.props.radius) : (x + this.props.radius)\n        const uy = y - this.props.radius / 2, by = y + this.props.radius / 2\n        if (forward) {\n            const nnx = (x >= source.x) ? (x - this.props.radius * 1.2) : (x + this.props.radius * 1.2)\n            return `M ${x} ${y} L ${nnx} ${uy} L ${nx} ${y} L ${nnx} ${by} L ${x} ${y}`\n        } else {\n            const nnx = (x >= source.x) ? (x + this.props.radius * 0.2) : (x - this.props.radius * 0.2)\n            return `M ${nx} ${y} L ${nnx} ${uy} L ${x} ${y} L ${nnx} ${by} L ${nx} ${y}`\n        }\n    }\n\n    render() {\n        const textColor = this.props.node.textColor\n        const links = this.props.node.pins.map((pin, _idx) => {\n            return (this.props.linksVisibility[pin.id] && \n            <g key={pin.id}>\n                <circle cx={pin.x} cy={pin.y} r={0.5 * this.props.lineHeight} fill={textColor}/>\n                {[...pin.references, ...pin.citations].map((id, idx) => this.props.nodesLookup[id] && \n                <g key={idx}>\n                    <path d={this.generateLinkPath(pin, this.props.nodesLookup[id])} strokeWidth={2} stroke={textColor} strokeDasharray={10} fill=\"transparent\"/>\n                    <path d={this.generateArrowPath(pin, this.props.nodesLookup[id], pin.references.indexOf(id) >= 0)} fill={textColor}/>\n                </g>\n                )}\n            </g>)\n        })\n        return <g>{links}</g>\n    }\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M520.650142 80.061167L369.746208 410.281909l269.859169-71.853003 1.641632-0.631397-120.596867-257.736342z\",\n  fill: \"#E9624C\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M256.852386 657.03194l385.909977 121.859662 100.392157-222.756937-76.272784-163.279319-333.251449 96.098656-76.777901 168.077938z\",\n  fill: \"#2A698D\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M92.689111 1015.791836h865.266741L773.966704 622.052534l-102.286349 232.227895-442.735726-136.381798L92.689111 1015.791836z\",\n  fill: \"#233D7E\"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M484.281662 0H0v1015.791836h6.187693L483.650265 1.641633l0.631397-1.641633zM555.376989 0l0.505117 1.136515 483.271427 1014.655321h4.293501V0H555.376989z\",\n  fill: \"#3C3837\"\n});\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 1024 1024\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.7ecb0366.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport { NodeCircle, NodeText, NodeLinks } from './node'\nimport randomstring from 'randomstring'\nimport chroma from 'chroma-js'\nimport './index.css'\nimport { ReactComponent as Logo } from '../logo.svg'\nimport _ from 'lodash'\n\nexport default class MRTViewer extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.EraMinRatio = this.props.EraMinRatio || 0.05\n        this.lastEraRatio = this.props.lastEraRatio || 0.2\n\n        this.strokeWidth = 4\n\n        this.labelTextFontSize = 64\n        this.labelTextLineHeight = 72\n\n        this.nodeRadius = 20\n        this.nodeTextLeadingMargin = 20\n        this.nodeTextWidth = 260\n\n        this.nodeFullSpan = 2\n\n        this.horizonMarginTop = 32\n        this.horizonMarginBottom = 48\n\n        this.averageFontWidthRatio = 0.6\n        \n        this.nodePaddingLeft = 20\n        this.nodePaddingRight = 20\n        this.nodePaddingTop = 32\n        this.nodePaddingBottom = 12\n\n        this.nodeEditButtonMarginTop = 10\n\n        this.nodeOffsetX = this.nodePaddingLeft + this.nodeRadius\n        this.nodeOffsetY = this.nodePaddingTop + this.nodeRadius\n        \n        this.nodeWidth = this.nodePaddingLeft + 2 * this.nodeRadius + this.nodeTextLeadingMargin + this.nodeTextWidth + this.nodePaddingRight\n        this.pinHeight = (pin, lineHeight) => (pin.textPieces.length + 0.4) * lineHeight\n        this.nodeHeight = (node) => {\n            const pinsHeight = _.sum(node.pins.map(pin => this.pinHeight(pin, this.nodeTextLineHeight)))\n            return this.nodePaddingTop + this.nodeRadius + Math.max(this.nodeRadius, pinsHeight) + this.nodePaddingBottom\n        }\n\n        this.state = {toExchange: null, focusEraIndex: -1, linksVisibility: {}}\n    }\n\n    onSwitchLinksVisibility(id, visible) {\n        const linksVisibility = this.state.linksVisibility\n        linksVisibility[id] = visible\n        this.setState({linksVisibility})\n    }\n\n    render() {\n        const extract = (paper) => {\n            const id = paper[\"paper_id\"]\n            const year = paper[\"paper_year\"]\n            const venue = paper[\"paper_venue\"].trim()\n            const title = paper[\"paper_title\"].trim()\n            const citations = paper[\"citations\"]\n            const references = paper[\"references\"]\n            const score = paper[\"score\"]\n            let prefix = `${year}`\n            const venue_year = /^(19|20)\\d{2}\\b/.exec(venue)\n            if (venue_year == null && venue.length > 0) {\n                prefix = `${year} ${venue}`\n            } else if (venue_year != null) {\n                prefix = `${venue}`\n            }\n            const text = `[${prefix}] ${title}`.replace('\\t', ' ').replace('\\n', ' ')\n            const abstract = paper[\"paper_abstract\"] ? paper[\"paper_abstract\"].trim().replace('\\t', ' ') : \"\"\n            return {id, year, venue, title, citations, references, text, abstract, score}\n        }\n\n        this.clusterNames = this.props.data.clusterNames.map(name => name.split(' ').map(_.capitalize).join(' '))\n\n        this.hideSubBranch = this.props.hideSubBranch\n        this.disableTextBranchSpan = this.props.disableTextBranchSpan\n        this.disableTextClusterSpan = this.props.disableTextClusterSpan\n\n        this.nodeFontExtraSize = this.props.fontExtraSize || 0\n        this.nodeTextFontSize = 20 + this.nodeFontExtraSize\n        this.nodeTextSecondaryFontSize = 16 + this.nodeFontExtraSize\n        this.nodeTextLineHeight = 22 + this.nodeFontExtraSize\n        this.nodeTextSecondaryLineHeight = 18 + this.nodeFontExtraSize\n        this.nodeTextCustomFold = (text, span, fontSize) => {\n            const textLength = Math.floor(((span - 1) * this.nodeWidth + this.nodeTextWidth) / (fontSize * this.averageFontWidthRatio))\n            return (text.match(new RegExp(`([^\\\\n]{1,${textLength}})(\\\\s|$)`, 'g')) || []).filter(line => line.length > 0)\n        }\n        this.nodeTextFold = (text, span) => this.nodeTextCustomFold(text, span, this.nodeTextFontSize)\n        this.nodeTextSecondaryFold = (text, span) => this.nodeTextCustomFold(text, span, this.nodeTextSecondaryFontSize)\n\n\n        const importance = this.props.data.importance\n        const maxImportance = _.max(importance), minImportance = _.min(importance)\n        const clusterStrokeWidth = importance.map((i) => ((i - minImportance) / (maxImportance - minImportance) * 4 + 1) / 2 * this.strokeWidth)\n\n        // initialize dataView (filter subBranch is hideSubBranch is enabled)\n        let dataView = {root: extract(this.props.data.root), branches: _.range(0, 2 * this.props.data.branches.length).map(() => [])}\n        this.props.data.branches.forEach((subBranches, clusterID) => subBranches.forEach((branch, isSub) => branch.forEach(raw => {\n            const paper = extract(raw)\n            paper.isSub = isSub\n            paper.edits = this.props.userEdits[paper.id]\n            paper.clusterID = paper.edits ? paper.edits.clusterID : clusterID\n            paper.branchID = paper.clusterID * 2 + isSub\n            if (!this.hideSubBranch || !isSub) dataView.branches[paper.branchID].push(paper)\n        })))\n        dataView.branches.forEach(branch => branch.sort((a, b) => (a.year === b.year) ? (b.citations.length - a.citations.length) : (b.year - a.year)))\n\n        const paperCount = _.flatten(dataView.branches).length\n        _.flatten(dataView.branches).sort((a, b) => (b.score - a.score)).forEach((paper, idx) => {\n            paper.scoreRank = idx\n            if (idx < paperCount * 0.1) paper.level = 3\n            else if (idx < paperCount * 0.3) paper.level = 2\n            else if (idx < paperCount * 0.6) paper.level = 1\n            else paper.level = 0\n        })\n\n        // calculate eras according to density of paper\n        let eras = []\n        {\n            let years = _.flatten(dataView.branches).map(paper => paper.year).sort().reverse()\n            let _to = years[0]\n            let _cnt = 1\n            let eraMinSize = this.EraMinRatio * years.length\n            let lastEraMinSize = this.lastEraRatio * years.length\n            for (let i = 1; i < years.length; i++) {\n                if (years[i] === years[i-1] || _cnt < eraMinSize || i > years.length - lastEraMinSize) _cnt += 1\n                else {\n                    eras.push({from: years[i-1], to: _to, cnt: _cnt})\n                    _to = years[i]\n                    _cnt = 1\n                }\n            }\n            eras.push({from: years[years.length-1], to: _to, cnt: _cnt})\n        }\n        const branchWithEra = (branch, era) => branch.filter(paper => paper.year >= era.from && paper.year <= era.to)\n\n        // initialize views\n        let numClusters = this.props.data.branches.length\n        let numBranches = numClusters * 2\n        const rootColor = chroma.scale()(0.5)\n        const clusterColors = chroma.cubehelix().start(200).rotations(3).gamma(0.7).lightness([0.2, 0.6]).scale().correctLightness().colors(numClusters)\n        const branchColors = dataView.branches.map((_, branchID) => chroma(clusterColors[Math.floor(branchID / 2)]).luminance(branchID % 2 === 0 ? 0.25 : 0.5))\n        const branchTextColors = branchColors.map(color => chroma(color).darken())\n        let views = {defs: [], nodes: {}, edges: []}\n        const addEdge = (x1, y1, x2, y2, color, strokeWidth) => views.edges.push(<line key={views.edges.length} x1={x1} y1={y1} x2={x2} y2={y2} strokeWidth={strokeWidth} stroke={color}/>)\n        const addVerticalEdge = (x, y1, y2, color, strokeWidth) => addEdge(x, y1, x, y2, color, strokeWidth)\n        const addHorizontalEdge = (x1, x2, y, color, strokeWidth) => addEdge(x1, y, x2, y, color, strokeWidth)\n        const generateGradientColor = (from, to, x1, y1, x2, y2) => {\n            const colorID = randomstring.generate(8)\n            views.defs.push(\n                <defs key={colorID}>\n                    <linearGradient id={colorID} x1={x1} y1={y1} x2={x2} y2={y2} gradientUnits=\"userSpaceOnUse\">\n                    <stop offset=\"20%\"  stopColor={from} />\n                    <stop offset=\"80%\" stopColor={to} />\n                    </linearGradient>\n                </defs>\n            )\n            return `url('#${colorID}')`\n        }\n\n        // Arrange coornidates for each era node\n        views.nodes.root = {\n            x: this.nodeWidth * (dataView.branches.length - 1) / 2 + this.nodeOffsetX,\n            y: this.nodeOffsetY,\n            color: rootColor,\n            textColor: chroma(rootColor).darken(),\n            pins: [{...dataView.root, \n                textPieces: this.nodeTextCustomFold(dataView.root.text, 3, this.nodeTextFontSize * 1.5), \n                fullTextPieces: this.nodeTextCustomFold(dataView.root.text, 3, this.nodeTextFontSize * 1.5),\n                abstractPieces: this.nodeTextCustomFold(dataView.root.abstract, 3, this.nodeTextSecondaryFontSize * 1.5),\n                edits: this.props.userEdits[dataView.root.id]\n            }],\n            span: 3,\n            fullSpan: 3,\n            fontSize: this.nodeTextFontSize * 1.5,\n            secondaryFontSize: this.nodeTextSecondaryFontSize * 1.5,\n            lineHeight: this.nodeTextLineHeight * 1.5,\n            secondaryLineHeight: this.nodeTextSecondaryLineHeight * 1.5,\n        }\n        views.nodes.root.height = this.nodeHeight(views.nodes.root)\n        views.nodes.root.pins[0].x = views.nodes.root.x\n        views.nodes.root.pins[0].y = views.nodes.root.y\n\n        views.nodes.branches = dataView.branches.map((branch, branchID) => eras.map((era, eraID) => { return {\n            x: this.nodeWidth * branchID + this.nodeOffsetX,\n            y: 0,\n            color: branchColors[branchID],\n            textColor: branchTextColors[branchID],\n            pins: branchWithEra(branch, era),\n            era,\n            eraID,\n            clusterID: Math.floor(branchID / 2),\n            branchID,\n            fontSize: this.nodeTextFontSize,\n            secondaryFontSize: this.nodeTextSecondaryFontSize,\n            lineHeight: this.nodeTextLineHeight,\n            secondaryLineHeight: this.nodeTextSecondaryLineHeight,\n            height: 0,\n            edgeStrokeWidth: clusterStrokeWidth[Math.floor(branchID / 2)]\n        }}))\n        \n        views.nodes.branches.forEach((branch, branchID) => branch.forEach((node, eraID) => {\n            if (node.pins.length === 0) return\n            node.span = (branchID < numBranches - 1 && views.nodes.branches[branchID+1][eraID].pins.length === 0\n                && !this.disableTextBranchSpan && (!this.disableTextClusterSpan || branchID % 2 === 0)) ? 2 : 1\n            node.fullSpan = (branchID < numBranches - 1) ? this.nodeFullSpan : 1\n            node.pins.forEach(pin => {\n                pin.textPieces = this.nodeTextFold(pin.text, node.span)\n                pin.fullTextPieces = this.nodeTextFold(pin.text, node.fullSpan)\n                pin.abstractPieces = this.nodeTextSecondaryFold(pin.abstract, node.fullSpan)\n            })\n            node.height = this.nodeHeight(node)\n        }))\n\n        const horizon = views.nodes.root.height + this.horizonMarginTop\n        let _height = horizon + this.horizonMarginBottom\n        const erasHeight = eras.map((_, eraID) => {\n            views.nodes.branches.forEach(branch => branch[eraID].y = _height + this.nodeOffsetY)\n            const eraHeight = views.nodes.branches.reduce((prev, branch) => Math.max(prev, branch[eraID].height || 0), 0)\n            _height += eraHeight\n            return eraHeight\n        })\n\n        const nodesLookup = {}\n        views.nodes.branches.forEach(branch => branch.forEach(node => node.pins.forEach((pin, idx) => {\n            pin.x = node.x\n            pin.y = node.y + node.pins.slice(0, idx).reduce((prev, pin) => prev + (pin.textPieces.length + 0.4) * this.nodeTextLineHeight, 0)\n            nodesLookup[pin.id] = pin\n        })))\n\n        {\n            const node = views.nodes.root, nodeLeft = views.nodes.branches[0][0], nodeRight = views.nodes.branches[numBranches - 2][0]\n            addVerticalEdge(node.x, node.y, horizon, rootColor, this.strokeWidth)\n            addHorizontalEdge(nodeLeft.x, nodeRight.x, horizon, rootColor, this.strokeWidth)\n        }\n        views.nodes.branches.forEach((branch, branchID) => {\n            const _branch = branch.filter(node => node.pins.length > 0)\n            if (_branch.length === 0 && branchID % 2 === 1) return\n            const startEra = (branchID % 2 === 0) ? 0 : _branch[0].eraID\n            let endEra = (_branch.length > 0) ? _branch[_branch.length-1].eraID : 0\n            if (branchID % 2 === 0) {\n                const _nextBranch = views.nodes.branches[branchID+1].filter(node => node.pins.length > 0)\n                if (_nextBranch.length > 0) endEra = Math.max(endEra, _nextBranch[0].eraID)\n            }\n            const shrinkFlag = !this.disableTextBranchSpan && (!(this.disableTextClusterSpan && branchID % 2 === 0))\n            for (let eraID = startEra + 1; eraID <= endEra; eraID++) {\n                let node = branch[eraID]\n                let sib = branchID > 0 ? views.nodes.branches[branchID-1][eraID] : null\n                const yStart = (shrinkFlag && node.pins.length === 0 && ((branchID > 0 && sib.pins.length > 0) || (eraID === endEra))) ? (node.y - this.nodeRadius - this.nodeTextLineHeight) : node.y\n                node = branch[eraID-1]\n                sib = branchID > 0 ? views.nodes.branches[branchID-1][eraID-1] : null\n                const yEnd = (shrinkFlag && node.pins.length === 0 && branchID > 0 && sib.pins.length > 0) ? (node.y - this.nodeOffsetY + sib.height - this.nodePaddingBottom + this.nodeTextLineHeight) : node.y\n                addVerticalEdge(node.x, yStart, yEnd, node.color, node.edgeStrokeWidth)\n            }\n            if (branchID % 2 === 0) {\n                const node = branch[0]\n                const sib = branchID > 0 ? views.nodes.branches[branchID-1][0] : null\n                const yEnd = (shrinkFlag && node.pins.length === 0 && branchID > 0 && sib.pins.length > 0) ? (node.y - this.nodeRadius - this.nodeTextLineHeight) : node.y\n                addVerticalEdge(node.x, horizon, yEnd, generateGradientColor(rootColor, node.color, node.x, horizon, node.x, yEnd), node.edgeStrokeWidth)\n            } else {\n                const node = branch[startEra]\n                const sib = views.nodes.branches[branchID-1][startEra]\n                const yEnd = node.y - this.nodeRadius - this.nodeTextLineHeight\n                const yStart = node.y\n                addVerticalEdge(node.x, yStart, yEnd, node.color, node.edgeStrokeWidth)\n                addHorizontalEdge(node.x, sib.x, yEnd, generateGradientColor(node.color, sib.color, node.x, yEnd, sib.x, yEnd), node.edgeStrokeWidth)\n            }\n        })\n        \n        const onEdit = (action, source, param) => {\n            const userEdits = this.props.userEdits\n            if (!userEdits[source.id] && (action === \"thumb-up\" || action === \"thumb-down\" || action === \"exchange\")) {\n                userEdits[source.id] = {rate: 0, clusterID: source.clusterID}\n            }\n            if (action === \"thumb-up\" && userEdits[source.id].rate <= 0) {\n                userEdits[source.id].rate = 1\n                this.props.onEditChange(userEdits)\n            } else if (action === \"thumb-down\" && userEdits[source.id].rate >= 0) {\n                userEdits[source.id].rate = -1\n                this.props.onEditChange(userEdits)\n            } else if (action === \"thumb-delete\" && userEdits[source.id] && userEdits[source.id].rate !== 0) {\n                userEdits[source.id].rate = 0\n                this.props.onEditChange(userEdits)\n            } else if (action === \"to-exchange\" && this.state.toExchange === null) {\n                this.setState({toExchange: source})\n                this.props.onEditChange(userEdits)\n            } else if (action === \"exchange\") {\n                userEdits[source.id].clusterID = param\n                this.setState({toExchange: null})\n                this.props.onEditChange(userEdits)\n            }\n        }\n\n        \n        const extendedBottomY = views.nodes.branches.map(branch => branch[branch.length-1]).reduce((prev, node) =>\n            Math.max(prev, _.max(node.pins.map(pin => \n                pin.y + 2 * (pin.fullTextPieces.length * node.lineHeight + pin.abstractPieces.length * node.secondaryLineHeight)\n            )) || 0), _height)\n\n        const renderNodes = _.flattenDeep(views.nodes.branches).sort((a, b) => (a.eraID === b.eraID) ? (b.branchID - a.branchID) : (b.eraID - a.eraID))\n        renderNodes.push(views.nodes.root)\n\n        const _width = this.nodeWidth * dataView.branches.length\n        const clusterLabelTextPieces = this.clusterNames.map(name => name.split(' '))\n        const clusterLabelTexts = clusterLabelTextPieces.map((pieces, _idx) => \n            <text key={_idx}>\n                {pieces.reverse().map((_text, idx) => <tspan key={idx} x=\"0\" y={-idx * this.labelTextLineHeight}>{_text}</tspan>)}\n            </text>\n        )\n        const clusterLabelsHeight = clusterLabelTextPieces.reduce((prev, pieces) => Math.max(prev, pieces.length), 0) * this.labelTextLineHeight\n        _height += clusterLabelsHeight + this.labelTextLineHeight\n\n        const extendedHeight = Math.max(this.labelTextLineHeight * 1.5, extendedBottomY - _height)\n        const backgroundSolidColors = clusterColors.map(color => chroma(color).luminance(0.9))\n        const backgroundTextSolidColors = clusterColors.map(color => chroma(color).luminance(0.7))\n        const backgroundGradientSolidColors = clusterColors.map((color, idx) => {\n            const x = views.nodes.branches[idx*2][eras.length-1].x\n            return generateGradientColor(chroma(color).luminance(0.9), \"white\", x, _height, x, _height+extendedHeight)\n        })\n        const backgroundSelectionColors = clusterColors.map(color => chroma(color).luminance(0.5))\n        const backgroundTextSelectionColors = clusterColors.map(color => chroma(color).luminance(0.2))\n        const backgroundGradientSelectionColors = clusterColors.map((color, idx) => {\n            const x = views.nodes.branches[idx*2][eras.length-1].x\n            return generateGradientColor(chroma(color).luminance(0.5), \"white\", x, _height, x, _height+extendedHeight)\n        })\n\n        return <svg className=\"mrt\" id={this.props.id} width=\"100%\" viewBox={`0 0 ${_width} ${_height+extendedHeight}`}>\n            {views.defs}\n            <filter id=\"blur-filter\">\n                <feGaussianBlur stdDeviation={this.nodeTextLineHeight} in=\"SourceGraphic\"/>\n            </filter>\n            {\n                <g className=\"mrt-background\">\n                    <rect x=\"0\" y=\"0\" width={_width} height={horizon} fill={chroma(rootColor).luminance(0.9)}></rect>\n                </g>\n            }\n            {\n                clusterLabelTexts.map((texts, idx) => {\n                    return <g className=\"mrt-background\" key={idx} opacity={this.state.toExchange === null ? 1 : 0}>\n                        <rect x={this.nodeWidth*idx*2} y={horizon} width={this.nodeWidth*2} height={_height-horizon} fill={backgroundSolidColors[idx]}/>\n                        <rect x={this.nodeWidth*idx*2} y={_height} width={this.nodeWidth*2} height={extendedHeight} fill={backgroundGradientSolidColors[idx]}/>\n                        <g transform={`translate(${this.nodeWidth*idx*2+this.nodeOffsetX}, ${_height-this.labelTextLineHeight/2})`} fill={backgroundTextSolidColors[idx]} fontSize={this.labelTextFontSize}>{texts}</g>\n                    </g>\n                })\n            }\n            {\n                eras.map((era, idx) => \n                <g key={idx} className=\"mrt-era-background\" transform={`translate(0, ${views.nodes.branches[0][idx].y - this.nodeRadius - this.nodePaddingTop + erasHeight[idx]})`}>\n                    <rect className=\"mrt-era-background\" x=\"0\" y={-erasHeight[idx]} width={_width} height={erasHeight[idx]} opacity={(idx === this.state.focusEraIndex) ? 0.1 : 0}/>\n                    <text className=\"mrt-era-background\" fontSize={this.labelTextFontSize} x={this.nodePaddingLeft} y={-this.labelTextFontSize/2} opacity={(idx === this.state.focusEraIndex) ? 0.2 : 0}>\n                        {era.from === era.to ? era.from : `${era.from} - ${era.to}`}\n                    </text>\n                </g>)\n            }\n            {\n                views.nodes.branches.map((branch, idx) => {\n                    if (idx % 2 !== 0) return <text key={idx}/>\n                    const _branch = branch.filter(node => node.pins.length > 0)\n                    const _sibBranch = views.nodes.branches[idx+1].filter(node => node.pins.length > 0)\n                    if (_branch.length === 0 && _sibBranch.length === 0) return <text key={idx}/>\n                    const fontSize = this.nodeTextFontSize * 2\n                    const y = ((_branch.length === 0 || (_sibBranch.length > 0 && _sibBranch[0].eraID <= _branch[0].eraID)) ?\n                        (_sibBranch[0].y - this.nodeRadius - this.nodeTextLineHeight / 2) :\n                        (_branch[0].y - this.nodeTextLineHeight)) - fontSize / 2\n                    const x = branch[0].x + this.nodeRadius + this.nodeTextLeadingMargin\n                    const color = chroma(branchColors[idx]).darken(2)\n                    return <text key={idx} x={x} y={y} fill={color} fontSize={fontSize}>{this.clusterNames[Math.floor(idx / 2)]}</text>\n                })\n            }\n            {views.edges}\n            {renderNodes.map((node, idx) => node.pins.length > 0 &&\n                <NodeCircle key={idx} node={node}\n                            radius={this.nodeRadius}\n                            lineHeight={this.nodeTextLineHeight}\n                            color={node.color}\n                            strokeWidth={this.strokeWidth}\n                            onHover={(hover) => \n                                this.setState({...this.state,\n                                    focusEraIndex: hover ? node.eraID : -1\n                                })   \n                            }/>\n            )}\n            <g className=\"mrt-links\">\n            {renderNodes.map((node, idx) => node.pins.length > 0 && node !== views.nodes.root &&\n                <NodeLinks key={idx}\n                    linksVisibility={this.state.linksVisibility}\n                    node={node}\n                    nodesLookup={nodesLookup}\n                    nodePaddingLeft={this.nodePaddingLeft}\n                    radius={this.nodeRadius}\n                    lineHeight={this.nodeTextLineHeight}\n                />)\n            }\n            </g>\n            <g className=\"mrt-node-text-container\">\n            {renderNodes.map((node, idx) => node.pins.length > 0 &&\n                <NodeText key={idx}\n                      node={node}\n                      pins={node.pins} \n                      x={node.x} y={node.y}\n                      radius={this.nodeRadius}\n                      lineHeight={node.lineHeight}\n                      secondaryLineHeight={node.secondaryLineHeight}\n                      textWidth={(node.span - 1) * this.nodeWidth + this.nodeTextWidth}\n                      fullTextWidth={(node.fullSpan - 1) * this.nodeWidth + this.nodeTextWidth}\n                      color={node.color}\n                      fontSize={node.fontSize}\n                      secondaryFontSize={node.secondaryFontSize}\n                      strokeWidth={this.strokeWidth}\n                      onEdit={onEdit}\n                      textLeadingMargin={this.nodeTextLeadingMargin}\n                      editable={typeof(node.clusterID) !== \"undefined\"}\n                      editButtonMarginTop={this.nodeEditButtonMarginTop}\n                      scaleOrigin={(node.clusterID === numClusters - 1) ? \"right\" : ((node.branchID === numBranches - 3) ? \"middle\" : \"left\")}\n                      linksVisibility={this.state.linksVisibility}\n                      onSwitchLinksVisibility={(id, visible) => this.onSwitchLinksVisibility(id, visible)}\n                      lang={this.props.lang}\n                      onCardOpen={this.props.onCardOpen}/>)}\n            </g>\n            {\n                clusterLabelTexts.map((texts, idx) => {\n                    const isCurrent = this.state.toExchange !== null && idx === this.state.toExchange.clusterID\n                    return <g className=\"mrt-background\" key={idx} opacity={this.state.toExchange === null ? 0 : 1} visibility={this.state.toExchange === null ? \"hidden\" : \"none\"} onClick={() => onEdit(\"exchange\", this.state.toExchange, idx)}>\n                        <rect className=\"mrt-background-card\" x={this.nodeWidth*idx*2} y={horizon} width={this.nodeWidth*2} height={_height-horizon} fill={backgroundSelectionColors[idx]}/>\n                        <rect className=\"mrt-background-card\" x={this.nodeWidth*idx*2} y={_height} width={this.nodeWidth*2} height={extendedHeight} fill={backgroundGradientSelectionColors[idx]}/>\n                        <g className=\"mrt-background-text\" style={{textDecoration: isCurrent ? \"underline\" : \"\"}} transform={`translate(${this.nodeWidth*idx*2+this.nodeOffsetX}, ${_height-this.labelTextLineHeight/2})`} fill={backgroundTextSelectionColors[idx]} fontSize={this.labelTextFontSize}>{texts}</g>\n                    </g>\n                })\n            }\n            {\n                <g opacity=\"0.5\" transform={`translate(${_width}, ${_height+extendedHeight-this.labelTextLineHeight * 0.5})`}>                    \n                    <Logo x={-this.labelTextFontSize * 3.35} y={-this.labelTextFontSize * 1.78} height={this.labelTextFontSize * 0.8} width={this.labelTextFontSize * 0.8}/>\n                    <text x={-this.labelTextFontSize * 0.1} y={-this.labelTextFontSize * 0.05} textAnchor=\"end\"\n                        fontSize={this.labelTextFontSize * 0.75} fill={chroma(\"grey\").luminance(0.3).hex()}>{(this.props.authors || []).join(', ')}\n                    </text>\n                    <text x={-this.labelTextFontSize * 0.1} y={-this.labelTextFontSize * 1} textAnchor=\"end\"\n                        fontSize={this.labelTextFontSize * 0.7} fill={chroma(\"grey\").luminance(0.3).hex()}>AMiner\n                    </text>\n                </g>\n            }\n        </svg>\n    }\n}","import React from 'react'\nimport { Icon } from 'antd'\nimport chroma from 'chroma-js'\nimport './tool.css'\n\nexport default class Tool extends React.Component {\n\n    onClick() {\n        if (this.props.onClick) this.props.onClick()\n    }\n\n    render() {\n        const luminance = this.props.luminance || (this.props.primary ? 0.4 : 0.2)\n        const color = chroma(this.props.color).luminance(luminance)\n        const textColor = color.luminance(luminance / 2)\n        const icon = (this.props.theme !== \"twoTone\") \n            ? <Icon className=\"toolicon\" type={this.props.type} theme={this.props.theme} onClick={() => this.onClick()} style={{color: color.hex()}}/>\n            : <Icon className=\"toolicon\" type={this.props.type} theme={this.props.theme} onClick={() => this.onClick()} twoToneColor={color.hex()}/>\n        return (\n            <div className={`tool tooltip ${this.props.primary ? \"primary\" : \"secondary\"} ${this.props.className}`}>\n                {icon}\n                <span className=\"tooltip-text\" style={{color: textColor.hex()}}>{this.props.tooltipText}</span>\n                {this.props.children}\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport { Carousel } from 'antd'\nimport img1 from './images/guide1.jpg'\nimport img2 from './images/guide2.jpg'\nimport img3 from './images/guide3.jpg'\nimport img4 from './images/guide4.jpg'\nimport img5 from './images/guide5.jpg'\nimport img6 from './images/guide6.jpg'\nimport img7 from './images/guide7.jpg'\nimport img8 from './images/guide8.jpg'\nimport './helper.css'\nimport texts from './helper-text.json'\n\nexport default class Helper extends React.Component {\n    render() {\n        const lang = this.props.lang || \"en\"\n        const images = [img1, img2, img3, img4, img5, img6, img7, img8]\n        return (\n            <Carousel className=\"helper\" autoplay>{ images.map((img, idx) => {\n                return <div className=\"helper-tab\" key={idx}>\n                    <img alt={texts[idx][\"title\"][lang]} src={img}/>\n                    <div className=\"helper-content\">\n                        <h3>{texts[idx][\"title\"][lang]}</h3>\n                        <p>{texts[idx][\"description\"][lang]}</p>\n                    </div>\n                </div>\n            })}</Carousel>\n        )\n    }\n}","import React from 'react'\nimport QRCode from 'qrcode'\nimport './toolbox.css'\nimport Tool from './tool'\nimport TooltipTextTranslation from './tooltip-text-translation.json'\nimport Helper from './helper'\nimport { Modal } from 'antd'\n\nexport class Toolbox extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = { helperVisible: false }\n    }\n\n    render() {\n        setTimeout(() => {\n            QRCode.toCanvas(document.getElementById(\"mrt-share-qrcode-canvas\"), window.location.href, (e) => { if (e) console.error(e) })\n        }, 500)\n        const lang = this.props.lang || \"en\"\n        const translation = TooltipTextTranslation[lang]\n        const t = (text) => (translation && translation[text.toLowerCase()]) ? translation[text.toLowerCase()] : text\n        return (\n            <div>\n                <div className=\"toolgroup horizontal\">\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"heart\" theme={this.props.like ? \"filled\" : \"twoTone\"} color=\"red\" tooltipText={t(this.props.like ? \"Dislike\" : \"Like\")} primary onClick={() => this.props.onLike()}/>\n                    </div>\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool className=\"toolgroup\" type=\"question-circle\" theme=\"outlined\" color=\"yellow\" tooltipText={t(\"Guide\")} primary onClick={() => this.setState({helperVisible: true})}/>\n                    </div>\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"share-alt\" theme=\"outlined\" color=\"green\" tooltipText={t(\"Share\")} primary/>\n                        <Tool className=\"qrcode-icon\" type=\"qrcode\" theme=\"outlined\" color=\"green\" tooltipText={t(\"QR Code\")}>\n                            <canvas className=\"qrcode\" id=\"mrt-share-qrcode-canvas\"/>\n                        </Tool>\n                    </div>\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"font-size\" theme=\"outlined\" color=\"pink\" tooltipText={t(\"Font Size\")} primary/>\n                        <Tool type=\"zoom-in\" theme=\"outlined\" color=\"pink\" tooltipText={t(\"Larger Font\")} onClick={() => this.props.scaleFont(true)}/>\n                        <Tool type=\"zoom-out\" theme=\"outlined\" color=\"pink\" tooltipText={t(\"Smaller Font\")} onClick={() => this.props.scaleFont(false)}/>\n                    </div>\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"search\" theme=\"outlined\" color=\"aquamarine\" tooltipText={t(\"Zoom\")} primary/>\n                        <Tool type=\"zoom-in\" theme=\"outlined\" color=\"aquamarine\" tooltipText={t(\"Zoom In\")} onClick={() => this.props.zoom(true)}/>\n                        <Tool type=\"zoom-out\" theme=\"outlined\" color=\"aquamarine\" tooltipText={t(\"Zoom Out\")} onClick={() => this.props.zoom(false)}/>\n                    </div>\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"download\" theme=\"outlined\" color=\"blue\" tooltipText={t(\"Download\")} primary/>\n                        <Tool type=\"file-image\" theme=\"twoTone\" color=\"blue\" tooltipText={t(\"Full Picture\")} onClick={() => this.props.capture(true)}/>\n                        <Tool type=\"camera\" theme=\"twoTone\" color=\"blue\" tooltipText={t(\"Snapshot\")} onClick={() => this.props.capture(false)}/>\n                    </div>\n                    <div className=\"toolgroup secondary vertical\">\n                        <Tool type=\"control\" theme=\"outlined\" color=\"teal\" tooltipText={t(\"Control\")} primary/>\n                        <Tool type={`eye${this.props.hideSubBranch ? \"\" : \"-invisible\"}`} theme=\"twoTone\" color=\"teal\" onClick={() => this.props.onHideSubBranch()}\n                            tooltipText={t(this.props.hideSubBranch ? \"Display Sub Branch\" : \"Hide Sub Branch\")}/>\n                        <Tool type=\"column-width\" theme=\"outlined\" color=\"teal\" onClick={() => this.props.onDisableTextClusterSpan()}\n                            tooltipText={t(this.props.disableTextClusterSpan ? \"Enable Text Span\" : \"Disable Text Span\")}/>\n                        {this.props.onLoadJson && \n                        <Tool type=\"folder-open\" theme=\"outlined\" color=\"teal\" onClick={() => document.getElementById(\"mrt-file-load-input\").click()}\n                            tooltipText={t(\"Load JSON\")}/>}\n                        <input id=\"mrt-file-load-input\" type=\"file\" hidden onChange={(e) => this.props.onLoadJson(e)}/>\n                    </div>\n                    <div className=\"toolgroup vertical\">\n                        <Tool className=\"toolgroup\" type=\"appstore\" theme=\"outlined\" color=\"purple\" tooltipText={t(\"Toolbox\")} primary/>\n                    </div>\n                </div>\n                <Modal title={t(\"Guide\")} visible={this.state.helperVisible} onCancel={() => this.setState({helperVisible: false})} footer={null} width={\"50%\"} bodyStyle={{padding: \"1rem\"}}>\n                    <Helper lang={this.props.lang}/>\n                </Modal>\n            </div>\n        )\n    }\n\n}\n","import React from 'react'\nimport MRTViewer from './mrt-viewer'\nimport './index.css'\nimport svgLib from 'save-svg-as-png'\nimport { Toolbox } from './toolbox/index'\n// import MRTCard from './mrt-card'\nimport 'antd/dist/antd.css'\n// import _ from 'lodash'\n\nexport default class MRT extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            like: this.props.like || false,\n            viewerScale: 100,\n            hideSubBranch: false,\n            disableTextClusterSpan: false,\n            fontExtraSize: 0,\n            // cardVisibility: {}\n        }\n        this.generated = false\n    }\n\n    capture(full) {\n        if (full)\n            svgLib.saveSvgAsPng(document.getElementById(\"mrt-viewer\"), `master-reading-tree.png`)\n        else {\n            const srcWidth = document.getElementById(\"mrt-viewer\").viewBox.baseVal.width\n            const outputWidth = document.body.clientWidth\n            svgLib.saveSvgAsPng(document.getElementById(\"mrt-viewer\"), `master-reading-tree-snapshot.png`, {scale: outputWidth / srcWidth})\n        }\n    }\n\n    zoom(larger) {\n        this.setState({...this.state, viewerScale: Math.min(Math.max(this.state.viewerScale + (larger ? 10 : -10), 100), 1000)})\n    }\n\n    scaleFont(larger) {\n        this.setState({...this.state, fontExtraSize: Math.max(0, Math.min(10, this.state.fontExtraSize + (larger ? 2 : -2)))})\n    }\n\n    onLoadJson(e) {\n        if (e.target.files.length === 0) return\n        const reader = new FileReader()\n        reader.onload = (e) => {\n            if (this.props.onLoadJson) this.props.onLoadJson(JSON.parse(e.target.result))\n        }\n        reader.readAsText(e.target.files[0])\n    }\n\n    // onCardSet(key, value) {\n    //     const cardVisibility = this.state.cardVisibility\n    //     if (value === null) delete cardVisibility[key]\n    //     else cardVisibility[key] = value\n    //     this.setState({cardVisibility})\n    // }\n\n    render() {\n        return (\n            <div className=\"mrt-container\" style={{width: `${this.state.viewerScale}%`}}>\n                <Toolbox lang={this.props.lang}\n                    onLike={() => this.props.onLike()} like={this.props.like}\n                    onHideSubBranch={() => this.setState({hideSubBranch: !this.state.hideSubBranch})} hideSubBranch={this.state.hideSubBranch}\n                    onDisableTextClusterSpan={() => this.setState({disableTextClusterSpan: !this.state.disableTextClusterSpan})} disableTextClusterSpan={this.state.disableTextClusterSpan}\n                    onLoadJson={this.props.onLoadJson ? (e) => this.onLoadJson(e) : undefined}\n                    scaleFont={(larger) => this.scaleFont(larger)}\n                    zoom={(larger) => this.zoom(larger)}\n                    capture={(full) => this.capture(full)}\n                />\n                <MRTViewer id=\"mrt-viewer\" data={this.props.data} userEdits={this.props.userEdits} \n                    hideSubBranch={this.state.hideSubBranch} disableTextClusterSpan={this.state.disableTextClusterSpan}\n                    fontExtraSize={this.state.fontExtraSize}\n                    authors={this.props.authors}\n                    onEditChange={this.props.onEditChange}\n                    onCardOpen={(pin) => this.onCardSet(pin.id, pin)}\n                    lang={this.props.lang}/>\n                {/* {_.map(this.state.cardVisibility, (value, key) => \n                    <MRTCard key={key} paper={value} onCardClose={() => this.onCardSet(key, null)}/>\n                )} */}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport sample_data from './sample.json';\nimport MRT from './components';\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props)\n    this.state = {data: sample_data, like: false, userEdits: {}}\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MRT data={this.state.data} authors={[\"Somefive\", \"Rainatum\"]} onLoadJson={(data) => this.setState({data})}\n          onLike={() => this.setState({like: !this.state.like})} like={this.state.like}\n          onEditChange={(edits) => this.setState({userEdits: edits})} userEdits={this.state.userEdits}\n          lang=\"en\"/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}